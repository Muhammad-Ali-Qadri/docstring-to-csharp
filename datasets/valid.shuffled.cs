public static string StripExtension(string filename){int idx = filename.IndexOf('.');if (idx != -1){filename = filename.Substring(0, idx);}return filename;}
public virtual RefUpdate.Result Update(RevWalk walk){RequireCanDoUpdate();try{return result = UpdateImpl(walk, new _Store_484(this));}catch (IOException x){result = RefUpdate.Result.IO_FAILURE;throw;}}
public virtual IList<IToken> GetTokens(int start, int stop){return GetTokens(start, stop, null);}
public static TermGroupFacetCollector CreateTermGroupFacetCollector(string groupField,string facetField,bool facetFieldMultivalued,BytesRef facetPrefix,int initialSize){if (facetFieldMultivalued){return new MV(groupField, facetField, facetPrefix, initialSize);}else{return new SV(groupField, facetField, facetPrefix, initialSize);}}
public void SetTabIdArray(short[] array){_tabids = array;}
public RefCount(T @object){this.m_object = @object;}
public virtual DeleteRouteResponse DeleteRoute(DeleteRouteRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteRouteRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteRouteResponseUnmarshaller.Instance;return Invoke<DeleteRouteResponse>(request, options);}
public virtual DescribeElasticGpusResponse DescribeElasticGpus(DescribeElasticGpusRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeElasticGpusRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeElasticGpusResponseUnmarshaller.Instance;return Invoke<DescribeElasticGpusResponse>(request, options);}
public virtual void clear(){java.util.Iterator<E> it = iterator();while (it.hasNext()){it.next();it.remove();}}
public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[UNITS]\n");buffer.Append("    .units                = ").Append("0x").Append(HexDump.ToHex(Units)).Append(" (").Append(Units).Append(" )");buffer.Append(Environment.NewLine);buffer.Append("[/UNITS]\n");return buffer.ToString();}
public static void fill(long[] array, long value){{for (int i = 0; i < array.Length; i++){array[i] = value;}}}
public virtual void BuildFieldConfig(FieldConfig fieldConfig){IDictionary<string, float?> fieldBoostMap = this.config.Get(ConfigurationKeys.FIELD_BOOST_MAP);if (fieldBoostMap != null){float? boost;if (fieldBoostMap.TryGetValue(fieldConfig.Field, out boost) && boost != null){fieldConfig.Set(ConfigurationKeys.BOOST, boost);}}}
public virtual PutLifecyclePolicyResponse PutLifecyclePolicy(PutLifecyclePolicyRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutLifecyclePolicyRequestMarshaller.Instance;options.ResponseUnmarshaller = PutLifecyclePolicyResponseUnmarshaller.Instance;return Invoke<PutLifecyclePolicyResponse>(request, options);}
public override bool Equals(ATNConfig a, ATNConfig b){if (a == b){return true;}if (a == null || b == null){return false;}return a.state.stateNumber == b.state.stateNumber && a.context.Equals(b.context);}
public virtual UpdateUserProfileResponse UpdateUserProfile(UpdateUserProfileRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateUserProfileRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateUserProfileResponseUnmarshaller.Instance;return Invoke<UpdateUserProfileResponse>(request, options);}
protected internal SubmoduleStatusCommand(Repository repo) : base(repo){paths = new AList<string>();}
public virtual GetUsagePlanKeysResponse GetUsagePlanKeys(GetUsagePlanKeysRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetUsagePlanKeysRequestMarshaller.Instance;options.ResponseUnmarshaller = GetUsagePlanKeysResponseUnmarshaller.Instance;return Invoke<GetUsagePlanKeysResponse>(request, options);}
public virtual ListTrialComponentsResponse ListTrialComponents(ListTrialComponentsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListTrialComponentsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListTrialComponentsResponseUnmarshaller.Instance;return Invoke<ListTrialComponentsResponse>(request, options);}
public void SetProperty(IRow row, int column){ICell cell = CellUtil.GetCell(row, column);CellUtil.SetCellStyleProperty(cell, _workbook, _propertyName, _propertyValue);}
public PatternCaptureGroupFilterFactory(IDictionary<string, string> args): base(args){pattern = GetPattern(args, "pattern");preserveOriginal = args.TryGetValue("preserve_original", out string value) ? bool.Parse(value) : true;}
public override string getActions(){return null;}
public PipedWriter(java.io.PipedReader destination) : base(destination){throw new System.NotImplementedException();}
public virtual GetDeploymentInstanceResponse GetDeploymentInstance(GetDeploymentInstanceRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDeploymentInstanceRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDeploymentInstanceResponseUnmarshaller.Instance;return Invoke<GetDeploymentInstanceResponse>(request, options);}
public static void advise(FileDescriptor fd, long offset, long len, int advise) throws IOException{int code = posix_fadvise(fd, offset, len, advise);if (code != 0){throw new Exception("posix_fadvise failed code=" + code);}}
public ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0){return doFixed(arg0, new NumberEval(2), BoolEval.FALSE, srcRowIndex, srcColumnIndex);}
public override int size(){return a.Length;}
public NPOI.SS.UserModel.IName CreateName(){NameRecord nameRecord = workbook.CreateName();HSSFName newName = new HSSFName(this, nameRecord);names.Add(newName);return newName;}
public static bool EndsWith(char[] s, int len, string suffix){int suffixLen = suffix.Length;if (suffixLen > len){return false;}for (int i = suffixLen - 1; i >= 0; i--){if (s[len - (suffixLen - i)] != suffix[i]){return false;}}return true;}
public virtual RegisterApplicationRevisionResponse RegisterApplicationRevision(RegisterApplicationRevisionRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterApplicationRevisionRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterApplicationRevisionResponseUnmarshaller.Instance;return Invoke<RegisterApplicationRevisionResponse>(request, options);}
public virtual SendTestEventNotificationResponse SendTestEventNotification(SendTestEventNotificationRequest request){var options = new InvokeOptions();options.RequestMarshaller = SendTestEventNotificationRequestMarshaller.Instance;options.ResponseUnmarshaller = SendTestEventNotificationResponseUnmarshaller.Instance;return Invoke<SendTestEventNotificationResponse>(request, options);}
public AuthorizeSecurityGroupIngressRequest(string groupName, List<IpPermission> ipPermissions){_groupName = groupName;_ipPermissions = ipPermissions;}
public virtual DescribeTagsResponse DescribeTags(DescribeTagsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeTagsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeTagsResponseUnmarshaller.Instance;return Invoke<DescribeTagsResponse>(request, options);}
public RawCharSequence(byte[] buf, int start, int end){buffer = buf;startPtr = start;endPtr = end;}
public virtual GetFaceSearchResponse GetFaceSearch(GetFaceSearchRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetFaceSearchRequestMarshaller.Instance;options.ResponseUnmarshaller = GetFaceSearchResponseUnmarshaller.Instance;return Invoke<GetFaceSearchResponse>(request, options);}
public SearchFaceRequest(): base("LinkFace", "2018-07-20", "SearchFace"){Protocol = ProtocolType.HTTPS;Method = MethodType.POST;}
public IQueryNode DisjQuery(string field){IQueryNode first, c;List<IQueryNode> clauses = null;first = ConjQuery(field);while (true){switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk){case RegexpToken.OR:;break;default:jj_la1[5] = jj_gen;goto label_2_break;}Jj_consume_token(RegexpToken.OR);c = ConjQuery(field);if (clauses == null){clauses = new List<IQueryNode>();clauses.Add(first);}clauses.Add(c);}label_2_break:if (clauses != null){{ if (true) return new OrQueryNode(clauses); }}else{{ if (true) return first; }}throw new Exception("Missing return statement in function");}
public IRequest Marshall(GetPolicyRequest publicRequest){IRequest request = new DefaultRequest(publicRequest, "Amazon.Lambda");request.Headers[Amazon.Util.HeaderKeys.XAmzApiVersion] = "2015-03-31";request.HttpMethod = "GET";if (!publicRequest.IsSetFunctionName())throw new AmazonLambdaException("Request object does not have required field FunctionName set");request.AddPathResource("{FunctionName}", StringUtils.FromString(publicRequest.FunctionName));if (publicRequest.IsSetQualifier())request.Parameters.Add("Qualifier", StringUtils.FromString(publicRequest.Qualifier));request.ResourcePath = "/2015-03-31/functions/{FunctionName}/policy";request.MarshallerVersion = 2;request.UseQueryString = true;return request;}
public override bool contains(object o){return this._enclosing.containsKey(o);}
public UncalcedRecord(){_reserved = 0;}
public static PageOrder ValueOf(int value){return _table[value];}
public virtual java.util.ListIterator<E> listIterator(){object[] snapshot = elements;return new java.util.concurrent.CopyOnWriteArrayList.CowIterator<E>(snapshot, 0,snapshot.Length);}
public AlphaAnimation(float fromAlpha, float toAlpha){mFromAlpha = fromAlpha;mToAlpha = toAlpha;}
public override Object Clone(){AreaRecord rec = new AreaRecord();rec.field_1_formatFlags = field_1_formatFlags;return rec;}
public override String ToFormulaString(){StringBuilder sb = new StringBuilder();if (externalWorkbookNumber >= 0){sb.Append('[');sb.Append(externalWorkbookNumber);sb.Append(']');}if (sheetName != null){sb.Append(sheetName);}sb.Append('!');sb.Append(ErrorConstants.GetText(ErrorConstants.ERROR_REF));return sb.ToString();}
public bool IsAllSet(int holder){return ((holder & this._mask) == this._mask);}
public virtual long RamBytesUsed(){lock (this) return ordsCache.Sum(pair => pair.Value.RamBytesUsed());}
public virtual DescribeConversionTasksResponse DescribeConversionTasks(DescribeConversionTasksRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeConversionTasksRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeConversionTasksResponseUnmarshaller.Instance;return Invoke<DescribeConversionTasksResponse>(request, options);}
public NPOI.SS.UserModel.ICellStyle GetColumnStyle(int column){short styleIndex = _sheet.GetXFIndexForColAt((short)column);if (styleIndex == 0xf){return null;}ExtendedFormatRecord xf = book.GetExFormatAt(styleIndex);return new HSSFCellStyle(styleIndex, xf, book);}
public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("  red           = ").Append(_red & 0xff).Append('\n');buffer.Append("  green         = ").Append(_green & 0xff).Append('\n');buffer.Append("  blue          = ").Append(_blue & 0xff).Append('\n');return buffer.ToString();}
public override PushConnection OpenPush(){throw new NGit.Errors.NotSupportedException(JGitText.Get().pushIsNotSupportedForBundleTransport);}
public virtual DeleteTransitGatewayMulticastDomainResponse DeleteTransitGatewayMulticastDomain(DeleteTransitGatewayMulticastDomainRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteTransitGatewayMulticastDomainRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteTransitGatewayMulticastDomainResponseUnmarshaller.Instance;return Invoke<DeleteTransitGatewayMulticastDomainResponse>(request, options);}
public virtual DescribeFleetsResponse DescribeFleets(DescribeFleetsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeFleetsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeFleetsResponseUnmarshaller.Instance;return Invoke<DescribeFleetsResponse>(request, options);}
public void PreWrite(){List<Property> properties = new List<Property>(_properties.Count);for (int i = 0; i < _properties.Count; i++)properties.Add(_properties[i]);for (int k = 0; k < properties.Count; k++){properties[ k ].Index = k;}_blocks = PropertyBlock.CreatePropertyBlockArray(_bigBigBlockSize, properties);for (int k = 0; k < properties.Count; k++){properties[ k ].PreWrite();}}
public InMemorySorter(IComparer<BytesRef> comparer){this.comparer = comparer;}
public virtual DeleteGroupMembershipResponse DeleteGroupMembership(DeleteGroupMembershipRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteGroupMembershipRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteGroupMembershipResponseUnmarshaller.Instance;return Invoke<DeleteGroupMembershipResponse>(request, options);}
public virtual E pop(){return removeFirstImpl();}
public static BATBlock CreateBATBlock(POIFSBigBlockSize bigBlockSize, ByteBuffer data){BATBlock block = new BATBlock(bigBlockSize);byte[] buffer = new byte[LittleEndianConsts.INT_SIZE];for (int i = 0; i < block._values.Length; i++){data.Read(buffer);block._values[i] = LittleEndian.GetInt(buffer);}block.RecomputeFree();return block;}
public override long RamBytesUsed(){long sizeInByes = ((postingsReader != null) ? postingsReader.RamBytesUsed() : 0);foreach (FieldReader reader in fields.Values){sizeInByes += reader.RamBytesUsed();}return sizeInByes;}
public virtual NGit.Api.LsRemoteCommand SetUploadPack(string uploadPack){this.uploadPack = uploadPack;return this;}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_chartGroupIndex);}
public override string ToString(){return "MultiDocsAndPositionsEnum(" + Arrays.ToString(Subs) + ")";}
public override TextReader Create(TextReader input){return new JapaneseIterationMarkCharFilter(input, normalizeKanji, normalizeKana);}
public long CopyUsingLengthPrefix(BytesRef bytes){if (bytes.Length >= 32768){throw new System.ArgumentException("max length is 32767 (got " + bytes.Length + ")");}if (upto + bytes.Length + 2 > blockSize){if (bytes.Length + 2 > blockSize){throw new System.ArgumentException("block size " + blockSize + " is too small to store length " + bytes.Length + " bytes");}if (currentBlock != null){blocks.Add(currentBlock);blockEnd.Add(upto);}currentBlock = new byte[blockSize];upto = 0;}long pointer = GetPointer();if (bytes.Length < 128){currentBlock[upto++] = (byte)bytes.Length;}else{currentBlock[upto++] = unchecked((byte)(0x80 | (bytes.Length >> 8)));currentBlock[upto++] = unchecked((byte)(bytes.Length & 0xff));}Array.Copy(bytes.Bytes, bytes.Offset, currentBlock, upto, bytes.Length);upto += bytes.Length;return pointer;}
public void Execute(Lexer lexer){lexer.Mode(mode);}
public virtual int GetRenameScore(){return currentSource.renameScore;}
public ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1,ValueEval arg2, ValueEval arg3){throw new Exception("Incomplete code"+ " - don't know how to support the 'area_num' parameter yet)");}
public void AddDataValidation(DVRecord dvRecord){_validationList.Add(dvRecord);_headerRec.DVRecNo = (_validationList.Count);}
public virtual DisableAlarmActionsResponse DisableAlarmActions(DisableAlarmActionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DisableAlarmActionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DisableAlarmActionsResponseUnmarshaller.Instance;return Invoke<DisableAlarmActionsResponse>(request, options);}
public virtual ListAppsResponse ListApps(ListAppsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAppsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAppsResponseUnmarshaller.Instance;return Invoke<ListAppsResponse>(request, options);}
public virtual GetRelationalDatabaseLogEventsResponse GetRelationalDatabaseLogEvents(GetRelationalDatabaseLogEventsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetRelationalDatabaseLogEventsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetRelationalDatabaseLogEventsResponseUnmarshaller.Instance;return Invoke<GetRelationalDatabaseLogEventsResponse>(request, options);}
public virtual ListEmailIdentitiesResponse ListEmailIdentities(ListEmailIdentitiesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListEmailIdentitiesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListEmailIdentitiesResponseUnmarshaller.Instance;return Invoke<ListEmailIdentitiesResponse>(request, options);}
public SheetVector(RefEval re){_size = re.NumberOfSheets;_re = re;}
public static int[] copyOf(int[] original, int newLength){if (newLength < 0){throw new java.lang.NegativeArraySizeException();}return copyOfRange(original, 0, newLength);}
public virtual DescribeGameSessionsResponse DescribeGameSessions(DescribeGameSessionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeGameSessionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeGameSessionsResponseUnmarshaller.Instance;return Invoke<DescribeGameSessionsResponse>(request, options);}
public virtual TranslateTextResponse TranslateText(TranslateTextRequest request){var options = new InvokeOptions();options.RequestMarshaller = TranslateTextRequestMarshaller.Instance;options.ResponseUnmarshaller = TranslateTextResponseUnmarshaller.Instance;return Invoke<TranslateTextResponse>(request, options);}
public static string StripTags(string buf, int start){if (start > 0){buf = buf.Substring(0);}return Regex.Replace(buf, "<[^>]*>", " ");}
public override java.util.Iterator<K> iterator(){return new java.util.Hashtable<K, V>.KeyIterator(this._enclosing);}
public virtual DeregisterInstancesFromLoadBalancerResponse DeregisterInstancesFromLoadBalancer(DeregisterInstancesFromLoadBalancerRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeregisterInstancesFromLoadBalancerRequestMarshaller.Instance;options.ResponseUnmarshaller = DeregisterInstancesFromLoadBalancerResponseUnmarshaller.Instance;return Invoke<DeregisterInstancesFromLoadBalancerResponse>(request, options);}
public override int read(){if (buf == null){throw new System.IO.IOException();}if (pos < buf.Length){return (buf[pos++] & unchecked((int)(0xFF)));}return @in.read();}
public static java.nio.ByteOrder nativeOrder(){return NATIVE_ORDER;}
public virtual DescribeOrderableClusterOptionsResponse DescribeOrderableClusterOptions(){return DescribeOrderableClusterOptions(new DescribeOrderableClusterOptionsRequest());}
public void WriteShort(int v){_out.WriteShort(v);_size += 2;}
public sealed override short getShort(int index){checkIndex(index, libcore.io.SizeOf.SHORT);return libcore.io.Memory.peekShort(backingArray, offset + index, _order);}
public override java.nio.ByteBuffer putChar(char value){return putShort((short)value);}
public bool ShouldRefresh(){var now = DateTime.UtcNow.Ticks;return now - lastFailedRefreshTime > refreshIntervalInMillSeconds;}
public virtual void SetRefLogMessage(string msg, bool appendStatus){if (msg == null && !appendStatus){DisableRefLog();}else{if (msg == null && appendStatus){refLogMessage = string.Empty;refLogIncludeResult = true;}else{refLogMessage = msg;refLogIncludeResult = appendStatus;}}}
public virtual object[] toArray(){lock (mutex){return c.toArray();}}
public override bool Equals(object other){return (this.GetType() == other.GetType()) && this.EqualsSameType(other);}
public FlushInfo(int numDocs, long estimatedSegmentSize){this.NumDocs = numDocs;this.EstimatedSegmentSize = estimatedSegmentSize;}
public virtual SegToken Filter(SegToken token){switch (token.WordType){case WordType.FULLWIDTH_NUMBER:case WordType.FULLWIDTH_STRING: for (int i = 0; i < token.CharArray.Length; i++){if (token.CharArray[i] >= 0xFF10){token.CharArray[i] = (char)(token.CharArray[i] - 0xFEE0);}if (token.CharArray[i] >= 0x0041 && token.CharArray[i] <= 0x005A) {token.CharArray[i] = (char)(token.CharArray[i] + 0x0020);}}break;case WordType.STRING:for (int i = 0; i < token.CharArray.Length; i++){if (token.CharArray[i] >= 0x0041 && token.CharArray[i] <= 0x005A) {token.CharArray[i] = (char)(token.CharArray[i] + 0x0020);}}break;case WordType.DELIMITER: token.CharArray = Utility.COMMON_DELIMITER;break;default:break;}return token;}
public override void onChange(bool selfChange){this._enclosing.onContentChanged();}
public virtual void writeUTF(string str){throw new System.NotImplementedException();}
public virtual ICollection<RemoteRefUpdate> GetRemoteUpdates(){return Sharpen.Collections.UnmodifiableCollection(remoteUpdates.Values);}
public GetRepoSyncTaskListRequest(): base("cr", "2016-06-07", "GetRepoSyncTaskList", "cr", "openAPI"){UriPattern = "/repos/[RepoNamespace]/[RepoName]/syncTasks";Method = MethodType.GET;}
public virtual CreateLaunchTemplateVersionResponse CreateLaunchTemplateVersion(CreateLaunchTemplateVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateLaunchTemplateVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateLaunchTemplateVersionResponseUnmarshaller.Instance;return Invoke<CreateLaunchTemplateVersionResponse>(request, options);}
public CharSequence SubSequence(int start, int end){return new NGit.Util.RawCharSequence(buffer, startPtr + start, startPtr + end);}
public override void ParseLine(DocData docData, string line){string[] parts = new Regex("\\t").Split(line, 7);docData.ID = Convert.ToInt32(parts[0], CultureInfo.InvariantCulture);docData.Name = parts[1];string latitude = parts[4];string longitude = parts[5];docData.Body = "POINT(" + longitude + " " + latitude + ")";}
public static void Close(Repository db){if (db.Directory != null){RepositoryCache.FileKey key = RepositoryCache.FileKey.Exact(db.Directory, db.FileSystem);cache.UnregisterRepository(key);}}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(Backup);}
public override TokenStream Create(TokenStream input){return new ScandinavianNormalizationFilter(input);}
public AND(SemanticContext a, SemanticContext b){HashSet<SemanticContext> operands = new HashSet<SemanticContext>();if (a is SemanticContext.AND){operands.UnionWith(((AND)a).opnds);}else{operands.Add(a);}if (b is SemanticContext.AND){operands.UnionWith(((AND)b).opnds);}else{operands.Add(b);}IList<SemanticContext.PrecedencePredicate> precedencePredicates = FilterPrecedencePredicates(operands);if (precedencePredicates.Count > 0){SemanticContext.PrecedencePredicate reduced = precedencePredicates.Min();operands.Add(reduced);}opnds = operands.ToArray();}
public virtual GetCampaignVersionResponse GetCampaignVersion(GetCampaignVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetCampaignVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = GetCampaignVersionResponseUnmarshaller.Instance;return Invoke<GetCampaignVersionResponse>(request, options);}
public override ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval inumberVE){ValueEval veText1;try{veText1 = OperandResolver.GetSingleValue(inumberVE, srcRowIndex, srcColumnIndex);}catch (EvaluationException e){return e.GetErrorEval();}String iNumber = OperandResolver.CoerceValueToString(veText1);System.Text.RegularExpressions.Match m = Imaginary.COMPLEX_NUMBER_PATTERN.Match(iNumber);bool result = m.Success && !string.IsNullOrEmpty(m.Groups[0].Value);String real = "";if (result == true){String realGroup = m.Groups[(2)].Value;bool hasRealPart = realGroup.Length != 0;if (realGroup.Length == 0){return new StringEval(Convert.ToString(0));}if (hasRealPart){String sign = "";String realSign = m.Groups[(Imaginary.GROUP1_REAL_SIGN)].Value;if (realSign.Length != 0 && !(realSign.Equals("+"))){sign = realSign;}String groupRealNumber = m.Groups[(Imaginary.GROUP2_IMAGINARY_INTEGER_OR_DOUBLE)].Value;if (groupRealNumber.Length != 0){real = sign + groupRealNumber;}else{real = sign + "1";}}}else{return ErrorEval.NUM_ERROR;}return new StringEval(real);}
public virtual ModifyTrafficMirrorFilterRuleResponse ModifyTrafficMirrorFilterRule(ModifyTrafficMirrorFilterRuleRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyTrafficMirrorFilterRuleRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyTrafficMirrorFilterRuleResponseUnmarshaller.Instance;return Invoke<ModifyTrafficMirrorFilterRuleResponse>(request, options);}
public void WriteDouble(double v){_out.WriteDouble(v);_size += 8;}
public override int size(){return this._enclosing._size;}
public override string ToString(){StringBuilder r = new StringBuilder();r.Append("Ref[");r.Append(GetName());r.Append('=');r.Append(ObjectId.ToString(GetObjectId()));r.Append(']');return r.ToString();}
public override bool Equals(object o){return o is German2Stemmer;}
public virtual string FormatDate(PersonIdent ident){TimeZoneInfo tz;switch (format){case GitDateFormatter.Format.RAW:{int offset = ident.GetTimeZoneOffset();string sign = offset < 0 ? "-" : "+";int offset2;if (offset < 0){offset2 = -offset;}else{offset2 = offset;}int hours = offset2 / 60;int minutes = offset2 % 60;return string.Format("%d %s%02d%02d", ident.GetWhen().GetTime() / 1000, sign, hours, minutes);}case GitDateFormatter.Format.RELATIVE:{return RelativeDateFormatter.Format(ident.GetWhen());}case GitDateFormatter.Format.LOCALELOCAL:case GitDateFormatter.Format.LOCAL:{dateTimeInstance.SetTimeZone(SystemReader.GetInstance().GetTimeZone());return dateTimeInstance.Format(ident.GetWhen());}case GitDateFormatter.Format.LOCALE:{tz = ident.GetTimeZone();if (tz == null){tz = SystemReader.GetInstance().GetTimeZone();}dateTimeInstance.SetTimeZone(tz);dateTimeInstance2.SetTimeZone(tz);return dateTimeInstance.Format(ident.GetWhen()) + " " + dateTimeInstance2.Format(ident.GetWhen());}default:{tz = ident.GetTimeZone();if (tz == null){tz = SystemReader.GetInstance().GetTimeZone();}dateTimeInstance.SetTimeZone(ident.GetTimeZone());return dateTimeInstance.Format(ident.GetWhen());break;}}}
public override bool deliverSelfNotifications(){return true;}
public virtual DescribeDeliveryStreamResponse DescribeDeliveryStream(DescribeDeliveryStreamRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDeliveryStreamRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDeliveryStreamResponseUnmarshaller.Instance;return Invoke<DescribeDeliveryStreamResponse>(request, options);}
public static double Product(double[] values){double product = 0;if (values != null && values.Length > 0){product = 1;for (int i = 0, iSize = values.Length; i < iSize; i++){product *= values[i];}}return product;}
public virtual GetSnapshotBlockResponse GetSnapshotBlock(GetSnapshotBlockRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetSnapshotBlockRequestMarshaller.Instance;options.ResponseUnmarshaller = GetSnapshotBlockResponseUnmarshaller.Instance;return Invoke<GetSnapshotBlockResponse>(request, options);}
public override string ToString(){return "<quotedfield start='" + this.m_begin + "' end='" + this.m_end+ "' field='" + this.m_field + "' term='" + this.m_text + "'/>";}
public K higherKey(K key){java.util.MapClass.Entry<K, V> entry = this.findBounded(key, java.util.TreeMap.Relation.HIGHER);return entry != null ? entry.getKey() : default(K);}
public static BOFRecord CreateSheetBOF(){return new BOFRecord(BOFRecordType.Worksheet);}
public virtual DeleteReceiptFilterResponse DeleteReceiptFilter(DeleteReceiptFilterRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteReceiptFilterRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteReceiptFilterResponseUnmarshaller.Instance;return Invoke<DeleteReceiptFilterResponse>(request, options);}
public RangeTransition(ATNState target, int from, int to): base(target){this.from = from;this.to = to;}
public virtual DescribeDevicePolicyConfigurationResponse DescribeDevicePolicyConfiguration(DescribeDevicePolicyConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDevicePolicyConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDevicePolicyConfigurationResponseUnmarshaller.Instance;return Invoke<DescribeDevicePolicyConfigurationResponse>(request, options);}
public static short[] Grow(short[] array){return Grow(array, 1 + array.Length);}
public virtual DescribeUserProfileResponse DescribeUserProfile(DescribeUserProfileRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeUserProfileRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeUserProfileResponseUnmarshaller.Instance;return Invoke<DescribeUserProfileResponse>(request, options);}
public override string ToString(){return "FacetField(dim=" + Dim + " path=[" + Arrays.ToString(Path) + "])";}
public virtual void ShowMessage(string msg){provider.Get(uri, new CredentialItem.InformationalMessage(msg));}
public override void Delete(){if (!deleted){deleted = true;commitsToDelete.Add(this);}}
public override string ToString(){StringBuilder buffer = new StringBuilder();for (Type clazz = this.GetType(); clazz != null; clazz = clazz.GetTypeInfo().BaseType){if (clazz.Name != null){buffer.Append(clazz.Name);break;}}buffer.Append('(');var subReaders = GetSequentialSubReaders();Debug.Assert(subReaders != null);if (subReaders.Count > 0){buffer.Append(subReaders[0]);for (int i = 1, c = subReaders.Count; i < c; ++i){buffer.Append(" ").Append(subReaders[i]);}}buffer.Append(')');return buffer.ToString();}
public virtual CreateTypedLinkFacetResponse CreateTypedLinkFacet(CreateTypedLinkFacetRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateTypedLinkFacetRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateTypedLinkFacetResponseUnmarshaller.Instance;return Invoke<CreateTypedLinkFacetResponse>(request, options);}
public override void Close(){wc.Release();}
public virtual void writeChars(string str){throw new System.NotImplementedException();}
public IrishLowerCaseFilterFactory(IDictionary<string, string> args) : base(args){if (args.Count > 0){throw new System.ArgumentException("Unknown parameters: " + args);}}
public static void fill(byte[] array, byte value){{for (int i = 0; i < array.Length; i++){array[i] = value;}}}
public virtual IList<string> GetDFAStrings(){IList<string> s = new List<string>();for (int d = 0; d < Interpreter.atn.decisionToDFA.Length; d++){DFA dfa = Interpreter.atn.decisionToDFA[d];s.Add(dfa.ToString(Vocabulary));}return s;}
public DeleteApplicationRequest(string applicationName){_applicationName = applicationName;}
public LazyDocument(IndexReader reader, int docID){this.reader = reader;this.docID = docID;}
public CancelRepoBuildRequest(): base("cr", "2016-06-07", "CancelRepoBuild", "cr", "openAPI"){UriPattern = "/repos/[RepoNamespace]/[RepoName]/build/[BuildId]/cancel";Method = MethodType.POST;}
public EnglishPossessiveFilterFactory(IDictionary<string, string> args) : base(args){AssureMatchVersion();if (args.Count > 0){throw new System.ArgumentException("Unknown parameters: " + args);}}
public static FormulaError ForString(String code){if (smap.ContainsKey(code))return smap[code];throw new ArgumentException("Unknown error code: " + code);}
public static bool WasEscaped(ICharSequence text, int index){if (text is UnescapedCharSequence)return ((UnescapedCharSequence)text).wasEscaped[index];else return false;}
public virtual CreateClientVpnEndpointResponse CreateClientVpnEndpoint(CreateClientVpnEndpointRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateClientVpnEndpointRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateClientVpnEndpointResponseUnmarshaller.Instance;return Invoke<CreateClientVpnEndpointResponse>(request, options);}
public virtual FilePath GetFile(){return file;}
public override bool Stem(){int v_1;int v_2;int v_3;int v_4;int v_5;v_1 = m_cursor;do{if (!r_mark_regions()){goto lab0;}} while (false);lab0:m_cursor = v_1;m_limit_backward = m_cursor; m_cursor = m_limit;v_2 = m_limit - m_cursor;do{if (!r_main_suffix()){goto lab1;}} while (false);lab1:m_cursor = m_limit - v_2;v_3 = m_limit - m_cursor;do{if (!r_consonant_pair()){goto lab2;}} while (false);lab2:m_cursor = m_limit - v_3;v_4 = m_limit - m_cursor;do{if (!r_other_suffix()){goto lab3;}} while (false);lab3:m_cursor = m_limit - v_4;v_5 = m_limit - m_cursor;do{if (!r_undouble()){goto lab4;}} while (false);lab4:m_cursor = m_limit - v_5;m_cursor = m_limit_backward; return true;}
public override void Decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations){for (int i = 0; i < iterations; ++i){long byte0 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (long)((ulong)byte0 >> 2);long byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte0 & 3) << 4) | ((long)((ulong)byte1 >> 4));long byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 15) << 2) | ((long)((ulong)byte2 >> 6));values[valuesOffset++] = byte2 & 63;}}
public virtual Repository GetRepository(){return repository;}
public virtual ModifyClientVpnEndpointResponse ModifyClientVpnEndpoint(ModifyClientVpnEndpointRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyClientVpnEndpointRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyClientVpnEndpointResponseUnmarshaller.Instance;return Invoke<ModifyClientVpnEndpointResponse>(request, options);}
public GetRepoListRequest(): base("cr", "2016-06-07", "GetRepoList", "cr", "openAPI"){UriPattern = "/repos";Method = MethodType.GET;}
public string GetPartOfSpeech(int wordId){return GetFeature(wordId, 1);}
public virtual GetFileUploadURLResponse GetFileUploadURL(GetFileUploadURLRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetFileUploadURLRequestMarshaller.Instance;options.ResponseUnmarshaller = GetFileUploadURLResponseUnmarshaller.Instance;return Invoke<GetFileUploadURLResponse>(request, options);}
public java.util.MapClass.Entry<K, V> lowerEntry(K key){return this._enclosing.immutableCopy(this.findBounded(key, java.util.TreeMap.Relation.LOWER));}
public Policy WithId(string id){Id = id;return this;}
public static double GetExcelDate(DateTime date, bool use1904windowing){if ((!use1904windowing && date.Year < 1900)  || (use1904windowing && date.Year < 1904))   {return BAD_DATE;}DateTime startdate;if (use1904windowing){startdate = new DateTime(1904, 1, 1);}else{startdate = new DateTime(1900, 1, 1);}double value = (date - startdate).TotalDays + 1;if (!use1904windowing && value >= 60){value++;}else if (use1904windowing){value--;}return value;}
public virtual GetProxySessionResponse GetProxySession(GetProxySessionRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetProxySessionRequestMarshaller.Instance;options.ResponseUnmarshaller = GetProxySessionResponseUnmarshaller.Instance;return Invoke<GetProxySessionResponse>(request, options);}
public virtual ListStreamsResponse ListStreams(){return ListStreams(new ListStreamsRequest());}
public virtual string GetSurfaceFormString(){return new string(surfaceForm, offset, length);}
public virtual PushCommand Push(){return new PushCommand(repo);}
public void RemoveExFormatRecord(ExtendedFormatRecord rec){records.Remove(rec); numxfs--;}
public virtual void Publish(IRevision revision){lock (padlock){EnsureOpen();if (currentRevision != null){int compare = revision.CompareTo(currentRevision.Revision);if (compare == 0){revision.Release();return;}if (compare < 0){revision.Release();throw new ArgumentException(string.Format("Cannot publish an older revision: rev={0} current={1}", revision, currentRevision), "revision");}}RefCountedRevision oldRevision = currentRevision;currentRevision = new RefCountedRevision(revision);if (oldRevision != null)oldRevision.DecRef();CheckExpiredSessions();}}
public bool Equals(AnyObjectId other){return other != null ? Equals(this, other) : false;}
public Parser getParser(){return parser;}
public Patch(){files = new AList<FileHeader>();errors = new AList<FormatError>(0);}
public override bool isEmpty(){return this.endpoint(true) == null;}
public override java.util.MapClass.Entry<K, V> next(){return this.nextEntry();}
public virtual GetApplicationSettingsResponse GetApplicationSettings(GetApplicationSettingsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetApplicationSettingsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetApplicationSettingsResponseUnmarshaller.Instance;return Invoke<GetApplicationSettingsResponse>(request, options);}
public virtual int GetRegionLength(){return currentSource.regionList.length;}
public virtual GetDeliverabilityTestReportResponse GetDeliverabilityTestReport(GetDeliverabilityTestReportRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDeliverabilityTestReportRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDeliverabilityTestReportResponseUnmarshaller.Instance;return Invoke<GetDeliverabilityTestReportResponse>(request, options);}
public override long GetSize(){return GetCachedBytes().Length;}
public CreateDomainRequest(string domainName){_domainName = domainName;}
public NameRecord GetNameRecord(int nameIndex){return Workbook.GetNameRecord(nameIndex);}
public override void close(){throw new System.NotImplementedException();}
public virtual void Append(byte[] nameBuf, int namePos, int nameLen, FileMode mode, byte[] idBuf, int idPos){if (FmtBuf(nameBuf, namePos, nameLen, mode)){System.Array.Copy(idBuf, idPos, buf, ptr, Constants.OBJECT_ID_LENGTH);ptr += Constants.OBJECT_ID_LENGTH;}else{try{FmtOverflowBuffer(nameBuf, namePos, nameLen, mode);overflowBuffer.Write(idBuf, idPos, Constants.OBJECT_ID_LENGTH);}catch (IOException badBuffer){throw new RuntimeException(badBuffer);}}}
public int GetRightId(int wordId){return RIGHT_ID;}
public virtual SignalResourceResponse SignalResource(SignalResourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = SignalResourceRequestMarshaller.Instance;options.ResponseUnmarshaller = SignalResourceResponseUnmarshaller.Instance;return Invoke<SignalResourceResponse>(request, options);}
public virtual DisassociateFleetResponse DisassociateFleet(DisassociateFleetRequest request){var options = new InvokeOptions();options.RequestMarshaller = DisassociateFleetRequestMarshaller.Instance;options.ResponseUnmarshaller = DisassociateFleetResponseUnmarshaller.Instance;return Invoke<DisassociateFleetResponse>(request, options);}
public virtual void setLength(int length_1){if (length_1 < 0){throw new java.lang.StringIndexOutOfBoundsException("length < 0: " + length_1);}if (length_1 > value.Length){enlargeBuffer(length_1);}else{if (shared){char[] newData = new char[value.Length];System.Array.Copy(value, 0, newData, 0, count);value = newData;shared = false;}else{if (count < length_1){java.util.Arrays.fill(value, count, length_1, (char)0);}}}count = length_1;}
public GetInvalidationRequest(string distributionId, string id){_distributionId = distributionId;_id = id;}
public RussianLightStemFilterFactory(IDictionary<string, string> args): base(args){if (args.Count > 0){throw new System.ArgumentException("Unknown parameters: " + args);}}
public DeleteDeviceGroupRequest(): base("LinkFace", "2018-07-20", "DeleteDeviceGroup"){Protocol = ProtocolType.HTTPS;Method = MethodType.POST;}
public void CloneStyleFrom(FontRecord source){field_1_font_height = source.field_1_font_height;field_2_attributes = source.field_2_attributes;field_3_color_palette_index = source.field_3_color_palette_index;field_4_bold_weight = source.field_4_bold_weight;field_5_base_sub_script = source.field_5_base_sub_script;field_6_underline = source.field_6_underline;field_7_family = source.field_7_family;field_8_charset = source.field_8_charset;field_9_zero = source.field_9_zero;field_11_font_name = source.field_11_font_name;}
public BrazilianStemFilterFactory(IDictionary<string, string> args) : base(args){if (args.Count > 0){throw new System.ArgumentException("Unknown parameters: " + args);}}
public virtual java.util.Iterator<E> iterator(){lock (mutex){return c.iterator();}}
public DrillSideways(IndexSearcher searcher, FacetsConfig config, TaxonomyReader taxoReader, SortedSetDocValuesReaderState state){this.m_searcher = searcher;this.m_config = config;this.m_taxoReader = taxoReader;this.m_state = state;}
public virtual string GetErrorDisplay(int c){string s;switch (c){case TokenConstants.EOF:{s = "<EOF>";break;}case '\n':{s = "\\n";break;}case '\t':{s = "\\t";break;}case '\r':{s = "\\r";break;}default:{s = Char.ConvertFromUtf32(c);break;}}return s;}
public override String ToFormulaString(String[] operands){StringBuilder buffer = new StringBuilder();buffer.Append(operands[0]);buffer.Append(GREATERTHAN);buffer.Append(operands[1]);return buffer.ToString();}
public virtual CreateImageResponse CreateImage(CreateImageRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateImageRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateImageResponseUnmarshaller.Instance;return Invoke<CreateImageResponse>(request, options);}
public void UpdateCacheResult(ValueEval result){int nFrames = _evaluationFrames.Count;if (nFrames < 1){throw new InvalidOperationException("Call To endEvaluate without matching call To startEvaluate");}CellEvaluationFrame frame = (CellEvaluationFrame)_evaluationFrames[nFrames - 1];frame.UpdateFormulaResult(result);}
public sealed override char getChar(int index){checkIndex(index, libcore.io.SizeOf.CHAR);return (char)libcore.io.Memory.peekShort(backingArray, offset + index, _order);}
public virtual string GetHostName(){return hostName;}
public ExternalNameRecord(RecordInputStream in1){field_1_option_flag = in1.ReadShort();field_2_ixals = in1.ReadShort();field_3_not_used = in1.ReadShort();int numChars = in1.ReadUByte();field_4_name = StringUtil.ReadUnicodeString(in1, numChars);if (!IsOLELink && !IsStdDocumentNameIdentifier){if (IsAutomaticLink){if (in1.Available() > 0){int nColumns = in1.ReadUByte() + 1;int nRows = in1.ReadShort() + 1;int totalCount = nRows * nColumns;_ddeValues = ConstantValueParser.Parse(in1, totalCount);_nColumns = nColumns;_nRows = nRows;}}else{int formulaLen = in1.ReadUShort();field_5_name_definition = Formula.Read(formulaLen, in1);}}}
public virtual DescribeGameSessionDetailsResponse DescribeGameSessionDetails(DescribeGameSessionDetailsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeGameSessionDetailsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeGameSessionDetailsResponseUnmarshaller.Instance;return Invoke<DescribeGameSessionDetailsResponse>(request, options);}
public virtual DeleteDiskResponse DeleteDisk(DeleteDiskRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDiskRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDiskResponseUnmarshaller.Instance;return Invoke<DeleteDiskResponse>(request, options);}
public override bool Equals(object obj){if (!(obj is SemanticContext.Predicate)){return false;}if (this == obj){return true;}SemanticContext.Predicate p = (SemanticContext.Predicate)obj;return this.ruleIndex == p.ruleIndex && this.predIndex == p.predIndex && this.isCtxDependent == p.isCtxDependent;}
public virtual UpdateTemplateResponse UpdateTemplate(UpdateTemplateRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateTemplateRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateTemplateResponseUnmarshaller.Instance;return Invoke<UpdateTemplateResponse>(request, options);}
public override void Encode(int[] values, int valuesOffset, byte[] blocks, int blocksOffset, int iterations){for (int i = 0; i < iterations; ++i){long block = Encode(values, valuesOffset);valuesOffset += valueCount;blocksOffset = WriteInt64(block, blocks, blocksOffset);}}
public java.lang.StringBuilder append(char c){append0(c);return this;}
public override Object Clone(){CalcCountRecord rec = new CalcCountRecord();rec.field_1_iterations = field_1_iterations;return rec;}
public virtual RecordLifecycleActionHeartbeatResponse RecordLifecycleActionHeartbeat(RecordLifecycleActionHeartbeatRequest request){var options = new InvokeOptions();options.RequestMarshaller = RecordLifecycleActionHeartbeatRequestMarshaller.Instance;options.ResponseUnmarshaller = RecordLifecycleActionHeartbeatResponseUnmarshaller.Instance;return Invoke<RecordLifecycleActionHeartbeatResponse>(request, options);}
public virtual NotifyWorkersResponse NotifyWorkers(NotifyWorkersRequest request){var options = new InvokeOptions();options.RequestMarshaller = NotifyWorkersRequestMarshaller.Instance;options.ResponseUnmarshaller = NotifyWorkersResponseUnmarshaller.Instance;return Invoke<NotifyWorkersResponse>(request, options);}
public void Serialize(ILittleEndianOutput out1){out1.WriteShort(recordType);out1.WriteShort(grbitFrt);out1.Write(reserved);}
public ConfirmSubscriptionRequest(string topicArn, string token){_topicArn = topicArn;_token = token;}
public void SetBytesRef(BytesRef term, int textStart){var bytes = term.Bytes = buffers[textStart >> BYTE_BLOCK_SHIFT];var pos = textStart & BYTE_BLOCK_MASK;if ((bytes[pos] & 0x80) == 0){term.Length = bytes[pos];term.Offset = pos + 1;}else{term.Length = (bytes[pos] & 0x7f) + ((bytes[pos + 1] & 0xff) << 7);term.Offset = pos + 2;}Debug.Assert(term.Length >= 0);}
public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[FtPioGrbit ]\n");buffer.Append("  size     = ").Append(length).Append("\n");buffer.Append("  flags    = ").Append(HexDump.ToHex(flags)).Append("\n");buffer.Append("[/FtPioGrbit ]\n");return buffer.ToString();}
public virtual ListGroupsResponse ListGroups(ListGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListGroupsResponseUnmarshaller.Instance;return Invoke<ListGroupsResponse>(request, options);}
public ServerException(string errorCode, string errorMessage, string requestId) :base(errorCode, errorMessage, requestId){RequestId = requestId;}
public override java.nio.LongBuffer put(int index, long c){checkIndex(index);byteBuffer.putLong(index * libcore.io.SizeOf.LONG, c);return this;}
public ImportKeyPairRequest(string keyName, string publicKeyMaterial){_keyName = keyName;_publicKeyMaterial = publicKeyMaterial;}
public String AsFormulaString(){StringBuilder sb = new StringBuilder(32);AsFormulaString(sb);return sb.ToString();}
public virtual DiffCommand Diff(){return new DiffCommand(repo);}
public virtual CreateSubnetResponse CreateSubnet(CreateSubnetRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateSubnetRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateSubnetResponseUnmarshaller.Instance;return Invoke<CreateSubnetResponse>(request, options);}
public PortugueseLightStemFilterFactory(IDictionary<string, string> args): base(args){if (args.Count > 0){throw new System.ArgumentException("Unknown parameters: " + args);}}
public virtual object clone(){throw new System.NotImplementedException();}
public override bool Equals(object obj){if (this == obj){return true;}if (obj == null){return false;}if (this.GetType() != obj.GetType()){return false;}PostingsAndFreq other = (PostingsAndFreq)obj;if (docFreq != other.docFreq){return false;}if (position != other.position){return false;}if (terms == null){return other.terms == null;}return Arrays.Equals(terms, other.terms);}
public HSSFCombobox(HSSFShape parent, HSSFAnchor anchor): base(parent, anchor){base.ShapeType = (OBJECT_TYPE_COMBO_BOX);CommonObjectDataSubRecord cod = (CommonObjectDataSubRecord)GetObjRecord().SubRecords[0];cod.ObjectType = CommonObjectType.ComboBox;}
public virtual int readUnsignedShort(){throw new System.NotImplementedException();}
public ListMFADevicesRequest(string userName){_userName = userName;}
public void RemoveRow(RowRecord row){int rowIndex = row.RowNumber;_valuesAgg.RemoveAllCellsValuesForRow(rowIndex);int key = rowIndex;RowRecord rr = (RowRecord)_rowRecords[key];_rowRecords.Remove(key);if (rr == null){throw new Exception("Invalid row index (" + key + ")");}if (row != rr){_rowRecords[key] = rr;throw new Exception("Attempt to remove row that does not belong to this sheet");}_rowRecordValues = null;}
public virtual int getInputLength(){return this.inputLength;}
public double ReadDouble(){long valueLongBits = ReadLong();double result = BitConverter.Int64BitsToDouble(valueLongBits);if (Double.IsNaN(result)){throw new Exception("Did not expect to read NaN"); }return result;}
public virtual GetCampaignDateRangeKpiResponse GetCampaignDateRangeKpi(GetCampaignDateRangeKpiRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetCampaignDateRangeKpiRequestMarshaller.Instance;options.ResponseUnmarshaller = GetCampaignDateRangeKpiResponseUnmarshaller.Instance;return Invoke<GetCampaignDateRangeKpiResponse>(request, options);}
public virtual CreateCustomAvailabilityZoneResponse CreateCustomAvailabilityZone(CreateCustomAvailabilityZoneRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateCustomAvailabilityZoneRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateCustomAvailabilityZoneResponseUnmarshaller.Instance;return Invoke<CreateCustomAvailabilityZoneResponse>(request, options);}
public GetMirrorListRequest(): base("cr", "2016-06-07", "GetMirrorList", "cr", "openAPI"){UriPattern = "/mirrors";Method = MethodType.GET;}
public DFAState GetPrecedenceStartState(int precedence){if (!IsPrecedenceDfa){throw new Exception("Only precedence DFAs may contain a precedence start state.");}if (precedence < 0 || precedence >= s0.edges.Length){return null;}return s0.edges[precedence];}
public override void SetParams(string @params){this.m_params = @params; m_fieldsToLoad = new JCG.HashSet<string>();for (StringTokenizer tokenizer = new StringTokenizer(@params, ","); tokenizer.MoveNext();){string s = tokenizer.Current;m_fieldsToLoad.Add(s);}}
public ItalianLightStemFilterFactory(IDictionary<string, string> args): base(args){if (args.Count > 0){throw new System.ArgumentException("Unknown parameters: " + args);}}
public override int Serialize(int offset, byte[] data){LittleEndian.PutShort(data, 0 + offset, Sid);LittleEndian.PutShort(data, 2 + offset, (short)(RecordSize - 4));byte[] rawData = RawData;if (escherRecords.Count == 0 && rawData != null){LittleEndian.PutShort(data, 0 + offset, Sid);LittleEndian.PutShort(data, 2 + offset, (short)(RecordSize - 4));Array.Copy(rawData, 0, data, 4 + offset, rawData.Length);return rawData.Length + 4;}LittleEndian.PutShort(data, 0 + offset, Sid);LittleEndian.PutShort(data, 2 + offset, (short)(RecordSize - 4));int pos = offset + 4;foreach (EscherRecord r in escherRecords){pos += r.Serialize(pos, data, new NullEscherSerializationListener());}return RecordSize;}
public virtual CreateHITResponse CreateHIT(CreateHITRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateHITRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateHITResponseUnmarshaller.Instance;return Invoke<CreateHITResponse>(request, options);}
public virtual string PrintQueries(){string newline = Environment.NewLine;StringBuilder sb = new StringBuilder();if (m_queries != null){for (int i = 0; i < m_queries.Length; i++){sb.Append(i + ". " + m_queries[i].GetType().Name + " - " + m_queries[i].ToString());sb.Append(newline);}}return sb.ToString();}
public void DrawOval(int x, int y, int width, int height){HSSFSimpleShape shape = escherGroup.CreateShape(new HSSFChildAnchor(x, y, x + width, y + height));shape.ShapeType = (HSSFSimpleShape.OBJECT_TYPE_OVAL);shape.LineWidth = 0;shape.SetLineStyleColor(foreground.R, foreground.G, foreground.B);shape.IsNoFill = (true);}
public virtual int Stem(char[] s, int len){len = RemoveCase(s, len);return Normalize(s, len);}
public GetConsoleOutputRequest(string instanceId){_instanceId = instanceId;}
public override int Read(char[] cbuf, int off, int len){if (off < 0) throw new ArgumentException("off < 0");if (off >= cbuf.Length) throw new ArgumentException("off >= cbuf.length");if (len <= 0) throw new ArgumentException("len <= 0");while (!inputFinished || inputBuffer.Length > 0 || resultBuffer.Length > 0){int retLen;if (resultBuffer.Length > 0){retLen = OutputFromResultBuffer(cbuf, off, len);if (retLen > 0){return retLen;}}int resLen = ReadAndNormalizeFromInput();if (resLen > 0){retLen = OutputFromResultBuffer(cbuf, off, len);if (retLen > 0){return retLen;}}ReadInputToBuffer();}return 0; }
public virtual SendMessageBatchResponse SendMessageBatch(string queueUrl, List<SendMessageBatchRequestEntry> entries){var request = new SendMessageBatchRequest();request.QueueUrl = queueUrl;request.Entries = entries;return SendMessageBatch(request);}
public virtual ListGameServerGroupsResponse ListGameServerGroups(ListGameServerGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListGameServerGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListGameServerGroupsResponseUnmarshaller.Instance;return Invoke<ListGameServerGroupsResponse>(request, options);}
public static ValueVector CreateVector(TwoDEval ae){if (ae.IsColumn){return CreateColumnVector(ae, 0);}if (ae.IsRow){return CreateRowVector(ae, 0);}return null;}
public override int size(){return this._enclosing._size;}
public virtual CreateLabelingJobResponse CreateLabelingJob(CreateLabelingJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateLabelingJobRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateLabelingJobResponseUnmarshaller.Instance;return Invoke<CreateLabelingJobResponse>(request, options);}
public override int read(){throw new System.NotImplementedException();}
public LexerPushModeAction(int mode){this.mode = mode;}
public virtual DeleteLaunchConfigurationResponse DeleteLaunchConfiguration(DeleteLaunchConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteLaunchConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteLaunchConfigurationResponseUnmarshaller.Instance;return Invoke<DeleteLaunchConfigurationResponse>(request, options);}
public virtual IList<Interval> GetIntervals(){return intervals;}
public LinkTable(int numberOfSheets, WorkbookRecordList workbookRecordList){_workbookRecordList = workbookRecordList;_definedNames = new List<NameRecord>();_externalBookBlocks = new ExternalBookBlock[] {new ExternalBookBlock(numberOfSheets),};_externSheetRecord = new ExternSheetRecord();_recordCount = 2;SupBookRecord supbook = _externalBookBlocks[0].GetExternalBookRecord();int idx = FindFirstRecordLocBySid(CountryRecord.sid);if (idx < 0){throw new Exception("CountryRecord not found");}_workbookRecordList.Add(idx + 1, _externSheetRecord);_workbookRecordList.Add(idx + 1, supbook);}
public override int Read(){if (ptr == data.Length){return -1;}return data[ptr++] & unchecked((int)(0xff));}
public override FieldsConsumer FieldsConsumer(SegmentWriteState state){PostingsWriterBase postingsWriter = new Lucene41PostingsWriter(state);bool success = false;try{FieldsConsumer ret = new FSTTermsWriter(state, postingsWriter);success = true;return ret;}finally{if (!success){IOUtils.DisposeWhileHandlingException(postingsWriter);}}}
public override void ParseLine(DocData docData, string line){int n = 0;int k1 = 0;int k2;while ((k2 = line.IndexOf(WriteLineDocTask.SEP, k1)) >= 0){if (n >= m_header.Length){throw new Exception("input line has invalid format: " + (n + 1) + " fields instead of " + m_header.Length + " :: [" + line + "]");}SetDocDataField(docData, n, line.Substring(k1, k2 - k1));++n;k1 = k2 + 1;}if (n != m_header.Length - 1){throw new Exception("input line has invalid format: " + (n + 1) + " fields instead of " + m_header.Length + " :: [" + line + "]");}SetDocDataField(docData, n, line.Substring(k1));}
public static bool matches(string regularExpression, java.lang.CharSequence input){return new java.util.regex.Matcher(new java.util.regex.Pattern(regularExpression,0), input).matches();}
public override java.nio.ByteOrder order(){return byteBuffer.order();}
public void set(E @object){if (this.expectedModCount == this._enclosing.modCount){try{this._enclosing.set(this.lastPosition, @object);}catch (System.IndexOutOfRangeException){throw new System.InvalidOperationException();}}else{throw new java.util.ConcurrentModificationException();}}
public override void write(string str, int offset, int count){lock (@lock){if (count < 0){throw new java.lang.StringIndexOutOfBoundsException(str, offset, count);}if (str == null){throw new System.ArgumentNullException("str == null");}if ((offset | count) < 0 || offset > str.Length - count){throw new java.lang.StringIndexOutOfBoundsException(str, offset, count);}checkStatus();java.nio.CharBuffer chars = java.nio.CharBuffer.wrap(java.lang.CharSequenceProxy.Wrap(str), offset, count + offset);convert(chars);}}
public virtual bool IsExportAll(){return exportAll;}
public override ValueEval Evaluate(int srcCellRow, int srcCellCol){return ErrorEval.NA;}
public static CloneCommand CloneRepository(){return new CloneCommand();}
public HSSFShapeGroup CreateGroup(HSSFClientAnchor anchor){HSSFShapeGroup group = new HSSFShapeGroup(null, anchor);AddShape(group);OnCreate(group);return group;}
public virtual GetDigestResponse GetDigest(GetDigestRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDigestRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDigestResponseUnmarshaller.Instance;return Invoke<GetDigestResponse>(request, options);}
public void close() throws IOException{if (isOpen && !isClone){try{channel.close();}finally{if (!isClone){fis.close();}}}}
public virtual DeleteEmailChannelResponse DeleteEmailChannel(DeleteEmailChannelRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteEmailChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteEmailChannelResponseUnmarshaller.Instance;return Invoke<DeleteEmailChannelResponse>(request, options);}
public virtual CreateInstanceExportTaskResponse CreateInstanceExportTask(CreateInstanceExportTaskRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateInstanceExportTaskRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateInstanceExportTaskResponseUnmarshaller.Instance;return Invoke<CreateInstanceExportTaskResponse>(request, options);}
public HSSFColor AddColor(byte red, byte green, byte blue){byte[] b = palette.GetColor(PaletteRecord.FIRST_COLOR_INDEX);short i;for (i = (short)PaletteRecord.FIRST_COLOR_INDEX; i < PaletteRecord.STANDARD_PALETTE_SIZE + PaletteRecord.FIRST_COLOR_INDEX; b = palette.GetColor(++i)){if (b == null){SetColorAtIndex(i, red, green, blue);return GetColor(i);}}throw new Exception("Could not Find free color index");}
public override bool Matches(int symbol, int minVocabSymbol, int maxVocabSymbol){return symbol >= minVocabSymbol && symbol <= maxVocabSymbol && !base.Matches(symbol, minVocabSymbol, maxVocabSymbol);}
public virtual GetEmailIdentityResponse GetEmailIdentity(GetEmailIdentityRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetEmailIdentityRequestMarshaller.Instance;options.ResponseUnmarshaller = GetEmailIdentityResponseUnmarshaller.Instance;return Invoke<GetEmailIdentityResponse>(request, options);}
public virtual GetJobManifestResponse GetJobManifest(GetJobManifestRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetJobManifestRequestMarshaller.Instance;options.ResponseUnmarshaller = GetJobManifestResponseUnmarshaller.Instance;return Invoke<GetJobManifestResponse>(request, options);}
public virtual ListCompilationJobsResponse ListCompilationJobs(ListCompilationJobsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListCompilationJobsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListCompilationJobsResponseUnmarshaller.Instance;return Invoke<ListCompilationJobsResponse>(request, options);}
public sealed override java.nio.IntBuffer put(int[] src, int srcOffset, int intCount){throw new java.nio.ReadOnlyBufferException();}
public static RepositoryCache.FileKey Lenient(FilePath directory, FS fs){FilePath gitdir = Resolve(directory, fs);return new RepositoryCache.FileKey(gitdir != null ? gitdir : directory, fs);}
public ModifyStrategyTargetRequest(): base("aegis", "2016-11-11", "ModifyStrategyTarget", "vipaegis", "openAPI"){Method = MethodType.POST;}
public override bool IsCaseSensitive(){return false;}
public void NarrowSearch(int midIx, bool isLessThan){if (isLessThan){_highIx = midIx;}else{_lowIx = midIx;}}
public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[SAVERECALC]\n");buffer.Append("    .recalc         = ").Append(Recalc).Append("\n");buffer.Append("[/SAVERECALC]\n");return buffer.ToString();}
public override void clear(){if (_size != 0){java.util.Arrays.fill(table, null);entryForNullKey = null;modCount++;_size = 0;}}
public static java.nio.DoubleBuffer wrap(double[] array_1, int start, int doubleCount){java.util.Arrays.checkOffsetAndCount(array_1.Length, start, doubleCount);java.nio.DoubleBuffer buf = new java.nio.ReadWriteDoubleArrayBuffer(array_1);buf._position = start;buf._limit = start + doubleCount;return buf;}
public override string ToString(){return "SnapshotDeletionPolicy.SnapshotCommitPoint(" + m_cp + ")";}
public virtual DeleteAccountSettingResponse DeleteAccountSetting(DeleteAccountSettingRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteAccountSettingRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteAccountSettingResponseUnmarshaller.Instance;return Invoke<DeleteAccountSettingResponse>(request, options);}
public virtual void SetContext(int lineCount){if (lineCount < 0){throw new ArgumentException(JGitText.Get().contextMustBeNonNegative);}context = lineCount;}
public virtual UpdateConfigurationResponse UpdateConfiguration(UpdateConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateConfigurationResponseUnmarshaller.Instance;return Invoke<UpdateConfigurationResponse>(request, options);}
public virtual GetConfigurationSetResponse GetConfigurationSet(GetConfigurationSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetConfigurationSetRequestMarshaller.Instance;options.ResponseUnmarshaller = GetConfigurationSetResponseUnmarshaller.Instance;return Invoke<GetConfigurationSetResponse>(request, options);}
public TokenCollector(int tokenCount){_ptgs = new Ptg[tokenCount];_offset = 0;}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(sid);out1.WriteShort(reserved.Length);out1.Write(reserved);}
public static Antlr4.Runtime.Misc.IntervalSet Of(int a, int b){Antlr4.Runtime.Misc.IntervalSet s = new Antlr4.Runtime.Misc.IntervalSet();s.Add(a, b);return s;}
public static DVConstraint CreateCustomFormulaConstraint(String formula){if (formula == null){throw new ArgumentException("formula must be supplied");}return new DVConstraint(ValidationType.FORMULA, OperatorType.IGNORED, formula, null, double.NaN, double.NaN, null);}
public override string ToStringUnquoted(){return TermText;}
public byte[] GetElement(int index){int actualSize = GetActualSizeOfElements(SizeOfElements);byte[] result = new byte[actualSize];Array.Copy(_complexData, FIXED_SIZE + index * actualSize, result, 0, result.Length);return result;}
public virtual StartDeliveryStreamEncryptionResponse StartDeliveryStreamEncryption(StartDeliveryStreamEncryptionRequest request){var options = new InvokeOptions();options.RequestMarshaller = StartDeliveryStreamEncryptionRequestMarshaller.Instance;options.ResponseUnmarshaller = StartDeliveryStreamEncryptionResponseUnmarshaller.Instance;return Invoke<StartDeliveryStreamEncryptionResponse>(request, options);}
public FieldMaskingSpanQuery(SpanQuery maskedQuery, string maskedField){this.maskedQuery = maskedQuery;this.field = maskedField;}
public virtual DeleteIpGroupResponse DeleteIpGroup(DeleteIpGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteIpGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteIpGroupResponseUnmarshaller.Instance;return Invoke<DeleteIpGroupResponse>(request, options);}
public virtual IndexCommit GetIndexCommit(long gen){lock (this){return m_indexCommits[gen];}}
public java.lang.StringBuffer insert(int index, char[] chars){lock (this){insert0(index, chars);return this;}}
public virtual SetInstanceHealthResponse SetInstanceHealth(SetInstanceHealthRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetInstanceHealthRequestMarshaller.Instance;options.ResponseUnmarshaller = SetInstanceHealthResponseUnmarshaller.Instance;return Invoke<SetInstanceHealthResponse>(request, options);}
public override string ToString(){return "FormatAndBits(format=" + Format + " bitsPerValue=" + BitsPerValue + ")";}
public ObjectId Copy(){if (GetType() == typeof(ObjectId)){return (ObjectId)this;}return new ObjectId(this);}
public virtual Daemon GetDaemon(){return daemon;}
public virtual DescribeExclusionsResponse DescribeExclusions(DescribeExclusionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeExclusionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeExclusionsResponseUnmarshaller.Instance;return Invoke<DescribeExclusionsResponse>(request, options);}
public override TwoDEval GetColumn(int columnIndex){if (columnIndex >= Width){throw new ArgumentException("Invalid columnIndex " + columnIndex+ ".  Allowable range is (0.." + Width + ").");}int absColIx = FirstColumn + columnIndex;return new LazyAreaEval(FirstRow, absColIx, LastRow, absColIx, _evaluator);}
public override java.nio.CharBuffer put(int index, char c){checkIndex(index);backingArray[offset + index] = c;return this;}
public override TokenStream Create(TokenStream input){return new NorwegianMinimalStemFilter(input, flags);}
public virtual UpdateRulesOfIpGroupResponse UpdateRulesOfIpGroup(UpdateRulesOfIpGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateRulesOfIpGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateRulesOfIpGroupResponseUnmarshaller.Instance;return Invoke<UpdateRulesOfIpGroupResponse>(request, options);}
public virtual ParseTreePattern CompileParseTreePattern(string pattern, int patternRuleIndex, Lexer lexer){ParseTreePatternMatcher m = new ParseTreePatternMatcher(lexer, this);return m.Compile(pattern, patternRuleIndex);}
public PushbackReader(java.io.Reader @in) : base(@in){buf = new char[1];pos = 1;}
public ReactivatePhotosRequest(): base("CloudPhoto", "2017-07-11", "ReactivatePhotos", "cloudphoto", "openAPI"){Protocol = ProtocolType.HTTPS;}
public override void Write(ILittleEndianOutput out1){out1.WriteByte(Sid + PtgClass);WriteCoordinates(out1);}
public virtual CreateTagsResponse CreateTags(CreateTagsRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateTagsRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateTagsResponseUnmarshaller.Instance;return Invoke<CreateTagsResponse>(request, options);}
public virtual CreateStreamingDistributionWithTagsResponse CreateStreamingDistributionWithTags(CreateStreamingDistributionWithTagsRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateStreamingDistributionWithTagsRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateStreamingDistributionWithTagsResponseUnmarshaller.Instance;return Invoke<CreateStreamingDistributionWithTagsResponse>(request, options);}
public virtual CreateProfileResponse CreateProfile(CreateProfileRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateProfileRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateProfileResponseUnmarshaller.Instance;return Invoke<CreateProfileResponse>(request, options);}
public override long RamBytesUsed(){long sizeInBytes = (postingsReader != null) ? postingsReader.RamBytesUsed() : 0;sizeInBytes += (indexReader != null) ? indexReader.RamBytesUsed() : 0;return sizeInBytes;}
public Principal(string provider, string id, bool stripHyphen){this.provider = provider;if (stripHyphen){id = id.Replace("-", "");}this.id = id;}
public static int NextLF(byte[] b, int ptr){return Next(b, ptr, '\n');}
public virtual CreateStreamProcessorResponse CreateStreamProcessor(CreateStreamProcessorRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateStreamProcessorRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateStreamProcessorResponseUnmarshaller.Instance;return Invoke<CreateStreamProcessorResponse>(request, options);}
public override void postInvalidate(){if (!mNoInvalidate){base.postInvalidate();}}
public virtual UpdateDetectorVersionStatusResponse UpdateDetectorVersionStatus(UpdateDetectorVersionStatusRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateDetectorVersionStatusRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateDetectorVersionStatusResponseUnmarshaller.Instance;return Invoke<UpdateDetectorVersionStatusResponse>(request, options);}
public virtual SetCognitoEventsResponse SetCognitoEvents(SetCognitoEventsRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetCognitoEventsRequestMarshaller.Instance;options.ResponseUnmarshaller = SetCognitoEventsResponseUnmarshaller.Instance;return Invoke<SetCognitoEventsResponse>(request, options);}
public SearcherAndTaxonomy(IndexSearcher searcher, DirectoryTaxonomyReader taxonomyReader){this.Searcher = searcher;this.TaxonomyReader = taxonomyReader;}
public void UpdateNameCommentRecordCache(NameCommentRecord commentRecord){if (commentRecords.ContainsValue(commentRecord)){foreach (KeyValuePair<string, NameCommentRecord> entry in commentRecords){if (entry.Value.Equals(commentRecord)){commentRecords.Remove(entry.Key);break;}}}commentRecords[commentRecord.NameText] = commentRecord;}
public sealed override int arrayOffset(){return protectedArrayOffset();}
public override void SeekExact(long ord){throw new NotSupportedException();}
public virtual ListReusableDelegationSetsResponse ListReusableDelegationSets(){return ListReusableDelegationSets(new ListReusableDelegationSetsRequest());}
public virtual Ref GetRef(){return @ref;}
public virtual DescribeVpcClassicLinkDnsSupportResponse DescribeVpcClassicLinkDnsSupport(DescribeVpcClassicLinkDnsSupportRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeVpcClassicLinkDnsSupportRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeVpcClassicLinkDnsSupportResponseUnmarshaller.Instance;return Invoke<DescribeVpcClassicLinkDnsSupportResponse>(request, options);}
public override bool ShouldBeRecursive(){return a.ShouldBeRecursive() || b.ShouldBeRecursive();}
public virtual E getLast(){java.util.LinkedList.Link<E> last = voidLink.previous;if (last != voidLink){return last.data;}throw new java.util.NoSuchElementException();}
public int remaining(){return _limit - _position;}
public override java.nio.IntBuffer put(int[] src, int srcOffset, int intCount){byteBuffer.limit(_limit * libcore.io.SizeOf.INT);byteBuffer.position(_position * libcore.io.SizeOf.INT);if (byteBuffer is java.nio.ReadWriteDirectByteBuffer){((java.nio.ReadWriteDirectByteBuffer)byteBuffer).put(src, srcOffset, intCount);}else{((java.nio.ReadWriteHeapByteBuffer)byteBuffer).put(src, srcOffset, intCount);}this._position += intCount;return this;}
public virtual ListHostedZonesResponse ListHostedZones(ListHostedZonesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListHostedZonesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListHostedZonesResponseUnmarshaller.Instance;return Invoke<ListHostedZonesResponse>(request, options);}
public virtual ListContributorInsightsResponse ListContributorInsights(ListContributorInsightsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListContributorInsightsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListContributorInsightsResponseUnmarshaller.Instance;return Invoke<ListContributorInsightsResponse>(request, options);}
public virtual V setValue(V value){if ((object)value == null){throw new System.ArgumentNullException();}V oldValue = this.value;this.value = value;return oldValue;}
public DescribeJobRequest(string accountId, string vaultName, string jobId){_accountId = accountId;_vaultName = vaultName;_jobId = jobId;}
public virtual GetSendQuotaResponse GetSendQuota(GetSendQuotaRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetSendQuotaRequestMarshaller.Instance;options.ResponseUnmarshaller = GetSendQuotaResponseUnmarshaller.Instance;return Invoke<GetSendQuotaResponse>(request, options);}
public virtual NGit.Blame.BlameGenerator SetFollowFileRenames(bool follow){if (follow){renameDetector = new RenameDetector(GetRepository());}else{renameDetector = null;}return this;}
public RegisterPhotoRequest(): base("CloudPhoto", "2017-07-11", "RegisterPhoto", "cloudphoto", "openAPI"){Protocol = ProtocolType.HTTPS;}
public static Counter NewCounter(bool threadSafe){return threadSafe ? (Counter)new AtomicCounter() : new SerialCounter();}
public virtual LookupDeveloperIdentityResponse LookupDeveloperIdentity(LookupDeveloperIdentityRequest request){var options = new InvokeOptions();options.RequestMarshaller = LookupDeveloperIdentityRequestMarshaller.Instance;options.ResponseUnmarshaller = LookupDeveloperIdentityResponseUnmarshaller.Instance;return Invoke<LookupDeveloperIdentityResponse>(request, options);}
public Step(string name, Rule[] rules, int min, string[] suffixes){this.m_name = name;this.m_rules = rules;if (min == 0){min = int.MaxValue;foreach (Rule r in rules){min = Math.Min(min, r.m_min + r.m_suffix.Length);}}this.m_min = min;if (suffixes == null || suffixes.Length == 0){this.m_suffixes = null;}else{this.m_suffixes = new char[suffixes.Length][];for (int i = 0; i < suffixes.Length; i++){this.m_suffixes[i] = suffixes[i].ToCharArray();}}}
public virtual void EnterRecursionRule(ParserRuleContext localctx, int state, int ruleIndex, int precedence){State = state;_precedenceStack.Add(precedence);_ctx = localctx;_ctx.Start = _input.LT(1);if (_parseListeners != null){TriggerEnterRuleEvent();}}
public DeletedRef3DPtg(int externSheetIndex){field_1_index_extern_sheet = externSheetIndex;unused1 = 0;}
public virtual string GetReading(){return dictionary.GetReading(wordId, surfaceForm, offset, length);}
public override void Serialize(ILittleEndianOutput out1){String username = Username;bool is16bit = StringUtil.HasMultibyte(username);out1.WriteShort(username.Length);out1.WriteByte(is16bit ? 0x01 : 0x00);if (is16bit){StringUtil.PutUnicodeLE(username, out1);}else{StringUtil.PutCompressedUnicode(username, out1);}int encodedByteCount = 3 + username.Length * (is16bit ? 2 : 1);int paddingSize = DATA_SIZE - encodedByteCount;out1.Write(PADDING, 0, paddingSize);}
public override string ToString(){return "<matchAllDocs field='*' term='*'/>";}
public override string ToString(){return "<fieldconfig name=\"" + this.fieldName + "\" configurations=\""+ base.ToString() + "\"/>";}
public SendMessageRequest(): base("OnsMqtt", "2019-12-11", "SendMessage", "onsmqtt", "openAPI"){Method = MethodType.POST;}
public virtual StartInstancesResponse StartInstances(StartInstancesRequest request){var options = new InvokeOptions();options.RequestMarshaller = StartInstancesRequestMarshaller.Instance;options.ResponseUnmarshaller = StartInstancesResponseUnmarshaller.Instance;return Invoke<StartInstancesResponse>(request, options);}
public IDataValidationConstraint CreateFormulaListConstraint(String listFormula){return DVConstraint.CreateFormulaListConstraint(listFormula);}
public virtual NGit.Api.TagCommand SetObjectId(RevObject id){this.id = id;return this;}
public string GetAccessKeyId(){return legacyCredential.AccessKeyId;}
public StandardQueryParser(): base(new StandardQueryConfigHandler(), new StandardSyntaxParser(),new StandardQueryNodeProcessorPipeline(null),new StandardQueryTreeBuilder()){EnablePositionIncrements = true;}
public virtual bool Get(int index){return bits.SafeGet(index);}
public DescribeCacheSecurityGroupsRequest(string cacheSecurityGroupName){_cacheSecurityGroupName = cacheSecurityGroupName;}
public virtual PutRestApiResponse PutRestApi(PutRestApiRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutRestApiRequestMarshaller.Instance;options.ResponseUnmarshaller = PutRestApiResponseUnmarshaller.Instance;return Invoke<PutRestApiResponse>(request, options);}
public override void Parse(TextReader @in){int lineNumber = 0;TextReader br = @in;try{string line = null;string lastSynSetID = "";CharsRef[] synset = new CharsRef[8];int synsetSize = 0;while ((line = br.ReadLine()) != null){lineNumber++;string synSetID = line.Substring(2, 9);if (!synSetID.Equals(lastSynSetID, StringComparison.Ordinal)){AddInternal(synset, synsetSize);synsetSize = 0;}if (synset.Length <= synsetSize + 1){CharsRef[] larger = new CharsRef[synset.Length * 2];Array.Copy(synset, 0, larger, 0, synsetSize);synset = larger;}synset[synsetSize] = ParseSynonym(line, synset[synsetSize]);synsetSize++;lastSynSetID = synSetID;}AddInternal(synset, synsetSize);}catch (System.ArgumentException e){throw new Exception("Invalid synonym rule at line " + lineNumber.ToString(), e);}finally{br.Dispose();}}
public override java.nio.IntBuffer asReadOnlyBuffer(){java.nio.IntToByteBufferAdapter buf = new java.nio.IntToByteBufferAdapter(byteBuffer.asReadOnlyBuffer());buf._limit = _limit;buf._position = _position;buf._mark = _mark;buf.byteBuffer._order = byteBuffer._order;return buf;}
public HSSFWorkbook GetStubHSSFWorkbook(){HSSFWorkbook wb = HSSFWorkbook.Create(GetStubWorkbook());foreach (BoundSheetRecord bsr in boundSheetRecords) {wb.CreateSheet(bsr.Sheetname);}return wb;}
public static string GetNewRoleSessionName(){return "aliyun-net-sdk-" + DateTime.UtcNow.currentTimeMillis();}
public virtual NGit.Api.DiffCommand SetOutputStream(OutputStream @out){this.@out = @out;return this;}
public static ContentSource Create(ObjectReader reader){return new ContentSource.ObjectReaderSource(reader);}
public virtual GetPredictionResponse GetPrediction(GetPredictionRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetPredictionRequestMarshaller.Instance;options.ResponseUnmarshaller = GetPredictionResponseUnmarshaller.Instance;return Invoke<GetPredictionResponse>(request, options);}
public void AddChildRecord(EscherRecord childRecord){ChildRecords.Add(childRecord);}
public virtual ListTablesResponse ListTables(string exclusiveStartTableName){var request = new ListTablesRequest();request.ExclusiveStartTableName = exclusiveStartTableName;return ListTables(request);}
public virtual BatchDeleteImageResponse BatchDeleteImage(BatchDeleteImageRequest request){var options = new InvokeOptions();options.RequestMarshaller = BatchDeleteImageRequestMarshaller.Instance;options.ResponseUnmarshaller = BatchDeleteImageResponseUnmarshaller.Instance;return Invoke<BatchDeleteImageResponse>(request, options);}
public override void Add(RevCommit c){BlockRevQueue.Block b = head;if (b == null || !b.CanUnpop()){b = free.NewBlock();b.ResetToEnd();b.next = head;head = b;}b.Unpop(c);}
public override string ToString(){return this.GetType().Name + "(bitsPerValue=" + m_bitsPerValue + ", size=" + Count + ", elements.length=" + blocks.Length + ")";}
public PackConfig(Repository db){FromConfig(db.GetConfig());}
public virtual CompareFacesResponse CompareFaces(CompareFacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = CompareFacesRequestMarshaller.Instance;options.ResponseUnmarshaller = CompareFacesResponseUnmarshaller.Instance;return Invoke<CompareFacesResponse>(request, options);}
public virtual DeleteUserProfileResponse DeleteUserProfile(DeleteUserProfileRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteUserProfileRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteUserProfileResponseUnmarshaller.Instance;return Invoke<DeleteUserProfileResponse>(request, options);}
public IComment CreateCellComment(IClientAnchor anchor){return CreateComment((HSSFAnchor)anchor);}
public CollatedTermAttributeImpl(Collator collator){this.collator = (Collator)collator.Clone();}
public virtual ExecutePolicyResponse ExecutePolicy(ExecutePolicyRequest request){var options = new InvokeOptions();options.RequestMarshaller = ExecutePolicyRequestMarshaller.Instance;options.ResponseUnmarshaller = ExecutePolicyResponseUnmarshaller.Instance;return Invoke<ExecutePolicyResponse>(request, options);}
public virtual UpdateEmailTemplateResponse UpdateEmailTemplate(UpdateEmailTemplateRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateEmailTemplateRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateEmailTemplateResponseUnmarshaller.Instance;return Invoke<UpdateEmailTemplateResponse>(request, options);}
public void WithRoleSessionDurationSeconds(long roleSessionDurationSeconds){if (roleSessionDurationSeconds < 180 || roleSessionDurationSeconds > 3600){throw new ArgumentOutOfRangeException("Assume Role session duration should be in the range of 3min - 1Hr");}this.roleSessionDurationSeconds = roleSessionDurationSeconds;}
public override java.io.Writer append(java.lang.CharSequence csq){if (csq == null){csq = java.lang.CharSequenceProxy.Wrap("null");}append(csq, 0, csq.Length);return this;}
public virtual RemovePermissionResponse RemovePermission(string queueUrl, string label){var request = new RemovePermissionRequest();request.QueueUrl = queueUrl;request.Label = label;return RemovePermission(request);}
public void Clear(){if (_evaluationListener != null){_evaluationListener.OnClearWholeCache();}_plainCellCache.Clear();_formulaCellCache.Clear();}
public void AppendUserAgent(string key, string value){userAgentConfig.AppendUserAgent(key, value);}
public NameXPtg AddNameXPtg(String name){int extBlockIndex = -1;ExternalBookBlock extBlock = null;for (int i = 0; i < _externalBookBlocks.Length; i++){SupBookRecord ebr = _externalBookBlocks[i].GetExternalBookRecord();if (ebr.IsAddInFunctions){extBlock = _externalBookBlocks[i];extBlockIndex = i;break;}}if (extBlock == null){extBlock = new ExternalBookBlock();extBlockIndex = ExtendExternalBookBlocks(extBlock);int idx = FindFirstRecordLocBySid(ExternSheetRecord.sid);_workbookRecordList.Add(idx, extBlock.GetExternalBookRecord());_externSheetRecord.AddRef(_externalBookBlocks.Length - 1, -2, -2);}ExternalNameRecord extNameRecord = new ExternalNameRecord();extNameRecord.Text = (name);extNameRecord.SetParsedExpression(new Ptg[] { ErrPtg.REF_INVALID });int nameIndex = extBlock.AddExternalName(extNameRecord);int supLinkIndex = 0;for (IEnumerator iterator = _workbookRecordList.GetEnumerator(); iterator.MoveNext(); supLinkIndex++){Record record = (Record)iterator.Current;if (record is SupBookRecord){if (((SupBookRecord)record).IsAddInFunctions) break;}}int numberOfNames = extBlock.NumberOfNames;_workbookRecordList.Add(supLinkIndex + numberOfNames, extNameRecord);int fakeSheetIdx = -2; int ix = _externSheetRecord.GetRefIxForSheet(extBlockIndex, fakeSheetIdx, fakeSheetIdx);return new NameXPtg(ix, nameIndex);}
public virtual DeleteRouteSettingsResponse DeleteRouteSettings(DeleteRouteSettingsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteRouteSettingsRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteRouteSettingsResponseUnmarshaller.Instance;return Invoke<DeleteRouteSettingsResponse>(request, options);}
public virtual DescribeDBSecurityGroupsResponse DescribeDBSecurityGroups(DescribeDBSecurityGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDBSecurityGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDBSecurityGroupsResponseUnmarshaller.Instance;return Invoke<DescribeDBSecurityGroupsResponse>(request, options);}
public virtual void Advance(){previousValue = value;if (value == 1){value = outerInstance.minShingleSize;}else if (value == outerInstance.maxShingleSize){Reset();}else{++value;}}
public TabIdRecord(){_tabids = EMPTY_SHORT_ARRAY;}
public java.util.MapClass.Entry<K, V> firstEntry(){return this._enclosing.immutableCopy(this.endpoint(true));}
public override string Dequote(byte[] @in, int inPtr, int inEnd){if (2 <= inEnd - inPtr && @in[inPtr] == '"' && @in[inEnd - 1] == '"'){return Dq(@in, inPtr + 1, inEnd - 1);}return RawParseUtils.Decode(Constants.CHARSET, @in, inPtr, inEnd);}
public void WriteInt(int v){int b3 = (v >> 24) & 0xFF;int b2 = (v >> 16) & 0xFF;int b1 = (v >> 8) & 0xFF;int b0 = (v >> 0) & 0xFF;try{out1.WriteByte((byte)b0);out1.WriteByte((byte)b1);out1.WriteByte((byte)b2);out1.WriteByte((byte)b3);}catch (IOException e){throw new RuntimeException(e);}}
public virtual int indexOf(object @object){int size_1;object[] array;lock (mutex){size_1 = list.size();array = new object[size_1];list.toArray(array);}if (@object != null){{for (int i = 0; i < size_1; i++){if (@object.Equals(array[i])){return i;}}}}else{{for (int i = 0; i < size_1; i++){if (array[i] == null){return i;}}}}return -1;}
public virtual AddCommand Add(){return new AddCommand(repo);}
public Ptg Get3DReferencePtg(CellReference cr, SheetIdentifier sheet){int extIx = GetSheetExtIx(sheet);return new Ref3DPtg(cr, extIx);}
public override int Next(){if (text.Index == text.EndIndex || 0 == sentenceStarts.Length){return Done;}else if (currentSentence < sentenceStarts.Length - 1){text.SetIndex(sentenceStarts[++currentSentence]);return Current;}else{return Last();}}
public bool IsRowGroupCollapsed(int row){int collapseRow = FindEndOfRowOutlineGroup(row) + 1;if (GetRow(collapseRow) == null)return false;else return GetRow(collapseRow).Colapsed;}
public void RemoveField(string name){for (int i = 0; i < fields.Count; i++){IIndexableField field = fields[i];if (field.Name.Equals(name, StringComparison.Ordinal)){fields.Remove(field);return;}}}
public override int Hash(BytesRef br){return Hash32(br.Bytes, br.Offset, br.Length);}
public virtual RefUpdate.Result GetResult(){return result;}
public virtual DescribeStackSetResponse DescribeStackSet(DescribeStackSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeStackSetRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeStackSetResponseUnmarshaller.Instance;return Invoke<DescribeStackSetResponse>(request, options);}
public UsernamePasswordCredentialsProvider(string username, char[] password){this.username = username;this.password = password;}
public MissingRowDummyRecord(int rowNumber){this.rowNumber = rowNumber;}
public Ref3DPtg(ILittleEndianInput in1){field_1_index_extern_sheet = in1.ReadShort();ReadCoordinates(in1);}
public void Append(BytesRef bytes){var length = bytes.Length;if (length == 0){return;}int offset = bytes.Offset;int overflow = (length + ByteUpto) - BYTE_BLOCK_SIZE;do{if (overflow <= 0){Array.Copy(bytes.Bytes, offset, buffer, ByteUpto, length);ByteUpto += length;break;}else{int bytesToCopy = length - overflow;if (bytesToCopy > 0){Array.Copy(bytes.Bytes, offset, buffer, ByteUpto, bytesToCopy);offset += bytesToCopy;length -= bytesToCopy;}NextBuffer();overflow = overflow - BYTE_BLOCK_SIZE;}} while (true);}
public virtual CreateFolderResponse CreateFolder(CreateFolderRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateFolderRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateFolderResponseUnmarshaller.Instance;return Invoke<CreateFolderResponse>(request, options);}
public virtual CreateTrialComponentResponse CreateTrialComponent(CreateTrialComponentRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateTrialComponentRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateTrialComponentResponseUnmarshaller.Instance;return Invoke<CreateTrialComponentResponse>(request, options);}
public virtual ResizeClusterResponse ResizeCluster(ResizeClusterRequest request){var options = new InvokeOptions();options.RequestMarshaller = ResizeClusterRequestMarshaller.Instance;options.ResponseUnmarshaller = ResizeClusterResponseUnmarshaller.Instance;return Invoke<ResizeClusterResponse>(request, options);}
public virtual void SetDeltaSearchWindowSize(int objectCount){if (objectCount <= 2){SetDeltaCompress(false);}else{deltaSearchWindowSize = objectCount;}}
public E previous(){if (this.expectedModCount == this._enclosing.modCount){try{E result = this._enclosing.get(this.pos);this.lastPosition = this.pos;this.pos--;return result;}catch (System.IndexOutOfRangeException){throw new java.util.NoSuchElementException();}}throw new java.util.ConcurrentModificationException();}
public static void RegisterFunction(String name, FreeRefFunction func){AnalysisToolPak.RegisterFunction(name, func);}
public virtual PurchaseHostReservationResponse PurchaseHostReservation(PurchaseHostReservationRequest request){var options = new InvokeOptions();options.RequestMarshaller = PurchaseHostReservationRequestMarshaller.Instance;options.ResponseUnmarshaller = PurchaseHostReservationResponseUnmarshaller.Instance;return Invoke<PurchaseHostReservationResponse>(request, options);}
public float averageCharsPerByte(){return _averageCharsPerByte;}
public override java.nio.ByteBuffer putLong(int index, long value){throw new java.nio.ReadOnlyBufferException();}
public void RemoveSubject(){MutableSection s = (MutableSection)FirstSection;s.RemoveProperty(PropertyIDMap.PID_SUBJECT);}
public override bool Equals(object o){return o is RepositoryCache.FileKey && path.Equals(((RepositoryCache.FileKey)o).path);}
public virtual PutScheduledUpdateGroupActionResponse PutScheduledUpdateGroupAction(PutScheduledUpdateGroupActionRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutScheduledUpdateGroupActionRequestMarshaller.Instance;options.ResponseUnmarshaller = PutScheduledUpdateGroupActionResponseUnmarshaller.Instance;return Invoke<PutScheduledUpdateGroupActionResponse>(request, options);}
public AutoCRLFInputStream(InputStream @in, bool detectBinary){this.@in = @in;this.detectBinary = detectBinary;}
public void RemoveParCount(){MutableSection s = (MutableSection)FirstSection;s.RemoveProperty(PropertyIDMap.PID_PARCOUNT);}
public virtual CopyWorkspaceImageResponse CopyWorkspaceImage(CopyWorkspaceImageRequest request){var options = new InvokeOptions();options.RequestMarshaller = CopyWorkspaceImageRequestMarshaller.Instance;options.ResponseUnmarshaller = CopyWorkspaceImageResponseUnmarshaller.Instance;return Invoke<CopyWorkspaceImageResponse>(request, options);}
public FieldType(FieldType @ref){this.indexed = @ref.IsIndexed;this.stored = @ref.IsStored;this.tokenized = @ref.IsTokenized;this.storeTermVectors = @ref.StoreTermVectors;this.storeTermVectorOffsets = @ref.StoreTermVectorOffsets;this.storeTermVectorPositions = @ref.StoreTermVectorPositions;this.storeTermVectorPayloads = @ref.StoreTermVectorPayloads;this.omitNorms = @ref.OmitNorms;this.indexOptions = @ref.IndexOptions;this.docValueType = @ref.DocValueType;this.numericType = @ref.NumericType;}
public virtual GetMediaForFragmentListResponse GetMediaForFragmentList(GetMediaForFragmentListRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetMediaForFragmentListRequestMarshaller.Instance;options.ResponseUnmarshaller = GetMediaForFragmentListResponseUnmarshaller.Instance;return Invoke<GetMediaForFragmentListResponse>(request, options);}
public override WAH8DocIdSet Build(){if (this.wordNum != -1){AddWord(wordNum, (byte)word);}return base.Build();}
public CzechStemFilterFactory(IDictionary<string, string> args) : base(args){if (args.Count > 0){throw new System.ArgumentException("Unknown parameters: " + args);}}
public static byte[] Grow(byte[] array){return Grow(array, 1 + array.Length);}
public XORShift64Random(long seed){x = seed == 0 ? 0xdeadbeef : seed;}
public virtual E valueAt(int index){if (mGarbage){gc();}return (E)mValues[index];}
public short GetFontAtIndex(int index){int size = _string.FormatRunCount;UnicodeString.FormatRun currentRun = null;for (int i = 0; i < size; i++){UnicodeString.FormatRun r = _string.GetFormatRun(i);if (r.CharacterPos > index)break;else currentRun = r;}if (currentRun == null)return NO_FONT;else return currentRun.FontIndex;}
public virtual CreateVpnGatewayResponse CreateVpnGateway(CreateVpnGatewayRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateVpnGatewayRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateVpnGatewayResponseUnmarshaller.Instance;return Invoke<CreateVpnGatewayResponse>(request, options);}
public Builder(): base(){lastDocID = -1;wordNum = -1;word = 0;}
public virtual GetConfigurationResponse GetConfiguration(GetConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = GetConfigurationResponseUnmarshaller.Instance;return Invoke<GetConfigurationResponse>(request, options);}
public virtual void setIndeterminate(bool indeterminate){lock (this){if ((!mOnlyIndeterminate || !mIndeterminate) && indeterminate != mIndeterminate){mIndeterminate = indeterminate;if (indeterminate){mCurrentDrawable = mIndeterminateDrawable;startAnimation();}else{mCurrentDrawable = mProgressDrawable;stopAnimation();}}}}
public override string ToString(){return "MultiTermsEnum(" + Arrays.ToString(subs) + ")";}
public virtual IList<FormatError> GetErrors(){return errors;}
public static string GetLocalizedMessage(string key, params object[] args){return GetLocalizedMessage(key, CultureInfo.CurrentUICulture, args);}
public override java.util.Iterator<java.util.MapClass.Entry<K, V>> iterator(){return new java.util.Hashtable<K, V>.EntryIterator(this._enclosing);}
public static int SerializePtgs(Ptg[] ptgs, byte[] array, int offset){int size = ptgs.Length;LittleEndianByteArrayOutputStream out1 = new LittleEndianByteArrayOutputStream(array, offset);ArrayList arrayPtgs = null;for (int k = 0; k < size; k++){Ptg ptg = ptgs[k];ptg.Write(out1);if (ptg is ArrayPtg){if (arrayPtgs == null){arrayPtgs = new ArrayList(5);}arrayPtgs.Add(ptg);}}if (arrayPtgs != null){for (int i = 0; i < arrayPtgs.Count; i++){ArrayPtg p = (ArrayPtg)arrayPtgs[i];p.WriteTokenValueBytes(out1);}}return out1.WriteIndex - offset; ;}
public virtual FileMode GetMode(DiffEntry.Side side){return side == DiffEntry.Side.OLD ? GetOldMode() : GetNewMode();}
public virtual SubmoduleInitCommand SubmoduleInit(){return new SubmoduleInitCommand(repo);}
public static TreeFilter Create(ICollection<TreeFilter> list){if (list.Count < 2){throw new ArgumentException(JGitText.Get().atLeastTwoFiltersNeeded);}TreeFilter[] subfilters = new TreeFilter[list.Count];Sharpen.Collections.ToArray(list, subfilters);if (subfilters.Length == 2){return Create(subfilters[0], subfilters[1]);}return new AndTreeFilter.List(subfilters);}
public void Reset(){state = null;consumed = true;keepOrig = false;matched = false;}
public override java.nio.IntBuffer asReadOnlyBuffer(){return java.nio.ReadOnlyIntArrayBuffer.copy(this, _mark);}
public virtual string GetString(int begin, int end, bool dropLF){if (begin == end){return string.Empty;}int s = GetStart(begin);int e = GetEnd(end - 1);if (dropLF && content[e - 1] == '\n'){e--;}return Decode(s, e);}
public java.io.File[] listFiles(java.io.FileFilter filter){java.io.File[] files = listFiles();if (filter == null || files == null){return files;}java.util.List<java.io.File> result = new java.util.ArrayList<java.io.File>(files.Length);foreach (java.io.File file in files){if (filter.accept(file)){result.add(file);}}return result.toArray(new java.io.File[result.size()]);}
public override bool Equals(object obj){if (obj == null)return false;if (!GetType().Equals(obj.GetType()))return false;return ToString().Equals(obj.ToString(), StringComparison.Ordinal);}
public static InternalWorkbook CreateStubWorkbook(ExternSheetRecord[] externs,BoundSheetRecord[] bounds, SSTRecord sst){List<Record> wbRecords = new List<Record>();if (bounds != null){for (int i = 0; i < bounds.Length; i++){wbRecords.Add(bounds[i]);}}if (sst != null){wbRecords.Add(sst);}if (externs != null){wbRecords.Add(SupBookRecord.CreateInternalReferences((short)externs.Length));for (int i = 0; i < externs.Length; i++){wbRecords.Add(externs[i]);}}wbRecords.Add(EOFRecord.instance);return InternalWorkbook.CreateWorkbook(wbRecords);}
public S3Signer(){_s3Signer = new Amazon.Runtime.Internal.Auth.S3Signer(AWSConfigsS3.UseSignatureVersion4, RegionDetectionUpdater);}
public virtual GetIdentityNotificationAttributesResponse GetIdentityNotificationAttributes(GetIdentityNotificationAttributesRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetIdentityNotificationAttributesRequestMarshaller.Instance;options.ResponseUnmarshaller = GetIdentityNotificationAttributesResponseUnmarshaller.Instance;return Invoke<GetIdentityNotificationAttributesResponse>(request, options);}
public override java.nio.DoubleBuffer slice(){return new java.nio.ReadOnlyDoubleArrayBuffer(remaining(), backingArray, offset +_position);}
public virtual ListTagsForDeliveryStreamResponse ListTagsForDeliveryStream(ListTagsForDeliveryStreamRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListTagsForDeliveryStreamRequestMarshaller.Instance;options.ResponseUnmarshaller = ListTagsForDeliveryStreamResponseUnmarshaller.Instance;return Invoke<ListTagsForDeliveryStreamResponse>(request, options);}
public virtual java.util.NavigableSet<E> subSet(E start, bool startInclusive, E end, bool endInclusive){java.util.Comparator<E> c = backingMap.comparator();int compare = (c == null) ? ((java.lang.Comparable<E>)start).compareTo(end) : c.compare(start, end);if (compare <= 0){return new java.util.TreeSet<E>(backingMap.subMap(start, startInclusive, end, endInclusive));}throw new System.ArgumentException();}
public static double GetExcelDate(DateTime date){return GetExcelDate(date, false);}
public virtual void Merge(TextFragment frag2){TextEndPos = frag2.TextEndPos;Score = Math.Max(Score, frag2.Score);}
public virtual CreateLedgerResponse CreateLedger(CreateLedgerRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateLedgerRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateLedgerResponseUnmarshaller.Instance;return Invoke<CreateLedgerResponse>(request, options);}
public override short get(){if (_position == _limit){throw new java.nio.BufferUnderflowException();}return byteBuffer.getShort(_position++ * libcore.io.SizeOf.SHORT);}
public void Reset(int[] docs, int[] freqs){this.docs = docs;this.freqs = freqs;if (freqs != null && tmpFreqs == null){tmpFreqs = new int[tmpDocs.Length];}}
public virtual DeleteFacesResponse DeleteFaces(DeleteFacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteFacesRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteFacesResponseUnmarshaller.Instance;return Invoke<DeleteFacesResponse>(request, options);}
public virtual bool RequiresCommitBody(){return true;}
public virtual UpdateDomainNameserversResponse UpdateDomainNameservers(UpdateDomainNameserversRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateDomainNameserversRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateDomainNameserversResponseUnmarshaller.Instance;return Invoke<UpdateDomainNameserversResponse>(request, options);}
public override string ToString(){return key + "=" + value;}
public virtual RenderUiTemplateResponse RenderUiTemplate(RenderUiTemplateRequest request){var options = new InvokeOptions();options.RequestMarshaller = RenderUiTemplateRequestMarshaller.Instance;options.ResponseUnmarshaller = RenderUiTemplateResponseUnmarshaller.Instance;return Invoke<RenderUiTemplateResponse>(request, options);}
public override Merger NewMerger(Repository db, bool inCore){return new ResolveMerger(db, inCore);}
public override ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1,ValueEval arg2){double result;try{result = Evaluate(EvalArg(arg0, srcRowIndex, srcColumnIndex), EvalArg(arg1, srcRowIndex, srcColumnIndex), EvalArg(arg2, srcRowIndex, srcColumnIndex));}catch (EvaluationException e){return e.GetErrorEval();}return new NumberEval(result);}
public virtual int GetThreads(){return threads;}
public virtual StopRelationalDatabaseResponse StopRelationalDatabase(StopRelationalDatabaseRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopRelationalDatabaseRequestMarshaller.Instance;options.ResponseUnmarshaller = StopRelationalDatabaseResponseUnmarshaller.Instance;return Invoke<StopRelationalDatabaseResponse>(request, options);}
public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[FOOTER]\n");buffer.Append("    .footer         = ").Append(this.Text).Append("\n");buffer.Append("[/FOOTER]\n");return buffer.ToString();}
public virtual DisassociateSkillFromSkillGroupResponse DisassociateSkillFromSkillGroup(DisassociateSkillFromSkillGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = DisassociateSkillFromSkillGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = DisassociateSkillFromSkillGroupResponseUnmarshaller.Instance;return Invoke<DisassociateSkillFromSkillGroupResponse>(request, options);}
public virtual V setValue(V @object){throw new System.NotSupportedException();}
public virtual PutRecordBatchResponse PutRecordBatch(PutRecordBatchRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutRecordBatchRequestMarshaller.Instance;options.ResponseUnmarshaller = PutRecordBatchResponseUnmarshaller.Instance;return Invoke<PutRecordBatchResponse>(request, options);}
public virtual E pollFirst(){java.util.MapClass.Entry<E, object> entry = backingMap.pollFirstEntry();return (entry == null) ? default(E) : entry.getKey();}
public virtual UpdateDirectConnectGatewayAssociationResponse UpdateDirectConnectGatewayAssociation(UpdateDirectConnectGatewayAssociationRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateDirectConnectGatewayAssociationRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateDirectConnectGatewayAssociationResponseUnmarshaller.Instance;return Invoke<UpdateDirectConnectGatewayAssociationResponse>(request, options);}
public Note(AnyObjectId noteOn, ObjectId noteData) : base(noteOn){data = noteData;}
public virtual RawText GetResultContents(){return resultContents;}
public QueryParserTokenManager(ICharStream stream){m_input_stream = stream;}
public int CompareTo(BytesRef other){return utf8SortedAsUnicodeSortOrder.Compare(this, other);}
public virtual GetDiskSnapshotResponse GetDiskSnapshot(GetDiskSnapshotRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDiskSnapshotRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDiskSnapshotResponseUnmarshaller.Instance;return Invoke<GetDiskSnapshotResponse>(request, options);}
public CreateDBParameterGroupRequest(string dbParameterGroupName, string dbParameterGroupFamily, string description){_dbParameterGroupName = dbParameterGroupName;_dbParameterGroupFamily = dbParameterGroupFamily;_description = description;}
public virtual SmallDocSet Union(SmallDocSet other){SmallDocSet bigger;SmallDocSet smaller;if (other.intSet.Count > this.intSet.Count){bigger = other;smaller = this;}else{bigger = this;smaller = other;}foreach (int v in smaller.intSet.Keys){if (v == smaller.intSet.EmptyVal){continue;}bigger.Set(v);}return bigger;}
public virtual int GetBigFileThreshold(){return bigFileThreshold;}
public override RevFilter Clone(){RevFilter[] s = new RevFilter[subfilters.Length];for (int i = 0; i < s.Length; i++){s[i] = subfilters[i].Clone();}return new AndRevFilter.List(s);}
public virtual GetDomainResponse GetDomain(GetDomainRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDomainRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDomainResponseUnmarshaller.Instance;return Invoke<GetDomainResponse>(request, options);}
public void Write(byte[] b){try{out1.Write(b, 0, b.Length);}catch (IOException e){throw new RuntimeException(e);}}
public override void Finish(FieldInfos fis, int numDocs){if (numBufferedDocs > 0){Flush();}else{Debug.Assert(bufferedDocs.Length == 0);}if (docBase != numDocs){throw new Exception("Wrote " + docBase + " docs, finish called with numDocs=" + numDocs);}indexWriter.Finish(numDocs, fieldsStream.GetFilePointer());CodecUtil.WriteFooter(fieldsStream);Debug.Assert(bufferedDocs.Length == 0);}
public K floorKey(K key){java.util.MapClass.Entry<K, V> entry = this.findBounded(key, java.util.TreeMap.Relation.FLOOR);return entry != null ? entry.getKey() : default(K);}
public virtual UpdateScalingParametersResponse UpdateScalingParameters(UpdateScalingParametersRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateScalingParametersRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateScalingParametersResponseUnmarshaller.Instance;return Invoke<UpdateScalingParametersResponse>(request, options);}
public static double ToPoints(long emu){return (double)emu / EMU_PER_POINT;}
public virtual UpdateModelVersionResponse UpdateModelVersion(UpdateModelVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateModelVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateModelVersionResponseUnmarshaller.Instance;return Invoke<UpdateModelVersionResponse>(request, options);}
public virtual UpdateConfigurationSetTrackingOptionsResponse UpdateConfigurationSetTrackingOptions(UpdateConfigurationSetTrackingOptionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateConfigurationSetTrackingOptionsRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateConfigurationSetTrackingOptionsResponseUnmarshaller.Instance;return Invoke<UpdateConfigurationSetTrackingOptionsResponse>(request, options);}
public virtual GetVoiceConnectorStreamingConfigurationResponse GetVoiceConnectorStreamingConfiguration(GetVoiceConnectorStreamingConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetVoiceConnectorStreamingConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = GetVoiceConnectorStreamingConfigurationResponseUnmarshaller.Instance;return Invoke<GetVoiceConnectorStreamingConfigurationResponse>(request, options);}
public virtual void TrimToSize(){if (n < array.Length){byte[] aux = new byte[n];System.Array.Copy(array, 0, aux, 0, n);array = aux;}}
public static BoundSheetRecord[] OrderByBofPosition(List<BoundSheetRecord> boundSheetRecords){BoundSheetRecord[] bsrs = boundSheetRecords.ToArray();Array.Sort(bsrs, new BOFComparator());return bsrs;}
public StoredField(string name, float value): base(name, TYPE){FieldsData = new Single(value);}
public static long[] Grow(long[] array){return Grow(array, 1 + array.Length);}
public override java.nio.ByteBuffer compact(){throw new System.NotImplementedException();}
public virtual org.xmlpull.v1.XmlPullParser newPullParser(){if (parserClasses == null){throw new org.xmlpull.v1.XmlPullParserException("Factory initialization was incomplete - has not tried "+ classNamesLocation);}if (parserClasses.size() == 0){throw new org.xmlpull.v1.XmlPullParserException("No valid parser classes found in "+ classNamesLocation);}java.lang.StringBuilder issues = new java.lang.StringBuilder();{for (int i = 0; i < parserClasses.size(); i++){System.Type ppClass = (System.Type)parserClasses.get(i);try{org.xmlpull.v1.XmlPullParser pp = (org.xmlpull.v1.XmlPullParser)System.Activator.CreateInstance(ppClass);{for (java.util.Iterator<object> iter = features.keySet().iterator(); iter.hasNext(); ){string key = (string)iter.next();bool value = (bool)features.get(key);if (value != null && value){pp.setFeature(key, true);}}}return pp;}catch (System.Exception ex){issues.append(ppClass.FullName + ": " + ex.ToString() + "; ");}}}throw new org.xmlpull.v1.XmlPullParserException("could not create parser: " + issues);}
public java.lang.StringBuffer insert(int index, float f){return insert(index, System.Convert.ToString(f));}
public virtual AcceptDirectConnectGatewayAssociationProposalResponse AcceptDirectConnectGatewayAssociationProposal(AcceptDirectConnectGatewayAssociationProposalRequest request){var options = new InvokeOptions();options.RequestMarshaller = AcceptDirectConnectGatewayAssociationProposalRequestMarshaller.Instance;options.ResponseUnmarshaller = AcceptDirectConnectGatewayAssociationProposalResponseUnmarshaller.Instance;return Invoke<AcceptDirectConnectGatewayAssociationProposalResponse>(request, options);}
public virtual CreateCacheSubnetGroupResponse CreateCacheSubnetGroup(CreateCacheSubnetGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateCacheSubnetGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateCacheSubnetGroupResponseUnmarshaller.Instance;return Invoke<CreateCacheSubnetGroupResponse>(request, options);}
public virtual void EndWorker(){if (workers.DecrementAndGet() == 0){process.Release();}}
public virtual UpdateHealthCheckResponse UpdateHealthCheck(UpdateHealthCheckRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateHealthCheckRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateHealthCheckResponseUnmarshaller.Instance;return Invoke<UpdateHealthCheckResponse>(request, options);}
public long RamBytesUsed(){long mem = RamUsageEstimator.ShallowSizeOf(this) + RamUsageEstimator.SizeOf(Offsets);if (Offsets != Ordinals){mem += RamUsageEstimator.SizeOf(Ordinals);}return mem;}
public virtual void setProgress(int progress){lock (this){setProgress(progress, false);}}
public virtual Ent Peek(){if (this.packedIdx < this._enclosing.packed.Size() && this.looseIdx < this._enclosing.loose.Size()){Ref p = this._enclosing.packed.Get(this.packedIdx);Ref l = this._enclosing.loose.Get(this.looseIdx);int cmp = RefComparator.CompareTo(p, l);if (cmp < 0){this.packedIdx++;return this.ToEntry(p);}if (cmp == 0){this.packedIdx++;}this.looseIdx++;return this.ToEntry(this.ResolveLoose(l));}if (this.looseIdx < this._enclosing.loose.Size()){return this.ToEntry(this.ResolveLoose(this._enclosing.loose.Get(this.looseIdx++)));}if (this.packedIdx < this._enclosing.packed.Size()){return this.ToEntry(this._enclosing.packed.Get(this.packedIdx++));}return null;}
public void Serialize(ILittleEndianOutput out1){out1.WriteShort(_extBookIndex);out1.WriteShort(_firstSheetIndex);out1.WriteShort(_lastSheetIndex);}
public override void ensureCapacity(int min){lock (this){base.ensureCapacity(min);}}
public V getAndSet(V newValue){while(true) {V x = get ();if (compareAndSet(x, newValue))return x;}}
public void RemoveBuiltinRecord(byte name, int sheetIndex){linkTable.RemoveBuiltinRecord(name, sheetIndex);}
public virtual DescribeRepositoryAssociationResponse DescribeRepositoryAssociation(DescribeRepositoryAssociationRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeRepositoryAssociationRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeRepositoryAssociationResponseUnmarshaller.Instance;return Invoke<DescribeRepositoryAssociationResponse>(request, options);}
public override java.nio.LongBuffer compact(){System.Array.Copy(backingArray, _position + offset, backingArray, offset, remaining());_position = _limit - _position;_limit = _capacity;_mark = UNSET_MARK;return this;}
public virtual DeleteApplicationSnapshotResponse DeleteApplicationSnapshot(DeleteApplicationSnapshotRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteApplicationSnapshotRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteApplicationSnapshotResponseUnmarshaller.Instance;return Invoke<DeleteApplicationSnapshotResponse>(request, options);}
public RebootCacheClusterRequest(string cacheClusterId, List<string> cacheNodeIdsToReboot){_cacheClusterId = cacheClusterId;_cacheNodeIdsToReboot = cacheNodeIdsToReboot;}
public Counta(){_predicate = defaultPredicate;}
public override void SetParams(string @params){base.SetParams(@params);int k = @params.IndexOf(',');name = @params.Substring(0, k - 0).Trim();value = @params.Substring(k + 1).Trim();}
public virtual IList<string> GetUnmergedPaths(){return unmergedPaths;}
public ValueEval Evaluate(ValueEval[] args, OperationEvaluationContext ec){if (args.Length != 2){return ErrorEval.VALUE_INVALID;}return Evaluate(ec.RowIndex, ec.ColumnIndex, args[0], args[1]);}
public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[TABLESTYLES]\n");buffer.Append("    .rt      =").Append(HexDump.ShortToHex(rt)).Append('\n');buffer.Append("    .grbitFrt=").Append(HexDump.ShortToHex(grbitFrt)).Append('\n');buffer.Append("    .unused  =").Append(HexDump.ToHex(unused)).Append('\n');buffer.Append("    .cts=").Append(HexDump.IntToHex(cts)).Append('\n');buffer.Append("    .rgchDefListStyle=").Append(rgchDefListStyle).Append('\n');buffer.Append("    .rgchDefPivotStyle=").Append(rgchDefPivotStyle).Append('\n');buffer.Append("[/TABLESTYLES]\n");return buffer.ToString();}
public virtual void SetStreamFileThreshold(int newLimit){streamFileThreshold = newLimit;}
public virtual DescribeAvailabilityOptionsResponse DescribeAvailabilityOptions(DescribeAvailabilityOptionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeAvailabilityOptionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeAvailabilityOptionsResponseUnmarshaller.Instance;return Invoke<DescribeAvailabilityOptionsResponse>(request, options);}
