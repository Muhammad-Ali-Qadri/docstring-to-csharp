public virtual void SetLoadBalancerPortAndInstancePort(int port){_loadBalancerPort = port;}
public virtual string[] GetModifiedList(){return Sharpen.Collections.UnmodifiableList(list.modified);}
public virtual void DeletePipeline(Pipeline pipeline){PipelineDatabase db = GetActivePipeline(pipeline);Delete(db, pipeline.Name, pipeline.Version, null);}
public virtual RoomMembershipResponse RoomMembership(Room membership){return CreateRoomMembership(membership);}
public virtual void SetInstanceIds(int instanceIds){_instanceIds = instanceIds;}
public virtual string path(int start, int end){return path(start, end);}
public virtual NGit.Backup.Backup CreateBackup(NGit.Backup.Input input){return new NGit.Backup.Backup(input);}
public virtual void add(object o){object map = o;if (mGarbage){gc();}mObjects[o] = new ObjectInfo(o);mGarbage = true;}
public virtual void Detach(object @object){appDefer = null;}
public Endpoint(string endpointName, string endpointEndpointType){_endpointName = endpointName;_endpointType = endpointEndpointType;}
public virtual bool HasAnyExternalEntries(){return HasAnyExternalEntries();}
public virtual E get(int position){return list[position];}
public string firstgroup{get; set; }
public default(Predicate_Default){this.predicate = _defaultPredicate;}
public virtual void SetMaxChange(int max){base.SetMaxChange(max);}
public void Remove(string name){_remove(name, true);}
public override object Decode(byte b){return this.Decode(b, 0, b.Length);}
public override string ToString(){return "Student(" + storyNumber + ")";}
public virtual bool IsDeltaCompress(DeltaCompressor compressor){return IsDeltaCompress(compressor);}
public override bool ShouldPackFooter(Object o){return base.ShouldPackFooter(o);}
public (int)_width = _default_w_height = _default_h_width = _default_h_height = _default_h_width = _default_h_height = _default_h_height = _default_h_width = _default_h_height = _default_h_height = _default_h_width = _default_h_height = _default_h_height = _default_h_height = _default_h_height = _h_height = _h_height = _h_height_is_not_equal return _default_w_width = _default_h_width, _default_h_height = _default_h_height, _default_h_border_width = _default_h_border_width, _default_h_border_height = _default_h_border_height, _default_h_border_style = _default_h_border_style, _default_h_border_style = _h_border_style, _h_border_style = _default_border_style, _default_h_border_style
public virtual string GetRuleSummary(){return this.ruleSummary;}
public formula string(IList<Formula> operands){return _formula.CreateFormulaString(operands);}
public virtual DescribeSpotFleetInstancesResponse DescribeSpotFleetInstances(DescribeSpotFleetInstancesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeSpotFleetInstancesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeSpotFleetInstancesResponseUnmarshaller.Instance;return Invoke<DescribeSpotFleetInstancesResponse>(request, options);}
public java.util.Iterator<E> entries(){return entries.iterator(this);}
public virtual void Set(T value){this._enclosing.result = value;}
public virtual IList<EscherNodeGroup> GetNodeGroups(){return nodeGroups;}
public virtual int GetHashCode(char[] array){return _le.GetHashCode(array);}
public virtual ResolverInformation ResolverInformation { get; private set; }
public Hooks.LifecycleHook CreateOrUpdateHook(LifecycleHook hook){return hook;}
public virtual E remove(E @object){lock (this._enclosing){int oldSize = this._enclosing._size;this._enclosing.remove(oldSize);this._enclosing._size = oldSize;this._enclosing.notifyDataSetRemoved();return this._enclosing._size!= oldSize;}}
public override string ToString(){return "Infinity";}
public Formula Clone(){return this;}
public virtual UpdateGatewayResponse UpdateGateway(UpdateGatewayResponse gatewayResponse){return UpdateGatewayResponse(gatewayResponse.Operation, gatewayResponse.NewGatewayResponse);}
public virtual NormaliseRangeResponse NormaliseRange(NormaliseRangeRequest request){var options = new InvokeOptions();options.RequestMarshaller = NormaliseRangeRequestMarshaller.Instance;options.ResponseUnmarshaller = NormaliseRangeResponseUnmarshaller.Instance;return Invoke<NormaliseRangeResponse>(request, options);}
public SnowballFilter CreateSnowballFilter(TokenStream tokenStream, SnowballStemmer stemmer){return CreateSnowballFilter(tokenStream, stemmer);}
public PasswordRev4Record SetPassword(PasswordRecord passwordRecord){field_1_password = passwordRecord.Password;}
public virtual ICollection<PackFile> GetPacks(){return Sharpen.Collections.UnmodifiableCollection(getPacks()));}
public virtual void ModifyCreditSpecification(CreditSpecification specification){this.creditSpecification = specification.ModifyCreditSpecification;}
public column vector(int start, int end){return new _ColumnVector_276(start, end);}
public virtual bool IsChildOf(ICommit commit){return commits.IsChildOf(commit);}
public void PutShort(short value){if (value >= 0){throw new System.IO.IOException("short value out of range");}Array.Copy(m_buf, _ReadIndex + _ReadIndex, m_buf, _ReadIndex + _WriteIndex, value);_ReadIndex += _ReadIndex;_ReadIndex += _ReadIndex;}
public virtual void ParseHeader(StringBuilder buffer, int index, String field_1, String value_1, String field_2, BoolType field_3, BoolType val_4){ParseBlock(buffer, field_1, field_2, bool_3, field_4);}
public TokenizerFactory(string name, int argCount, char[] buffer, int index, char[] expectedEndStrings, IntStreamTokenizerFactory block){Debug.Assert(name!= null);foreach (CharArrayTokenizerFactory block in builder.factories){CreateInstance(name, argCount, buffer, index);}return new TokenizerFactory(this, name, argCount, expectedEndStrings, block);}
public virtual void CreateSnapshot(){m_index = new NGit.Index.Index(this);}
public virtual void SetAttributes(string value){itemData = value;}
public virtual ReceiptRuleSet[] GetReceiptRuleSet(){return receiptRuleSet;}
public PublishingDestination(Destination destination){this.destination = destination;}
public virtual void UpdateTemplatePermissions(string template){UpdateTemplatePermissions(template.Name, template.Permissions);}
public virtual void RemoveKeywords(){_keywords = null;}
public virtual void setValueAt(int index, V value){object[] newValues = new object[values.Length + 1];System.Array.Copy(values, 0, newValues, 0, values.Length);}
public virtual void RenameTo(Name name){Rename(name, null);}
public int RightId(int id){return WordIdHelper.ParseWordId(id, _generator.invariantIdAt(id)));}
public virtual double get(string key){return properties[key];}
public virtual DeploymentStrategy Describe(List<DeploymentStrategy> strategies){return deploymentStrategies;}
public virtual ProgressMonitor GetProgressMonitor(){return _progressMonitor;}
public virtual void DisassociateRouteTable(RouteTable table){this.DisassociateRouteTable(table.RouteTableIndex);}
public virtual void Terminate(){_terminate = true;}
public void RemoveDocpartsProperty(){MutableSection s = (MutableSection)FirstSection;s.RemoveProperty(docpartsProperty);}
public virtual void DeleteCharsFromPos(int nChars, StringBuffer buffer, int pos){for (int i = pos; i < nChars; i++){DeleteChar(buffer, pos, nChars);}}
public virtual string ToString(){return GetCanonicalName();}
public string GetApiVersion(){return version;}
public DomainRenewator(DomainRenewator provider){return new DomainRenewator(provider, this);}
public override double Evaluate(double x){return base.Evaluate(x);}
public virtual int[] array_size_less_than_or_equal_to_minimum_target_size(int minTargetSize){return array_size_less_than_or_equal_to_minimum_target_size(minTargetSize);}
public override int setValueAt(int index, IValue value){return this._enclosing.setValue(index, value);}
public virtual int RowCount(IRowRecord row){return _rc4.XOrRecord.GetCellCount(row, 0);}
public static StaticCredentialsProvider Create(StaticCredentialsProviderProvider provider, ClientProfile profile){return new StaticCredentialsProvider(provider, profile);}
public virtual bool isEmpty(){return elements.Count == 0;}
public BorderFormattingObject(){return this;}
public virtual List<Application> GetApplications(){return listApplications();}
public pictureSchedule(PictureScheduleRequest request){_request = request;}
public void RemovePermission(string permissionName){_permissionTable[permissionName] = null;}
public virtual void DescribeVolumeStatus(){_volumeState.DescribeVolumesStatus();}
public virtual List<Deployment> GetDeploymentsForApp(string appName){var deployments = new List<Deployment>();foreach (Deployment deployment in _deployments){if (deployment.Count > 0){_deployments.Add(deployment);}}return deployments;}
public virtual Dictionary<string, Ref> GetTagRefs(){return tagRefs;}
public virtual void SetReservation(int capacity){m_capacity = capacity;}
public virtual int count(){lock (this._enclosing){return _enclosing._size;}}
public virtual char[] GetChars(string class1){return _le.GetChars(class1);}
public string getExtension(FilePath file){return path.GetExtension(file.GetPath());}
public link facet.  public linkFacetLinkInformation GetLinkFacetLinkInformation(){return linkFacetLinkInformation;}
public override SpanTermQuery SetTerm(string term){this.term = term;return this;}
public string Prefix(string @prefix){return Prefix(@prefix, CultureInfo.InvariantCulture);}
public ValueRangeRecord Read(RecordInputStream in1){return ReadValueRangeRecord(in1, in1.ReadUpto());}
public virtual void Set(T value){_value = value;}
public override CloudPhotoMergeFacesRequest Create(CloudPhotoMergeFacesRequest request){return Create(request, CloudPhotoMergeFacesRequest.class, "mergeFaces", "cloudphoto");}
public virtual ICollection<string> GetRoles(string identityPool){return identityPool.GetRoles(identityPoolName);}
public virtual UpdateHITExpirationTimeResponse UpdateHITExpirationTime(UpdateHITExpirationTimeResponse response){return UpdateHITExpirationTime(response.ExpirationTime);}
public virtual DescribeHsmClientCertificatesResponse DescribeHsmClientCertificates(DescribeHsmClientCertificatesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeHsmClientCertificatesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeHsmClientCertificatesResponseUnmarshaller.Instance;return Invoke<DescribeHsmClientCertificatesResponse>(request, options);}
public virtual DiffEntry Information(DiffEntry commit){return Commit(commit);}
public int codePointBefore(int index){return codePointBefore(index, true);}
public override IIndexableFields GetIndexableFields(string name){return base.GetIndexableFields(name);}
public int Get(byte b){if (b < 0){return m_bucketIndex;}return m_keyTable[b];}
public virtual int GetLinesDeleted(){return linesDeleted;}
public virtual bool isEmpty(){return isEmpty();}
public override object Serialize(byte[] b){return base.Serialize(b, a);}
public SortingSorters(IDocumentSorters sorter){this.sorter = sorter;}
public virtual NGit.Api.UserModel CreateInstance(string name){this.name = name;}
public virtual void StopPlacement(){_endPlacement = true;}
public void FinishWritingTheIndex(){_writer.FinishWritingTheIndex();}
public virtual void DeleteLoadBalancerListeners(){libcore.loadbalancer.BELServerCache.DeleteAll(this.loadBalancerListener);}
public virtual UpdateCompanyNetworkConfigurationResponse UpdateCompanyNetworkConfiguration(UpdateCompanyNetworkConfigurationResponse configResponse){return UpdateCompanyNetworkConfiguration(configResponse);}
public virtual DateTime CreateTime(){return CreateTime();}
public Norwegian Light stem filter:filter.  public NorwegianLight stemFilter(){return new NorwegianLightstemFilter(this);}
public void Delete(Vault vault){_vault = vault;}
public virtual ParseException generateParseException(string message, ParseException e){throw new System.NotImplementedException();}
public virtual ICharError GetCharacterError(){return GetCharacterError(GetCharacterError())}
public SnowballStemmer Create(Configuration configuration){return new SnowballStemmer(configuration);}
public virtual AddressBook GetAddressBook(){return null;}
public ListJobsRequest(ListJobsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListJobsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListJobsRequestUnmarshaller.Instance;return Invoke<ListJobsRequest>(request, options);}
public virtual double cosine(double number){return cosine(number, EPSILON);}
public override bool Equals(object o){return this.GetEnumerator().Equals(o);}
public virtual ICollection<Label> GetLabels(DataCategory dataCategory){return GetDataLabels(dataCategory.Name, dataCategory.IsIndexed, dataCategory.IsHighlighted, dataCategory.IsHighlighted);}
public Builder<BytesRef> Create(BytesRef bytesRef, StringFormat format){return this.Create(bytesRef, format);}
public virtual ParseException generateParseException(string message, ParseException e){throw new System.NotImplementedException();}
public virtual string GetObjectId(){return node.GetObjectId();}
public virtual string ToString(){return GetCanonicalName();}
public virtual int GetInvitationsCount(){return invitations.Count;}
public virtual java.util.List<E> newList(){return new_list_begin(this._enclosing);}
public virtual CapacityReservation Create(int capacity, CeilingMark flag){return new CapacityReservation(this, capacity, flag);}
public TreeFilters(IList<TreeFilter> filters){return new List<TreeFilter>(filters);}
public override DateTime Get(double value){if (double.IsNaN(value)){return null;}return DateTime.Parse(value, CultureInfo.InvariantCulture);}
public virtual Stemmer GetStem(string str){return StemmerUtil.Stem(str, m_luceneMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_luceneMatchVersion, m_matchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_matchGroups, m_matchGroups, m_matchGroups, m_matchGroupsToMatchGroups, m
public virtual IList<DeploymentConfig> GetDeploymentConfigurations(){return deploymentConfigurations;}
public bool Equals(MutableValueBool other){return Equals(other);}
public virtual bool isEmptyCellAtStart(CellRangeAddress rangeAddress){return isEmptyCellAtStart(rangeAddress);}
public virtual string value(){return key.Value;}
public virtual IMessage GetMessage(){return null;}
public virtual IList<TrackDescription> GetClusters(){return clusters;}
public virtual bool Contains(object o){if (processors.Contains(o)){return true;}processors.Contains(o);return false;}
public override string ToString(){return this.operator.ToString();}
public bool Equals(Query otherQuery){return query.Equals(otherQuery);}
public virtual ParseException generateParseException(string message, ParseException e){throw new System.NotImplementedException();}
public static SoraniStemFilter Create(TokenStream stream, int start, int end){return new SoraniStemFilter(stream, start, end, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition, endPosition
public override void write(byte b){throw new System.NotImplementedException();}
public virtual SourceInformation GetSourceInformation(){return sourceInformation;}
public override bool Equals(object o){if (o == this){return true;}return false;}
public virtual void write(java.io.OutputStream outputStream){throw new System.NotImplementedException();}
public virtual RuleDetail GetRuleDetail(RuleDetail ruleDetail){return ruleDetail;}
public override void fill(object[] values, int value, int arrayOffset, int arrayOffset, int arrayOffset, int arrayOffset) {foreach (object o in values){fill(o, value, arrayOffset, arrayOffset);}}
public virtual string ToString(BlockEnd_t blockEnd){return GetBlockEnd(blockEnd.Number, blockEnd.IsHidden, blockEnd.IsFixed, blockEnd.IsExternal, blockEnd.IsExternal);}
public virtual bool IsWholeColumnReference(FieldIndexData field_1_name_2_value_3_index){return field_1_name_2_index!= null;}
public new Request(Parameters parameters){return new Request(parameters);}
public virtual DeleteVpcResponse DeleteVpc(DeleteVpcRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteVpcRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteVpcResponseUnmarshaller.Instance;return Invoke<DeleteVpcResponse>(request, options);}
public virtual E clone(){return (E)clone();}
public virtual GetSentimentDetectionJobResponse GetSentimentDetectionJob(GetSentimentDetectionJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetSentimentDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = GetSentimentDetectionJobResponseUnmarshaller.Instance;return Invoke<GetSentimentDetectionJobResponse>(request, options);}
public override void SetPackedWindowSize(int size){this._enclosing.Size = size;}
public string pathToArray(){return pathToArray(path, 0, path.Length);}
public IDataValidationHandler MethodCalledByHSSFDataValidationHandler(IDataValidationHandler handler);  public IDataValidationHandler CalledByHSSFDataValidationHandler(IDataValidationHandler handler); {int i;for (i = 0; i < _hssfDataValidationHandlers.Length; i++){if (i == _hssfDataValidationHandlers.Length){return _hssfDataValidationHandlers[i];}}return null;}
public void AssociateIPGroups(bool associate){if (associate){_associate = true;_associateAccount = associate;_associateAccount2 = associate;_associateAccount3 = associate;_associateInstance4 = associate;}
public override void SeekToNextTerm(Term term){SeekTo(term.Index);}
public override string ToString(){return "no-lock";}
public virtual bool Equals(PersonIdent other){return EqualsViaReserialise(other);}
public override long GetLastModified(){return lastModified();}
public virtual VPCAssociation CreateVPCAssociation(VPCRouteTable routeTable){return new VPCAssociation(this, routeTable, localGateway, routeTable.MaxBlockSize, 0);}
public virtual MembersData GetMembersData(){return MembersData;}
public override string ToUnicodeString(int length){return ToUnicodeLEString(length);}
public virtual void AcceptPeeringAttachment(TransportingAttachment peeringAttachment){TransportingAttachment s = (TransportingAttachment)peeringAttachment;}
public virtual string GetLineDelimiter(){return lineDelimiter;}
public virtual ScheduledAction CreateScheduledAction(ScheduledAction action){return action;}
public virtual ReceiveCommand.Info GetAPNSChannel(){return channelInfo;}
public virtual string GetTopMarginString(){return GetMarginString(true);}
public virtual GetImageResponse GetImage(GetImageRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetImageRequestMarshaller.Instance;options.ResponseUnmarshaller = GetImageResponseUnmarshaller.Instance;return Invoke<GetImageResponse>(request, options);}
public virtual void UpdateRuntimeConfiguration(){this._enclosing.UpdateRuntimeConfiguration();}
public virtual void Clear(){_writer.Clear();}
public DirectoryIterator GetEntries(){return new DirectoryIterator(this);}
public virtual ConfigurationSet[] GetConfigurationSets(){return configurationSetRef.GetConfigurationSets();}
public override void Do(ITokenStream input){_input = input.GetEnumerator();}
public virtual void DeleteProject(Project project){DeleteProject(project.GetName());}
public virtual void Delete(DeleteStream eventStream){_eventStream = eventStream;}
public override void Serialize(ILittleEndianOutput out1){out1.Write(this.GetType().Name);out1.WriteByte(this.GetType().Name);out1.WriteByte(this.GetType().GetProperty("id"));out1.WriteShort(this.GetHashCode());}
public int Get(byte[] array, int tag_1){return Get(array, tag_1, tag_2);}
public virtual string GetKey(int key){return key;}
public int get(object o, key = key){return o[key];}
public virtual E next(){return this.nextEntry();}
public fleetUpdate(Fleet fleet){return fleet.UpdateAttributes(this);}
public virtual CompoundWordTokenFilter Create(ITokenStreamSource source){return Create(source, 0, source.Length);}
public int remaining(){return _buf.remaining();}
public virtual string SetUpstreamCommitName(){return upstreamCommitName;}
public virtual InvalidationResponse Invalidate(InvalidationResponse response){return Invalidate(response.ErrorMessage);}
public virtual void Complete(){base.Complete();}
public static HungarianLight stem filter constructor(params object[] args){if (args.Length > 0){throw new System.ArgumentException("args are not allowed");}return new HungarianLightstemfilter(args);}
public virtual void ImportAPIKeys(string appName){ImportAPIKeys(appName, true);}
public override bool Include(Ref commit){return false;}
public HSSFErrorEvaluator(IErrorEvaluator evaluator){_evaluator = evaluator;}
public virtual NGit.Api.GitObject Wrap(Object o){return new NGit.Api.GitObject(o);}
public short GetShort(ICharSequence text, IPosition start, IPosition end){return _string.GetShort(text, start, end);}
public virtual int size(){return this._enclosing._size;}
public virtual ICommitter GetSourceCommitter(){return sourceCommitter;}
public EscherRecord ToString(){return EscherRecord.ToString(this);}
public virtual IList<IParseTree> FindAllRuleNodes(IParseTree tree){return FindAllRuleNodes(tree.Root, tree.StartOffset, tree.EndOffset);}
public virtual DescribeJobResponse DescribeJob(DescribeJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeJobRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeJobRequestUnmarshaller.Instance;return Invoke<DescribeJobResponse>(request, options);}
public virtual string ToString(){return GetCanonicalName();}
public virtual string GetRawUserInfo(){return userInfo.GetRawUserInfo();}
public virtual void DeleteTrial(Trial trial){DeleteTrial(trial);}
public virtual int charArrayIndex(char[] chars, int index){return charArrayIndex(chars, index);}
public keypath (string certificatePath){_serverCertificatePath = certificatePath;}
public virtual InternetGateways Describe(InternetGatewayConfig config){return _internetGateways;}
public override void Read(RecordInputStream in1){ReadShortRecord(in1);}
public virtual void Rename(string newName){DirectoryInfo oldDirectory = Directory.Create(newName);Directory.Create(newName);}
public void Serialize(StreamOutput out1){out1.Write(this.PackWriter.Buffers[index].Serialize(this));}
public virtual void Clear(){_limit = 0;_size = 0;}
public virtual DescribeAutoScalingInstancesResponse DescribeAutoScalingInstances(DescribeAutoScalingInstancesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeAutoScalingInstancesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeAutoScalingInstancesResponseUnmarshaller.Instance;return Invoke<DescribeAutoScalingInstancesResponse>(request, options);}
public override ObjectId Decode(byte[] bs){return Decode(bs, 0, bs.Length);}
public virtual StatsResponse Stats(List<SeriesRequest> request){var options = new InvokeOptions();options.RequestMarshaller = StatsRequestMarshaller.Instance;options.ResponseUnmarshaller = StatsResponseUnmarshaller.Instance;return Invoke<StatsResponse>(request, options);}
public virtual NGit.Api.UpdateProxySessionResponse UpdateProxySession(UpdateProxySessionResponse response){return UpdateProxySession(response);}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_2_border_type);out1.WriteShort(field_2_border_options);}
public virtual void clear(){list.clear();}
public virtual string ToString(){return _name;}
public virtual void Dispose(){_reader.Dispose();}
public virtual IToken Create(IToken token){return (token == null)? Token.Create(token) : Token.Create(token.GetType(), token.GetStringValue());}
public virtual string key_1(){return keys[_size++];}
public virtual bool contains(object o){return list.contains(o);}
public java.util.regex.Matcher reset(java.util.regex.MatcherOptions _options) {this.options = _options || new java.util.regex.MatcherOptions() ;this.matches = internal.Collections.emptyList(m_options.maxCount);this.matcherEnd = 0;this.matcherStartPos = 0;this.matcherEnd = 0;this.matcherStartPos = 0;this.matcherEnd = 0;this.matcherOptions = _options.maxCount;this.matcherOptions = this.matcher.options;}
public virtual IEnumerator<long?> Decode(long? input, int? length) {return Input.GetEnumerator();}
public string GetTitle(){return _title;}
public bool HasBeenWrittenToDisk(){return File.HasBeenWrittenToDisk();}
public NameCommentRecord GetNameCommentRecord(){return nameCommentRecords.Get(0);}
public HSSFRichTextString(String str){this.m_str = str;}
public FieldLevelEncryptionConfig Update(FieldLevelEncryptionConfig existing){return existing;}
public virtual IdentityPoolConfiguration GetIdentityPoolConfiguration(){return identityPoolConfiguration;}
public override bool Equals(object o){if (o == this){return true;}return false;}
public virtual string ToString(){return GetCanonicalName();}
public EdgeNGramTokenFilter Create(EdgeNGramTokenFilterConfig config){return (EdgeNGramTokenFilter)Create(config, "edgeNGramTokenFilter");}
public string read(byte[] buffer, int offset, int length) {return read(buffer, offset, length);}
public override WAH8DocIdSet Create(IDbRecordSet ch1){return base.Create(ch1);}
public blank(BLANK_RECORD){return blank(0);}
public ParserSet up(){this.parser = new Parser(this);this.precedence = true;this.m_precedence = true;this.m_precedence = true;this.m_precedence = true;this.m_precedence_limit = 10;this.m_parser.enablePositionIncrements = true;this.m_precedence_limit = 10;this.m_precedence_limit = 10;this.m_compiled.setParser(this);}
public virtual int capacity(){return _limit;}
public virtual Token Create(Type type, string text){return new Token(type, text);}
public override void WriteByte(int b){if (m_len >= m_buf.Length){Resize(m_len + 1);}UnsafeWriteByte(b);}
public virtual AppDetail GetAppDetail(){return appDetail;}
public override void putShort(short value){throw new System.NotImplementedException();}
public virtual LifecycleConfig GetLifecycleConfig(){return lifecycleConfig;}
public CellRecord Unpack(RecordInputStream in1){return this.ReadRecord(in1);}
public virtual List<Trial> GetTrials(){return trials;}
public virtual bool set(object value){return set(Sharpen.Util.Equals(value, this.get(key)) && set(key, this.get(key)) && this._enclosing._size == value.Length && this.get(key) == value.Get(key.Get(key.Get(key.Get(key.Get(key.Get(key.Get(key.Get(key.Get(key.Get(key)));return value;}
public virtual NGit.UserModel.PasswordVerifier GetPasswordVerifier(){return passwordVerifier;}
public MoPen CreateDevice Request{return CreateDeviceRequest(null, null, null);}
public virtual ExportRepositoryResponse ExportRepository(ExportRepositoryRequest request){var options = new InvokeOptions();options.RequestMarshaller = ExportRepositoryRequestMarshaller.Instance;options.ResponseUnmarshaller = ExportRepositoryResponseUnmarshaller.Instance;return Invoke<ExportRepositoryResponse>(request, options);}
public void SetEmptyCellRectGroup(ICellRectGroup cellRectGroup){_cellRectGroup = new EmptyCellRectGroup(_cellRectGroup, _cellRectGroup.NumCells);}
public void Reset(int capacity){blockSize = capacity;}
public ImageRequest ImageRequest(ImageRequest request){var options = new InvokeOptions();options.RequestMarshaller = ImageRequestMarshaller.Instance;options.ResponseUnmarshaller = ImageRequestUnmarshaller.Instance;return Invoke<ImageRequest>(request, options);}
public override int Read(int count){return _in.Read(count);}
public virtual NGit.Api.Alias CreateAlias(){return CreateAlias(null, null);}
public void DeleteSecurityGroups(string vpcGroupName){DeleteSecurityGroups(vpcGroupName, null);}
public virtual IList<Route> GetRoutes(){return localGateway.GetRoutes(this);}
public virtual PrintGridlinesRecord ReadPrintGridlines(PrintGridlinesRecord in1){return ReadPrintGridlines(in1, 0);}
public string GetResource(){return _resource;}
public void Update(int heapSize){Update(heapSize);}
public override void SetMinSkipCount(int minSkipCount, int lowFreqCutoff){base.SetMinSkipCount(minSkipCount);base.SetLowFreqCutoff(lowFreqCutoff);}
public java.nio.direct.DirectTrackingAllocator newDirectTrackingAllocator(blockSize, byteCount){return new java.nio.direct.DirectTrackingAllocator(blockSize, byteCount);}
public virtual bool IsPackagedVersion(XmlElement file){return File.GetWriteAttribute(file, BasicFSConstants.OMAP_VERSION, true);}
public virtual UpdateFacetResponse UpdateFacet(UpdateFacetRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateFacetRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateFacetResponseUnmarshaller.Instance;return Invoke<UpdateFacetResponse>(request, options);}
public virtual int GetMaximumCharsPerByte(){return _maxCharsPerByte;}
public virtual RegisterInstancesServerResponse RegisterInstancesServer(RegisterInstancesServerResponse registerInstancesServerResponse){return RegisterInstancesServer(registerInstancesServerResponse, "list of instances with load balancer")}
public void SetField_1_reserved_to_0(Field_1_reserved_t value){_field_1_value = value;_is_dirty = false;}
public Anchor(E anchor){return anchor;}
public virtual void Unlink(){_developerIdentity = null;}
public override String ToString(){StringBuilder sb = new StringBuilder(64);sb.Append(GetType().Name).Append(" [");sb.Append(FormatAsString());sb.Append("]");return sb.ToString();}
public virtual void write(char b){throw new System.NotImplementedException();}
public virtual void Start(int n){Start(n);}
public java.nio.ReadWriteBuffer newReadWriteBuffer(this);return newjava.nio.ReadWriteHeapBuffer(this);}
public virtual void SetIdentityHeadersInNotifications(bool enabled){this.enabled = enabled;}
public virtual MerchantAccountDetails DefaultCreditSpecification(){return DefaultCreditSpecificationDetails;}
public virtual void removeAt(int index){removeAt(index);}
public virtual ContactMethodVerificationResponse ContactMethodVerification(ContactMethod verificationRequest){return ContactMethodVerification(verificationRequest);}
public virtual GetResponse Get(GetRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetRequestMarshaller.Instance;options.ResponseUnmarshaller = GetResponseUnmarshaller.Instance;return Invoke<GetResponse>(request, options);}
public virtual bool Equals(SpanPositionRangeQuery query){return query.Equals(this);}
public virtual List<MonitoringSchedule> GetMonitoringSchedules(){return monitoringSchedules;}
public virtual IList<string> GetExportIDs(){return exportIDs;}
public GridsetRecordReader(StreamInput in1){return new GridsetRecordReader(in1, this);}
public virtual void Skip(int skip){_limit = skip;}
public override ObjectId Create(int type, byte[] bytes){return base.Create(type, bytes, 0, bytes.Length);}
public override string ToString(){return string.Format("Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four - letter Four -
public void RemoveAllResourcePermissions(){_securityManager.RemoveAllResourcePermissions(_securityManager.CurrentUICulture);}
public void RemoveShape(IShape shape){RemoveShape(shape);}
public virtual void RegisterOnPremises(OnPremises subclass){Registers(subclass);}
public NameXPtg GetNameXPtg(String name, int sheetRefIndex){return GetNameXPtg(name, sheetRefIndex);}
public GetLibraryRequest(string libraryName){return new GetLibraryRequest(libraryName, null);}
public int range(int start, int end){return end - start;}
public override void Serialize(byte[] b, int offset, int byteCount){Serialize(b, offset, byteCount);}
public virtual void DeleteVault(string vaultName){DeleteAzureFile(vaultName, true);}
public virtual TaskDefinition GetTaskDefinition(){return taskDefinition;}
public virtual void AcceptVpcAttachment(VpcAttachment attachment){_vpcAttachment = attachment;}
public virtual void SendEmail(){_connection = null;}
public void DeleteOptionGroup(OptionGroup optgroup){Delete(optgroup.optionGroup);}
public override ObjectDecoder GetDecoder(int formatVersion, int bitsPerValue){return null;}
public virtual void Update(object o){UpdateContainerInstanceState(o);}
public string set_indexed_field(string index){_indexed_field = index;}
public virtual ICollection<string> GetSections(){return sectionNames;}
public virtual Query Build(IQuery other){return other;}
public virtual Antlr4.Runtime.Misc.Set ComplementOf(ICharTermTermTermTerm term){return this.ComplementOf(term.vocabulary);}
public override void Serialize(StreamOutput stream){stream.Write(maxChange).Flush();}
public virtual dcache.Entry dirCacheEntry(){return fileCache.Entry(fileCache.GetPath());}
public void JumpToCurrentState(){currentState = STATE_JUMP_TO_CURRENT_STATE;}
public virtual void UpdateSendingState(){this.sendingState = SENTINEL_STATE.UPDATE;}
public void reset(){current = null;}
public virtual void remove(object o){if (!(o is java.util.MapClass.Entry<K, V>)){remove(o);}}
public ContinuableRecordOutput CreateCountOnlyContinuableRecordOutput(RecordOutput recordOutput){return new CountOnlyContinuableRecordOutput(recordOutput);}
public override NPOI.SS.Functions.Function CreateFunction(SbbStateDescriptor input){return this.CreateFunction(input);}
public virtual string ToString(){return TokenString;}
public override void write(string @string){write(m_buf, 0, m_len);}
public virtual void SetRefLogMessage(string msg){this.m_logMessage = msg;}
public virtual void Release(){_rc4.Release();}
public virtual string ToString(){return GetCanonicalName();}
public virtual float var(IVector v){var(IVector v2 = v.variance());return v.sqrMagnitude();}
public static java.nio.CharStream newUnbufferedCharStream(java.io.Reader reader, int bufferSize){return new java.nio.ReadWriteHeapCharStream(reader, bufferSize);}
public virtual StreamSummary GetSummary(){return streamSummary;}
public virtual void Delete(){_reader.Delete();}
public virtual bool Expired(Session session){return session.IsExpired();}
public int GetSheetIndex(String sheetName){int sheetIndex = _externalBook.GetSheetIndex(sheetName);return _internalBook.GetSheetIndex(sheetIndex);}
public Type GetArgumentClass(){return _argType;}
public virtual java.text.BreakIterator getBreakIterator(CultureInfo locale){return new java.text.BreakIterator(this, locale);}
public virtual User Get(string username){return userInfo.Get(username, null);}
public virtual string html(int block_size){return encode(block_size, "UTF-8")}
public virtual void write(char c){throw new System.NotImplementedException();}
public virtual NGit.Api.DiffCommand CreatePlaceholder(Output output){return (output == null)? CreatePlaceholder(output) : CreatePlaceholder(output);}
public virtual void Grow(int size){for (int i = size; i < size; i++){System.Array.Copy(elements, i, _array, i + _position, _array.Length);_array[i] = _array[i++];}}
public virtual void DeleteVpcAttachment(VpcAttachment vpcAttachment){_vpcAttachment = vpcAttachment;}
public GreekStemFilter(){return new GreekStemFilter(this);}
public virtual UpdateChannelResponse UpdateChannel(UpdateChannelResponse channel){return UpdateChannel(channel, null);}
public virtual bool Equals(ValueSource source, DocFreqValueSource other){return Source.Equals(other);}
public override void write(string @string){throw new System.NotImplementedException();}
public virtual IndexCommit Compare(IndexCommit commit){return commit;}
public virtual void Start(){startPos = 0;endPos = 0;}
public virtual void SetInputStream(java.io.InputStream @is){throw new System.NotImplementedException();}
public override byte[] Read(byte b){return delegate1.Read(b);}
public void AddResourcePermissions(Resource resource){this._enclosing.AddResourcePermissions(resource.GetName());}
public virtual EntityRecognizerDetail GetEntityRecognizerDetail(){return _entityRecognizerDetail;}
public void CloseAllocationSite(){_allocationSite = null;}
public virtual void merge(object o){if (!(o is Antlr4.Runtime.Atn.ListClass)){throw new System.NotImplementedException();}Antlr4.Runtime.Atn.ListClass o = (Antlr4.Runtime.Atn.ListClass)o;}
public HITs ListHITs(int HIT_MAX_SIZE){return HIT_MAX_SIZE;}
public virtual void SetErrorEvaluation(E errorEvaluation){_errorEvaluation = errorEvaluation;}
public virtual void Initialize(){base.Initialize();}
public virtual bool? Evaluate(OperatorToken token){return _operator.Evaluate(token, null);}
public virtual void SetNotesRef(NoteRef @ref){notes = @ref.Notes;}
public override bool IsPortugueseStemmer(object o){if (o is java.nio.PortugueseStemmer){return true;}return false;}
public virtual int indexChangedListenerType(){return _indexChangedListenerType;}
public virtual UpdateDomainResponse UpdateDomain(UpdateDomainRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateDomainRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateDomainResponseUnmarshaller.Instance;return Invoke<UpdateDomainResponse>(request, options);}
public virtual void SetTokenStream(ITokenStream stream){termAtt = stream;}
public string GetQuery(){return GetQuery(true);}
public virtual NGit.Api.SyncTask CreateRepoSyncTask(){return new NGit.Api.SyncTask(this);}
public virtual bool Include(IToken token){return Include(token.Value);}
public char at(int index){return array[index];}
public int compare(LookupResult lookupResult){return lookupResult.compareTo(lookupResult);}
public virtual IList<Document> Get(int offset, int length){return listOperations.Get(offset, length);}
public virtual DescribeGuardDutyRulesResponse DescribeGuardDutyRules(){return DescribeGuardDutyRules(null, null);}
public virtual InstanceStatus Get(string instance){return status;}
public void DeleteSubnet(int subnetId){_subnetMap[subnetId] = null;}
public override string ToString(){return "More" ;}
public virtual java.util.ListIterator listIterator(){return new java.util.ArrayList<E>(this._enclosing);}
public PolicyId { get; set; }
public virtual int RamUsageCount(){return _rbacUsageCount;}
public override bool IsBeginRecord(SID sid){return UserSViewBegin.IsRecord(sid);}
public virtual string ToString(){return GetDescription();}
public virtual IList<IToken> FindAll(IToken token){return FindAll(token, null);}
public virtual bool IsLower(char c){return char == 'a'? true : false;}
public void DeleteChannel(int channel){if (channel >= _channelCount){throw new ChannelAlreadyExistsException(channel);}_channel = null;}
public virtual string get(char b){return buf.get(b, b.pos, b.len);}
public virtual AttachVPNGatewayToExistingVpcRequest call(string resource, string vpcId){return AttachVPNGatewayToExistingVpcRequest(resource, vpcId, "gateway");}
public virtual void UpdateCapacity(int capacity){capacity = capacity;}
public override string ToString(){return "SeriesToChartGroup(" + _seriesToChartGroup + ")";}
public string pattern { get; set; }
public virtual void SkipTokens(){SkipTokens((ITokenStream)InputStream).Seek(0, SeekOrigin.AFTER_EXECUTE);}
public override void Serialize(StreamOutput stream){Serialize(stream, 0, stream.Length);}
public override BinaryReader GetReader(BinaryReader reader){return _reader;}
public TagsRequest(TagsRequest request){var options = new InvokeOptions();options.RequestMarshaller = TagsRequestMarshaller.Instance;options.ResponseUnmarshaller = TagsRequestUnmarshaller.Instance;return Invoke<TagsRequest>(request, options);}
public virtual AttachmentsResponse Attachments(AttachmentsRequest request){var options = new InvokeOptions();options.RequestMarshaller = AttachmentsRequestMarshaller.Instance;options.ResponseUnmarshaller = AttachmentsResponseUnmarshaller.Instance;return Invoke<AttachmentsResponse>(request, options);}
public virtual double Divide(double value){return 1.0d / (value * value);}
public virtual DirCache GetDirCache(){return cache;}
public override bool IsValid(double value){return base.IsValid(value);}
public virtual IList<Experiments> GetExperiments(){return experiments;}
public override void Reset(int blocksize){_writer.Reset(blockSize);}
public static BytesRef GetCommonPart(BytesRef b){return b.GetCommonPart(this);}
public virtual RevDeltaRecord GetCopy(RevDeltaRecord rec){return rec;}
public virtual int codePointAt(int index){return codePointAt(index);}
public virtual string GetDescription(){return this.GetErrorInfo().GetText("Query Error") + " does not support chaining.";}
public virtual int position(){return pointer.position();}
public static bool equal(int[] array1, int[] array2, int[] array3, int... array4, int[] array5, int... array6, int... array7, int... array7.Length){return equal(array1, array2, array3,... array7.Length);}
public virtual void SetErrorCode(int errorCode){Sharpen.Extensions.SetErrorValue(hb, errorCode);}
public virtual int Function(int arg){return _ipmt;}
public virtual IpPoolCollection GetDedicatedIpPools(){return null;}
public virtual NGit.Api.HostedConnection CreateHostedConnection(string appName, string password){return CreateHostedConnection(appName, password, "master");}
public virtual IList<StopWord> GetStopWords(){return stopWords;}
public virtual void AddUserToGroup(object group){foreach (object user_in_group in group.users){AddUserToGroup(user_in_group);}}
public virtual void SetPrefix(string prefix){m_prefix = prefix;}
public vaultNotificationRequest (string vaultName){_vaultName = vaultName;}
public virtual string GetLastCommitSegmentsFileNames(){return last.GetCommitSegmentsFileNames();}
public virtual int byteCount(){return byteCount();}
public virtual void DoMerge(MergeRequest request){m_req = request.Copy();}
public bool hasNext(){return this._enclosing._next!= this._enclosing._end;}
public virtual bool Equals(double value){return _value == value;}
public virtual string Get(string name){return Sharpen.Extensions.GetValue(this, name, null);}
public TreeFilter(ICharTerm term){return term == null? null : new TreeFilter(term, this);}
public override void putShort(short value){throw new System.NotImplementedException();}
public virtual NGit.Graph Create(NGit.Path.Parent, NGit.Path.Parent2, NGit.Path.Parent3, NGit.Path.Parent4, NGit.Path.Parent4, NGit.Path.Parent4, NGit.Path.Parent4, NGit.Path.Parent4, NGit.Path.Parent4, NGit.Path.Parent4, NGit.Path.Parent4, NGit.Path.Parent4Parent4Parent4Parent4Parent4Parent4Parent4Parent4Parent4Parent4Parent4, NGit.Path.Parent3, NGit.Path.Parent4Parent4, NGit.Path.Parent4Parent4, NGit.Path.Parent4Parent4, NGit.Path.Parent4Parent4, NGit.Path.Parent4Parent5, NGit.Path.Parent4Parent5, NGit.Path.Parent4Parent5, NGit.Path.Parent4Parent4Parent4Parent4Parent4Parent4Parent4Parent4Parent4Parent4Parent4Parent4Parent4Parent4, NGit.Path.Parent4Parent4Parent4Parent4Parent4Parent5, N
public virtual RevokesEgressSubnetFromanExistingSecurityGroupException{throw new NotSupportedException("revokesEgressSubnetFromanExistingSecurityGroupException");}
public virtual E next(){return this.nextEntry();}
public key file. public virtual IPublicKey GetPublicKeyFile(string appName, string password){return publicKeyFile.GetResourceObject(appName, password);}
public NGit.Storage.Ebj.DBProxy CreateProxy(string dbURL){return (_dbURL == null)? null : (_dbURL = dbURL, null);}
public FormatDescription GetFormat(){return format;}
public void Clip(IRectangle rectangle){ClipRange(rectangle, 0, 0, rectangle.width, rectangle.height);}
public void Clear(){_rc4.Reset();}
public virtual string ToString(){return GetCanonicalName();}
public virtual AmazonECSResponse AuthorizeCacheSecurityGroup(AmazonECSCacheSecurityGroup request){var options = new InvokeOptions();options.RequestMarshaller = AuthorizeCacheSecurityGroupMarshaller.Instance;options.ResponseUnmarshaller = AuthorizeCacheSecurityGroupResponseUnmarshaller.Instance;return Invoke<AmazonECSResponse>(request, options);}
public virtual IList<int> Decode(IList<int> blocks){return Decode(blocks, 0, blocks.Length);}
public virtual void DisablesLoggingForApp(string appName){DisableLoggingForApp(appName, null);}
public virtual string GetLine(){return GetLine();}
public override IList<IToken> GetTokens(IFormula formula){return formula.GetTokens(this);}
public override void putDouble(double value){buffer.putDouble(value);}
public virtual PolicyDetail GetFileSystemPolicyDetail(){return fileSystemPolicyDetail;}
public override java.lang.StringBuffer insert(int index, double value){java.lang.StringBuffer.Wrap(m_buf, offset + index, "double");m_buf[offset + index] = value;return this;}
public int Count(ValueEval vEval){return Count(vEval.Values, function(vEval){return vEval.Matches(criteriaPredicate);}
public void SetPrintArea(IPrintArea area){_printArea = area;}
public virtual float v(){return v;}
public virtual SetAuthorizationRequestParametersSet AuthorizationRequestParametersSet(IAuthorizationRequestParameters set){_authorizationRequestParameters = set;}
public bool Set(int index, bool value){return _set(index, value);}
public ASCIIFoldingFilterFactory(){return (ASCIIFoldingFilterFactory)base.CreateFilter(null, null);}
public void UnassignIPv6Address(IPv6Address address){UnassignIPv4Address(address);}
public bool Get(long key){return this._enclosing.Get(key);}
public virtual TokenizerFactory Lookup(Type type){return null;}
public virtual void SetUpstream(object @object){this._upstream = @object;}
public virtual void SetExtendedState(void, _state){_state = _state;}
public virtual TerminateConnectorRequest: VoiceConnectorRequest{WaitHandle deadline = CancellationToken.Of(type);}
public virtual string GetFieldDefaultValue(){return null;}
public Destination { get; set; }
public DirectoryEntry(File dir){this.dir = dir;}
public virtual short[] shortCopy(){return shortCopy(null, 0, _size);}
public CreateUserSourceAccountRequest(): base(){return new CreateUserSourceAccountRequest(null, null, null);}
public string GetParametersString(){return Sharpen.StringHelper.CopyValueOf(m_parameters, 0, m_parameters.Length);}
public override void OnDataChanged(object data){if (this.data!= null){this._enclosing.OnDataChanged(data);}}
public int valueAt(int index){return array[index];}
public virtual E evaluate(E value){return evaluate(value);}
public virtual NGit.Storage.File.Ref Open(string id, string type){if (id == null){throw new ArgumentNullException("id");}if (type == null){throw new ArgumentNullException("type");}NGit.Storage.File.Ref openForWrite = OpenForWrite;if (openForWrite.GetSize() == 0){throw new ArgumentNullException("type") + " does not support field type parameters.");}if (id == null){throw new ArgumentNullException("id");}if (id == nullId){id = GetNewId()for (int i = 0; i < openForWrite.GetSize() && id!= nullId; i++){if (id == openForWrite.GetSize() && id.Equals( id.GetValueOf(id.GetValueOf())){throw new ArgumentNullException("id") + " does not support field type parameters.");}}
public void InitializeBorderFormatting(){this.m_borderStyle = BorderStyle.None;this.m_borderStyleOffset = 0;this.m_borderStyle.SetLineStyle(BorderStyle.LineStyle);this.m_borderStyleOffset2 = 0;this.m_borderStyle.SetLineStyle(BorderStyle.LineStyle);this.m_borderStyleOffset3 = 0;this.m_borderStyle.SetLineStyle(BorderStyle.LineStyle.Default);}
public virtual void EscapeExtension(string ext){_ext = ext;}
public void RemoveNoteCountProperty(){_noteCount = null;}
public char[] charVectors = new char[charVectors.Length];char[] charVectors = new char[charVectors.Length];char[] charVectors = { charVectors[0], charVectors[1], charVectors[2], charVectors[3], charVectors[4], charVectors[5], charVectors[6], charVectors[7], charVectors[8], charVectors[9], charVectors[10], charVectors[11], charVectors[12], charVectors[12], charVectors[12], charVectors[12], charVectors[13], charVectors[14], charVectors[15], charVectors[15], charVectors[15], charVectors[15], charVectors[15], charVectors[12], charVectors[12], charVectors[12], charVectors[15], charVectors[12], charVectors,null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null,
public virtual void Add(int cost){costs.Add(cost);}
public void Clear(){_list.Clear();_list = null;}
public Cell CreateCell(CellType type, int column){return CreateCell(type, column);}
public virtual void DescribeClusters(){foreach (string name in clusters.Keys){string location = clusters[name];if (location == null){return;}}
public virtual ImportJobDetail GetImportJobDetail(){return _importJobDetail;}
public void SetCompositeReader(CompositeReader reader){_compositeReader = reader;}
public virtual void Execute(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9, int arg10, int arg11, int arg12, int arg11, int arg12, int arg11, int arg12, int arg13, int arg13, int arg13, int arg13, int arg14, int arg15, int arg16, arg15, arg16, arg15, arg16, arg12, arg13, arg14, arg15, arg16, arg16, arg17, arg18, arg19, arg19, arg20, arg20, arg21, arg22, arg20, arg22, arg20, arg22, arg20, arg22, arg20, arg21, arg22, arg23, arg24, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32,
public virtual void putChar(char ch){buffer.putChar(ch);}
public Policy PolicyFor(int id){return GetPolicy(id, null);}
public virtual void Publish(SarlSchema schema){_schema = schema;}
public virtual void Invoke(object o){Invoke(o);}
public virtual dat record{get; private set; }
public override bool Equals(object o){if (o == null){return false;}if (o is BytesRef){return base.Equals(((BytesRef)o).BytesRef);}return true;}
public override void Initialize(TermsWriter writer){base.Initialize(writer);}
public virtual short[] createCopy(short[] array, start, end){return createCopy(array, start, end);}
public ApostropheFilter(TokenStream input){return new ApostropheFilter(input);}
public virtual void CountPendingActivityTasks(){Count(true, true);}
public String ToString(){return _cell.ToString();}
public LabelValue(Label Value){this.value = Value;this.label = Value;this.type = TokenTypes.String;this.setValue(LabelValue);}
public override void Serialize(SID to){Serialize(to.SID1, to);}
public virtual RejectVpcPeeringConnectionResponse RejectVpcPeeringConnection(RejectVpcPeeringConnectionResponse *rsp) {return RejectVpcPeeringConnectionResponse(rsp, null);}
public kth(double v){return kth(v)}
public virtual string GetRuleSummary(){return this.ruleSummary;}
public virtual void GetNext(){p.Next = p.Previous;p.Previous = p.Next;p = p.Next;}
public virtual void setValueAt(int index, V value){object[] newValues = new object[values.Length + 1];System.Array.Copy(values, 0, newValues, 0, values.Length);}
public virtual IList<string> GetDomains(){return domainNames;}
public virtual IList<string> GetPhoneNumbers(){return phoneNumbers;}
public virtual GetRepoWebhookResponse GetRepoWebhook(GetRepoWebhookRequest request){var defaultParameters = new InvokeOptions();defaultParameters.RequestMarshaller = GetRepoWebhookRequestMarshaller.Instance;defaultParameters.ResponseUnmarshaller = GetRepoWebhookResponseUnmarshaller.Instance;return Invoke<GetRepoWebhookResponse>(request, defaultParameters);}
public SeriesRange range_1){return _series.range_1();}
public int remaining(){return _le.remaining();}
public virtual void Initialize(IDictionary<string, object> args){this.m_args = args;}
public virtual ICollection<string> GetMissingKeys(){return missingKeys;}
public virtual string Get(int index){return names[index];}
public EscherRecord(byte[] data, int offset, int length){int boffset = offset / EscherRecord.NUM_BYTES_INT32;boffset += length;int start = offset / EscherRecord.NUM_BYTES_INT32;for (int j = offset; j < length; j++){EscherRecord rec = data[j];}}
public virtual void DescribeWorkspaces(){DescribeWorkspaces(){}
public virtual bool isEmpty(){return elements.Count == 0;}
public TokenStreamContext(int maxTokens, int consumeAllTokens){return new TokenStreamContext(maxTokens, consumeAllTokens);}
public virtual void RemoveCluster(){Cluster c = (Cluster)GetCluster();c.Remove();}
public virtual void DescribeReservedCacheNodes(){DescribeReservedCacheNodes(_reservedCacheNodes);}
public OutputStream initialize(byte[] array_1, int offset, int length_1, int length_2){initialize(array_1, offset, length_2, length_3, length_4, length_5, length_6);}
public static LessThanExpression LessThanOrEqual(bool value){return new LessThanExpression(value);}
public System.Property SetProvisionedThroughput(long capacity){_capacity = capacity;}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(this.GetType().Name);out1.WriteByte(_order);}
public virtual void DescribeReservedInstanceListsings(){DescribeReservedInstanceListsings(null, null, null);}
public virtual void Delete(DeleteDeliveryStreamRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDeliveryStreamRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDeliveryStreamResponseUnmarshaller.Instance;return;}
public override RevContext GetContext(string rule){return base.GetContext(rule);}
public QueryAddUserInfoRequest(): base(){return new QueryAddUserInfoRequest(this);}
public virtual int CellRangeCount(CellRangeAddress range){return _region.NumMatchingCells(range);}
public override void Write(T value, OutputStream outputStream){_out = value;}
public virtual ICollection<string> GetConflicts(string str){return conflictingStrings.Keys.Values;}
public GetRepoSyncTask(string repoSyncTaskUri, string repoMethod){_repoSyncTaskUri = repoSyncTaskUri;_repoMethod = repoMethod;}
public String ToString(){return HSSFErrorConstants.GetText(hssF_1);}
public void SetThumbnailData(byte[] data){this.thumbnailData = data;}
public void Append(FilePath file){this.archive.Append(file);}
public AutoScalingPolicy CreateOrUpdate(string name, string value){_name = name;_value = value;}
public bool Get(int index){return _bitMap[index];}
public virtual UpdateDestinationResponse Update(UpdateDestinationResponse destination){return Update(destination.GetDestinationId());}
public virtual void compact(char b){java.nio.CharBuffer p = new java.nio.CharBuffer(m_buf, 0, m_buf.Length);p.compact(m_buf, 0, m_buf.Length);}
public virtual void Stop(){m_end = true;}
public virtual string GetOldId(){return oldId;}
public override string ToString(){return "Greedy(" + " " + m_objectName + ")";}
public virtual NGit.Transliteration.TransliterationInstance CreateTransliterationInstance(NGit.Options options){return new NGit.TransliterationInstance(this, options);}
public FormulaRecord Create(FormulaRecord record){return record;}
public virtual void SetTokenSource(ITokenSource source){this._tokenSource = source;}
public virtual GetResponse Get(GetRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetRequestMarshaller.Instance;options.ResponseUnmarshaller = GetResponseUnmarshaller.Instance;return Invoke<GetResponse>(request, options);}
public override string ToString(){return base.ToString() + " flags:" + flags;}
public virtual UpdateGatewayResponse UpdateGatewayResponse(UpdateGatewayResponse _response){_response = _response;}
public int valueAt(int start, int end){return valueAt(start, end);}
public VectorType IsCopyOf(byte[] b){return _array.IsCopyOf(b);}
public virtual RevokeSecurityGroupResponse RevokeSecurityGroup(RevokeSecurityGroupResponse response){throw new NotSupportedException("Cannot revoke an existing RevokeSecurityGroupResponse from an existing RevokeSecurityGroupResponse", _securityGroup);}
public virtual bool IsDetached(E element){IsDetached = true;return this._enclosing._size == 0;}
public override void close(){_writer.close();}
public override Object Create(NoteMapMerger other){return other.Create(null, this);}
public string GetExternalNameAt(int index){return externalNames[index];}
public virtual void SetMaxDeltaDepth(int maxDepth){m_maxDepth = maxDepth;}
public virtual Amazon GuardDutyDetectorCreateOrUpdateResponse CreateOrUpdateGuardDutyDetector(AmazonGuardDutyDetectorCreateProfileRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateGuardDutyDetectorCreateRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateGuardDutyDetectorCreateResponseUnmarshaller.Instance;return Invoke<AmazonGuardDutyDetectorCreateResponse>(request, options);}
public java.nio.ByteBuffer wrappedBuffer = java.nio.Memory.createInt32ArrayBuffer(int arrayLength)
public virtual ListDashboardsResponse ListDashboards(ListDashboardsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListDashboardsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListDashboardsResponseUnmarshaller.Instance;return Invoke<ListDashboardsResponse>(request, options);}
public virtual NGit.Api.VPNConnection ModifyVpnConnection(NGit.Api.VPNConnection connection){connection.VPNConnection = connection;return connection;}
public override FilePointer GetFilePointer(){return file;}
public virtual IList<ATN> GetAncestors(ATN tree){return ancestorsOf(tree, null);}
public virtual IList<string> GetRuleNames(){return new List<string> { GetRuleNames() };}
public virtual void SetRef(){this.@ref = null;}
public static StemelPolishStemFilterFactory Create(object[] parameters){return new StemelPolishStemFilterFactory(parameters);}
public virtual void List(CommandContext ctx){List(ctx.WorkTree, ctx.CurrentDirectory, ctx.CurrentName, ctx.CurrentDirectory, ctx.CurrentDirectory, ctx.CurrentDirectory, ctx.CurrentDirectory, ctx.CurrentDirectory, ctx.CurrentDirectory, ctx.CurrentDirectory, ctx.CurrentDirectory, ctx.CurrentDirectory, ctx.CurrentDirectory, ctx.CurrentDirectory, ctx.CurrentDirectory, ctx.CurrentDirectory, ctx.CurrentDirectory, ctx.CurrentDirectory, ctx.CurrentDirectory, ctx.CurrentDirectory, ctx.CurrentDirectory, ctx.CurrentDirectory, ctx.CurrentDirectory, ctx.CurrentDirectory, ctx.CurrentDirectory, ctx.CurrentDirectory, ctx.CurrentDirectory, ctx.CurrentDirectoryName, ctx.CurrentDirectoryName, ctx.CurrentDirectoryName, ctx.CurrentDirectoryName, ctx.CurrentDirectoryName, ctx.CurrentDirectoryName, ctx.CurrentDirectoryName, ctx.CurrentDirectoryName, ctx.CurrentDirectoryName, ctx.CurrentDirectoryName, ctx.CurrentDirectoryName, ctx.CurrentDirectoryName, ctx.CurrentDirectoryName, ctx.CurrentDirectoryName, ctx.CurrentDirectoryName, ctx.CurrentDirectoryName, ctx.CurrentDirectoryName, ctx.CurrentDirectoryName,
public virtual void SetInstanceRole(string role){instanceRole = role;instanceType = null;instanceCount = null;}
public FuzzyLikeQueryBuilder(Analyzer analyzer, MaximumNumberOfTerms field){this.analyzer = analyzer;this.maximumNumberOfTerms = maximumNumberOfTerms;this.maxTermsPerQuery = maxTermsPerQuery;}
public bool IsStrictHostKeyChecking(){return strictHostKeyChecking;}
public virtual void Reset(List<Posting> postings){_list = postings;}
public void WriteU32(int v){WriteU32(v, _position, v.Length); }
public string value{get; internal set;}
public int GetFunctionIndex(String name){return _functionIndex[name];}
public bool CellRangeHasExactBorder(CellRange_t start, CellRange_t end){return CellRangeHasExactBorder(start, end);}
public void DeleteEndpoint(Endpoint endpoint){this.endpoint = endpoint;}
public override long Get(){return buf.Get();}
public virtual string ToString(){return GetCanonicalName();}
public override int Read(int count){return _buf.Read(count);}
public virtual E set(E e){lock (this){object[] newElements = new object[elements.Length + 1];System.Array.Copy(elements, 0, newElements, 0, elements.Length);newElements[elements.Length] = e;elements = newElements;}}
public virtual NGit.TrafficMirror.Target CreateTrafficMirrorTarget(TargetInfo target){return (target == null)? null : new NGit.TrafficMirror.Target(target, this);}
public virtual UpdatePipelineNotificationsResponse UpdatePipelineNotifications(PipelinePipelineMessage message){var pipeline = this.GetPipeline();message.Pipeline = pipeline;return UpdatePipelineNotifications(message);}
public void Reset(byte[] b){Reset(b, 0, b.Length); }
public override java.nio.IntBuffer compact(){return compact(new java.nio.IntBuffer(remaining()));}
public virtual int MaxReusableDelegationSetCount(){return _limitToUseTheMaxReusableDelegationSetCount;}
public void DeleteResolver(string resolverName){RouteResolverResolverDeregister(resolverName);}
public NameRecord GetBuiltinNameRecord(NameRecord nameRecord){return nameRecord;}
public virtual bool contains(object o){return contains(o);}
public new MessageBodyWriter(null){return new MessageBodyWriter(this);}
public virtual double GetLogarithmOfPassage(){return passage.GetLogarithm();}
public virtual int length(s b){return charsIn(s, 0, b.Length);}
public PrintSetupRecord(Stream in1){this.RecordInput = in1;return this;}
public virtual bool IsUpdateRequested(){return UpdateRequested;}
public int valueAt(int index){return array[index];}
public palette(palette record): base(null, paletteRecordType){paletteRecords[0] = new paletteRecord(paletteRecordType, paletteRecordType, paletteRecordType);}
public PMT(double value){return (value >= 0)? PMT_OFF : PMT_ON;}
public virtual void SwitchTo(IToken state){SwitchTo(state.GetLexicalState());}
public override void Evaluate(IPositionSourcePosition src, IPositionIndex dst, IPositionIndex index){this.e = src.GetColumn(dst);this.e = src.GetRow(dst);this.e = dst.GetColumn(dst).GetColumn(dst).GetRow(dst);this.e = e.GetColumn(dst).GetColumn(dst).GetColumn(dst).GetColumn(dst).GetColumn(dst).GetColumn(dst).GetColumn(dst).GetColumn(dst).GetColumn(dst).GetColumn(dst).GetColumn(dst).GetColumn(dst.GetColumn(dst).GetColumn(dst).GetColumn(dst).SetValue(src, src).SetValue(src, src).SetValue(this, e.getValue());this.e = null;this.e = null;this.e = null;this.e = null;this.e = null;this.e = null;this.e = null;this.e = null;}
public virtual DatabaseEvents GetDatabaseEvents(){return databases;}
public void Reinitialise(ILexerState machine){Reinitialise(machine);}
public override void Set(int index, long value){Debug.Assert(index >= 0);}
public virtual void RemovePushRefSpec(string spec){PushRefs.Remove(spec);}
public virtual VoiceConnector[] GetVoiceConnectors(){return VoiceConnector[];}
public virtual void Parse(string input){Parse(input, 0, input.Length);}
public override double Evaluate(double value){return base.Evaluate(value);}
public virtual void Set(string key, string value){m_key = key;m_value = value;}
public virtual string ToString(){return GetCanonicalName();}
public virtual void Run(int instances){foreach (E instance in instances){Run(instance);}}
public virtual void SetCleanPaths(string[] paths){_cleanPaths = paths;}
public MissingObjectException(id and type){if (id.Length!= type.Length){throw new ArgumentException("id and type cannot be null");}var o = new MissingObjectException(id, type);o.CreateObject();o.id = id.Length;o.type = type;o.options = options;return o;}
public void PrivateVirtualInterfaceAllocate(void){_isA = true;}
public void ModifyWorkspaces(){MutableSection s = (MutableSection)FirstSection;s.ModifyWorkspace(s.Workspace);}
public override void Sort(WeightedFragInfo[] w){if (w.Length > 0){for (int i = 0; i < w.Length; i++){WeightedFragInfo q = w[i];if (q.Count > 0){q.Add(q[i])}}}return;}
public KatakanaStemFilterConf(int minLen){this.minLen = minLen;this.minKatakanaStemFilterConf = katakanaStemFilterConf.UseZeroLengthMinLengthFilter;}
public void DisassociateCAFromExistingWebsite(CA source){_ca = source.DisassociateCAFromExistingWebsite(source.GetStore());}
public virtual NGit.Api.Way SetCommand(Way cmd){this.cmd = cmd;this.way = cmd.Way;}
public NativeUnixIndexInput(){return new NativeUnixIndexInput(this);}
public virtual SpotPriceHistory DescribeSpotPriceHistory(FieldInfos field_1_spotPriceHistory){return SpotPriceHistory;}
public virtual void SerializeSimplePart(Type typeOfFirst){Serialize(typeOfFirst);}
public virtual void Stop(){m_builder.Stop();}
public virtual APIMapping CreateAPIMapping(){return API_MAPPING;}
public virtual DescribeCacheParameterGroupsResponse DescribeCacheParameterGroups(DescribeCacheParameterGroupsResponse describeCacheParameterGroupsResponse){return DescribeCacheParameterGroupsResponse(describeCacheParameterGroupsResponse(describeCacheParameterGroupsResponse(describeCacheParameterGroups)));}
public String ToString(){return HSSFErrorConstants.GetText(hssF_1);}
public virtual void DeleteMetricFilter(string name){DeleteMetricFilter(name);}
public virtual void SetCachedError(int e){base.SetCachedError(e);}
public override string ToHex(short value){return ToHex(value, 16);}
public virtual void UpdateAppAccessPolicies(string appAccessPolicies){AccessPolicies = new SharedAccessPolicies(appAccessPolicies, 'public');}
public HSMConfiguration Create(HSMConfiguration config){return config;}
public virtual void setAt(object o){lock (this){object[] newElements = new object[elements.Length + 1];object[] newElements = { o };for (int i = 0; i < newElements.Length; i++){newElements[i] = newElements[i];for (int i = 0; i < newElements.Length; i++){newElements[i] = newElements[i];}}}
public virtual GetVolumeResponse GetVolume(GetVolumeRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetVolumeRequestMarshaller.Instance;options.ResponseUnmarshaller = GetVolumeResponseUnmarshaller.Instance;return Invoke<GetVolumeResponse>(request, options);}
public override string ToString(){return base.ToString() + ":" + this.policyName + ":" + this.isGlobal? "{\"enabled\":\"true\", \"disabled\":\"false}": "{\"enabled\":\"true}";}
public override long Size(){return _size;}
public override void ReadValues(byte[] buf, int offset, int count){for (int i = offset; i < count; i++){byte b = buf[i];if (b[i] == 0){return;}}return Load(buf, offset + _position, count);}
public virtual Credentials GetClusterCredentials(){return credentials;}
public virtual void Normalize(){Token[] tokens = null;}
public virtual NGit.Api.Queue CreateQueue(string queueName){return (_queue = Sharpen.Util.CreateQueue(queueName, true));}
public virtual RevokingIngressFromClientVPNResponse RevokingIngressFromClientVPNResponse(RevokingIngressFromClientVPNResponse response){return RevokingIngressFromClientVPNResponse(response);}
public virtual ListJobsResponse ListJobs(ListJobsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListJobsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListJobsResponseUnmarshaller.Instance;return Invoke<ListJobsResponse>(request, options);}
public override FilterFactory Create(int argCount, FilterFactory factory){return new OpenNLPLemmatizerFilterFactory(argCount, factory);}
public virtual void Delete(int ids){DeleteAll(ids, 0, ids.Length);}
public virtual ITemplate GetTemplateInformation(){return _templateInformation;}
public SupBookRecord Create(short value){return (SupBookRecord)Create(value);}
public virtual ImportJob GetImportJob(DatasetImportJob job){return job;}
public virtual NGit.Treewalk.Filter Clone(){return this;}
public virtual void Delete(EntityRecognizer recognizer){Delete(recognizer);}
public override java.nio.ByteBuffer order(){return _order;}
public virtual void DeleteLoadBalancerCertificate(){_loadBalancer.DeleteCertificate();}
public virtual DescribeLoadBalancerPolicyTypesResponse DescribeLoadBalancerPolicyTypes(DescribeLoadBalancerPolicyTypesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLoadBalancerPolicyTypesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLoadBalancerPolicyTypesResponseUnmarshaller.Instance;return Invoke<DescribeLoadBalancerPolicyTypesResponse>(request, options);}
public void open(){throw new System.NotImplementedException();}
public IEnumerator<K> KeysInMap(K key){return outerInstance.GetKeysInMap(key);}
public virtual void SkipInstanceWaitTime(){SkipInstanceWaitTime();}
public void EnableVpcCriticalLink(string link){this.link = link;}
public virtual VoiceConnector Describe(VoiceConnectorRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeResponseUnmarshaller.Instance;return Invoke<VoiceConnectorResponse>(request, options);}
public void DeleteDataSet(DataSet ds){if (ds == null){return;}Delete(ds.Reference.Key, ds.Value);}
public virtual bool contains(object o){return contains(o, true);}
public virtual bool Equals(LabelAndValue other){return LabelAndValue.Equals(other);}
public virtual SnowballAccountResponse SnowballAccountRead(AccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = SnowballAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = SnowballAccountResponseUnmarshaller.Instance;return Invoke<SnowballAccountResponse>(request, options);}
public void Clear(IRectangle rectangle){Clear(rectangle, 0, 0, rectangle.width, rectangle.height);}
public virtual char get(int pos){lock (this){return text[pos];}}
public void VerifyStyleBelongsTo(HSSFWorkbook book){EnsureStyleName(book.Name);}
public virtual void Signal(WorkflowExecution signal){base.Signal(signal);}
public LexerAtnDecodingConfiguration SetLexerAtnDecodingConfiguration(LexerAtnDecodingConfiguration config){this.configuration = config;}
public bool IsEmpty(){IsEmpty = false;}
public virtual FetchResult Get(int id){return _fetched.Get(id);}
public virtual RejectQualificationRequestResponse RejectQualificationRequest(RejectQualificationRequestRequest request){return RejectQualificationRequest(request, "reject")}
public GetNamespace request(Namespace name){return new GetNamespace(name, null);}
public void Delete(Label name){Delete(name, true);}
public virtual string GetDetails(){return GetDetails(null);}
public virtual CommitInfo GetLastCommitInfo(){return GetCommitInfo(null, null);}
public virtual char find_first_boundary_char(){return find_first_boundary_char();}
public virtual int GetHashCode(char[] array){return _le.GetHashCode(array);}
public Picture CreatePicture(){return (Picture)CreateResource(null, null, null);}
public Reader(char[] array_1, int offset, int length_1){lock (this){System.Array.Copy(array_1, 0, array_1, offset, length_1); }
public void AddArea(IArea area){AddArea(area);}
public void Sort(){Sort(points, new SortingPointComparer());}
public virtual void DisablePropagation(RouteTable table){this._enclosing.DisablePropagation(table);}
public virtual string GetName(){return token.Name;}
public string GetPatchId(){return patchId;}
public virtual void deleteCharAt(int position){java.lang.StringBuffer.linkBuffer.deleteCharAt(position);}
public override String ToString(){StringBuilder sb = new StringBuilder(64);sb.Append(this.GetType().Name);sb.Append(", ").Append(this.Formula.Value);sb.Append("]");return sb.ToString();}
public virtual string ToString(){return GetCanonicalName();}
public virtual NGit.Transport.TransitGateway Associate(string gatewayName, string gatewayPassword){return Associate(gatewayName, gatewayPassword, "transitGatewayPassword");}
public virtual ICollection<Reference> Sort(ICollection<Reference> collection){return Sharpen.Collections.UnmodifiableSortedCopy(collection.References, 0, collection.References.Count);}
public virtual void Delete(Destination destination){this.destination = destination;}
public BootstrapActionConfig CreateRun(-if) {return new BootstrapActionConfig{RunIf = true, };}
public GetBucketRequest(string path, string bucketName, int bucketIndex){_path = path;_bucketName = bucketName;_path = null;_type = null;_hasPathPrefix = false;}
public override java.nio.IntBuffer compact(java.nio.IntBuffer @is){return compact(java.nio.IntBuffer.getInstance());}
public virtual int GetNumberOfClosedWorkflowExecutions(){return _workflowInstance.GetNumberOfClosedWorkflowExecutions();}
public Sheet IndexOf(SheetIndex index){return _externs[index];}
public ArcData Copy(ArcData other){return other.Copy(this);}
public void Read(Record record){_in.Read(record.rawData);}
public virtual DeleteTopicResponse DeleteTopic(DeleteTopicRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteTopicRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteTopicResponseUnmarshaller.Instance;return Invoke<DeleteTopicResponse>(request, options);}
public override void Serialize(byte[] b, int offset){if (m_offset == 0){m_offset = 0;}UnsafeWrite(b, offset + _position, m_buf, m_offset + _size);}
public virtual void DisconnectParticipant(){_participant = null;}
public void DeleteEgressOnlyInternetGateway(string internetGatewayName){_networkingGateway = null;_networkingGatewayName = null;}
public FuncVarPtg GetFuncVarPtg(String name, int number_of_args){return CreateFuncVarPtg(name, number_of_args);}
public virtual void IndexFormatTooOldException(IndexFormatOldException e){throw new Exception(e.Message, e);}
public virtual int RamUsageCount(){return _rc4.MemoryUsage().GetUsedInBytes();}
public bool IsVerticalBorderOn(TextArea textArea){return _verticalBorder on (TextArea)_isBorderOn(textArea);}
public java.lang.StringBuffer insert(char c, int index, char[] chars) {java.lang.StringBuffer result = new java.lang.StringBuffer(chars);return this[index] = c;}
public virtual IToken Recovers(IToken tok){MoveNext();}
public TokenFilter NewEdgeNRamTokenFilter(){return new EdgeNRamTokenFilter(FST.INPUT_TYPE.BYTE4, FST.OUTPUT_TYPE.BYTE4, FST.INPUT_TYPE.REFRESH, FST.INPUT_TYPE.HEXADECIMAL, FST.INPUT_TYPE.HEXADECIMAL_GEN, FST.OUTPUT_TYPE.HEXADECIMAL_GEN_GST) {_name = this.GetName() + "(byte)...", FST.INPUT_TYPE.HEXADECIMAL, FST.OUTPUT_TYPE.HEXADECIMAL, FST.INPUT_TYPE.HEXADECIMAL, FST.INPUT_TYPE.HEXADECIMAL, FST.INPUT_TYPE.HEXADECIMAL, FST.INPUT_TYPE.HEXADECIMAL, FST.INPUT_TYPE.HEXADECIMAL_GEN_FSTTSTTSTTSTTSTTSTTSTTST_TYPE.GetName() ) }
public virtual ICharStream GetFirstToken(ITokenStream st){return GetFirstToken(st);}
public virtual int GetPrecedingSentenceIndex(int pos){return indexTo(pos, start.EndIndex);}
public virtual int[] GetValues(){return tokenValues;}
public static void Save(){return;}_db = null;
public virtual void grow(int capacity){refill(capacity);}
public virtual bool Equals(LexerATNConfig config){return config.CompareTo(this);}
public RawText(byte[] data){return new RawText(data);}
public void VisitRow(int row, CellRangeAddress addressingCellRange) {RowCellRangeAddress srv = GetRowCellRangeAddress(row);if (srv!= null){srv.VisitCells(srv, addressingCellRange, null);}if (srv!= null){srv.CheckPosition(addressingCellRange.FirstRow, addressingCellRange.LastRow, addressingCellRange.FirstColumn, addressingCellRange.LastColumn, addressingCellRange.FirstCell, addressingCellRange.LastCell, addressingCellRange.LastCellAddress, addressingCellRange.LastCellAddress, addressingCellRange.LastCellAddress, addressingCellRange.LastCellAddress, addressingCellRange.LastCellAddress, addressingCellRange.CellAddress, addressingCellRange.LastCellAddress, addressingCellRange.LastCellAddress, addressingCellRange.LastCellAddress, addressingCellRange.LastCellAddress, addressingCellRange.LastCellAddress, addressingCellRange.CellPosition, addressingCellRange.CellPosition, addressingCellRange.CellPosition, addressingCellRange.CellPosition, addressingCellRange.CellPosition, addressingCellRange.
public override string ToString(){return "Facet " + Facet;}
public virtual RepositoryAssociations GetRepositories(){return repositories;}
public hosted zone request(string name, object callerReference){_name = name;_callerReference = callerReference;}
public virtual UpdateJobResponse UpdateJob(UpdateJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateJobRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateJobResponseUnmarshaller.Instance;return Invoke<UpdateJobResponse>(request, options);}
public virtual void PromptForCredential(){Prompt(user, "Credential:");}
public bool set(bool set_flag){current.set_flag(set_flag);return true;}
public void WriteByte(int b){writeByte(b & 0xff);}
public virtual void UpdateNodeGroupConfiguration(NodeGroupConfiguration config){this._configuration = config;}
public override void SetStreamId(int id){streamId = id;}
public MoPenAddGroupMemberRequest(): base(){lastDocID = -1;wordNum = -1;word = 0;}
public char get(char pos){checkPosition(pos);return _buf[pos++];}
public override void Serialize(StreamOutput out1){out1.Write(this.ToString(Constants.CHARSET));}
public virtual void Run(IDictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken)){return;}
public virtual ExportJobDetail GetExportJobDetail(){return ExportJobDetail.Current;}
public virtual ICollection<T> GetEntries(){return Sharpen.Collections.UnmodifiableSet(this._enclosing.GetEntries());}
public virtual NGit.Storage.File.Record GetRecord(){return this._enclosing.GetRecord(this.name);}
public virtual void SetPackedGitMMAP(bool packedGitMMAP){Set(packedGitMMAP, true);}
public virtual void Send(string data){if (_use_outgoing_msgs){_send(data, 0, _unused_msgs.Length);}_end:";}
public ListPartsRequest(string vaultName, string uploadId){_vaultName = vaultName;_uploadId = uploadId;}
public virtual NGit.Storage.File.Record GetRecord(){return this._enclosing.GetRecord(this.name);}
public virtual string getDescription(){return _description;}
public void DeleteWorkteam(Workteam workteam){_workteam = workteam;}
public IP addresses { get; private set; }
public override object GetRow(int row){return this.GetChildAt(row).GetRow(row);}
public virtual object[] toArray(){return new object[toArrayIndex(this._enclosing._size)];}
public override void Validate(){base.Validate();}
public virtual GetStreamingDistributionResponse GetStreamingDistribution(GetStreamingDistributionRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetStreamingDistributionRequestMarshaller.Instance;options.ResponseUnmarshaller = GetStreamingDistributionResponseUnmarshaller.Instance;return Invoke<GetStreamingDistributionResponse>(request, options);}
public virtual EndpointDetail GetEndpointDetail(){return EndpointDetail.Default;}
public virtual void SetCommitName(string commitName){this.commitName = commitName;}
public void Write(byte b){Write((int)b, 0, b.Length); }
public override NumberEval Evaluate(int operand){return this.Evaluate(operand, null);}
public override bool ShouldAddRefLog(){return true;}
public virtual InformationalActivities GetActivities(Campaign campaign){return informationalActivities;}
public virtual void Associate(Skill skill){if (skills!= null){foreach (Skill group_1 in skills){Associate(skill, skillGroup_1);}}}
public virtual void Execute(ITokenStream tokenizer){m_lexer = new ParserTokenStream(tokenStream);m_state = State.Walking;}
public override string ToString(){return this.GetEnumerator().GetName().Name;}
public virtual string GetNextNChars(){return new string[_chars.Length + 1];}
public virtual string GetName(string name){return Sharpen.StringHelper.GetName(names, name);}
public virtual DescribeDomainsResponse DescribeDomains(){return DescribeDomains(null, null, null);}
public CreateConfigurationTemplateRequest(string applicationName, string templateName){return CreateConfigurationTemplateRequest(applicationName, templateName, null, null);}
public override int available(){return delegate1.available();}
public virtual string GetQuery(){return "true";}
public string ParseSegmentName(FileInfo f){return SegmentNames[f.GetName()];}
public override void Write(int b){Write((long)b, b >> 0);}
public PhotoQuotaAttribute(string value){_quota = value;}
public override V get(K key){return this.get(key, default(K));}
public SeriesRecord(DataInput in1){return new SeriesRecord(this, in1);}
public override WAH8DocIdSet Create(WAH8DocIdSet wAH8DocIdSet) {if (this.wordNum!= -1){AddWord(wordNum, (byte)word);}return base.Create(wAH8DocIdSet.Create(wAH8DocIdSet));}
public virtual void Split(int shardIndex){Splits(0, shardIndex);}
public bool isOverridable(){return true;}
public virtual void put(long[] array, int offset, int length){if (array[offset + length]!= 0){throw new System.IndexOutOfRangeException("array.length()=" + array.Length + " but was never returned by the ReferenceManager instance (it was passed through by the ReferenceManager instance)");}if (array[offset + length]!= 0){throw new java.nio.BufferOverflowException();}java.util.Arrays.checkOffset(array, offset + length, length);}
public PathHierarchyTokenizer(TokenizerConfig config){this.config = config;}
public override IQueryMaker GetQueryMaker(){return base.GetQueryMaker();}
public Type GetType(){return type;}
public virtual IList<AttachmentPropagation> GetAttachmentPropagations(TransitGateway gateway){return _transitGateway.GetAttachmentPropagations(gateway);}
public virtual NGit.Api.APNSVoIP channel { get; private set; }
public virtual DescribeDeploymentGroupsResponse DescribeDeploymentGroups(DescribeDeploymentGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDeploymentGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDeploymentGroupsResponseUnmarshaller.Instance;return Invoke<DescribeDeploymentGroupsResponse>(request, options);}
public virtual void SetIsIdentityForwardOn(bool enable){isIdentityForwardOn = enable;}
public virtual bool Equals(object o){return _object == null? false : _object.Equals(o, _object) && _object.Equals(o.GetRegion(), _object.RegionKind) && _object.Equals(o.GetRegionInfo(), _object.GetRegionInfo());}
public virtual void SetUp(){base.SetUp();}
public ICollection<CellReference> GetSubCells(CellReference cr){return GetSubCells(cr, 0, _subCells.Count);}
public virtual IList<E> GetRemovedList(){return _removed;}
public SheetVector Create(ISheet coordinateSystem, ISheet coordinateSystem, IIndexSystem indexSystem, ISheetRecordRecord recordRecord,ISheetRecordRecord recordRecord,ISheetRecordRecordRecord recordRecord,ISheetRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecord,ISheetRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecord,ISheetRecordRecordRecordRecordRecord,ISheetRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecordRecord
public virtual void Receive(int msg){_rc4.SendMessage(msg, 0, msg.Length);}
public void ApplySecurityGroupsToClientVPN(TargetNetwork targetNetwork){ApplySecurityGroupsToClientVPN(targetNetwork, true) ;}
public ExtRstsComparer(ExtRst other){return other.Diff(this);}
public virtual DeleteKeyPairResponse DeleteKeyPair(string key){return DeleteKeyPair(key, null);}
public virtual void DeleteNetworkACL(int networkId){throw new System.NotImplementedException();}
public virtual RepositoryList<Authorization> GetAuthorizationList(RepositoryRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetRequestMarshaller.Instance;options.ResponseUnmarshaller = GetAuthorizationList<Authorization>(request, options);return Invoke<RepositoryList<Authorization>(request, options);}
public void WriteProtectWorkbook(XSSFWorkbook wb){WriteProtectWorkbook(wb);}
public virtual void AddFlags(IFlags flags){this._enclosing.AddFlags(flags);}
public FilterCreationFilter(FormFilter formFilter): base(formFilter.Form){return new JapaneseReadingFormFilter(this, formFilter.FormValues);}
public virtual void Add(IText text){this._enclosing.Add(text);}
public bool ReferencesToCellDeleted(CellPath ptgs){return CellPaths.HasCellDeleted(ptgs.FirstRow, ptgs.LastRow, ptgs.Column, ptgs.Row, ptgs.Column, ptgs.RowOffset, ptgs.ColumnOffset, ptgs.RowOffset, ptgs.ColumnOffset, ptgs.RowOffset, ptgs.ColumnOffset, ptgs.RowOffset, ptgs.ColumnOffset, ptgs.ColumnOffset, ptgs.ColumnOffset, ptgs.ColumnOffset, ptgs.RowOffset, ptgs.ColumnOffset, ptgs.ColumnOffset, ptgs.ColumnOffset, ptgs.RowOffset, ptgs.ColumnOffset, ptgs.ColumnOffset, ptgs.ColumnOffset, ptgs.RowOffset, ptgs.ColumnOffset, ptgs.RowOffset, ptgs.ColumnOffset, ptgs.RowOffset, ptgs.ColumnOffset, ptgs.ColumnOffset, ptgs.ColumnOffset, ptgs.ColumnOffset, ptgs.RowOffset, ptgs.ColumnOffset, ptgs.ColumnOffset, ptgs.ColumnOffset, ptgs.RowOffset,
public virtual void SetUp(FilePath dir){this.dir = dir;}
public Builder(ASTNode node){this.node = node;this.pos = 0;this.options = createOptions(node.options);}
public virtual ListAccountsResponse ListAccounts(){return accounts;}
public virtual void add(E element, int index){object[] newElements = new object[elements.Length + 1];System.Array.Copy(elements, 0, newElements, 0, elements.Length);elements[index] = element;elements = newElements;}
public virtual bool Contains(ICharSequence range){return map.ContainsRange(range);}
public void DeleteEndpointConfiguration(EndpointConfiguration endpointConfiguration){_endpointConfiguration = endpointConfiguration;}
public virtual DescribeVpcLinksResponse DescribeVpcLinks(DescribeVpcLinksRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeVpcLinksRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeVpcLinksResponseUnmarshaller.Instance;return Invoke<DescribeVpcLinksResponse>(request, options);}
public virtual void ResetClusterParameterGroup(string parameterGroupName){_clusterParameterGroup = new ParameterGroup(parameterGroupName);}
public virtual TrialDetail GetTrialDetail(){return trialDetail;}
public string GetVpcAttribute(){return vpcAttribute.GetDescription();}
public void SetImageAttribute(int imageIndex, int imageIndex){this.imageIndex = imageIndex;this.imageIndex = imageIndex;this.needsUpdate = true;}
public ZonesList(){return ZonesList(null, null, null, null);}
public virtual void Create(ATTACHVIRTUAL_INTERFACE_REF){m_list = new AList<ATTACHVIRTUAL_INTERFACE_REF>();}
public CountryRecord(BinaryReader in1){return new CountryRecord(in1, in1.Available());}
public revokeTokenRequest(): base("{method: public,path:string}", MethodType.GET)){_method = "GET";_path = string.Format(J2N.String.Format(J2N.String.Format(J2N.String.Format(J2N.String.Format, "{method: public, path:string}", _path)));}
public override void SetFields(IList<string> subFields){for (int i = 0; i < subFields.Count; i++){Set(subFields[i]);}}
public virtual S3Object GetStorageObject(){return storage;}
public virtual UpdateSubnetGroupResponse UpdateSubnetGroup(UpdateSubnetGroupResponse result){return UpdateSubnetGroup(result.SubnetId);}
public virtual char nextChar(){return nextChar();}
public virtual string ToString(IFormatProvider provider){return GetCanonicalName(provider);}
public virtual MLModel Info(){return null;}
public virtual void Modify(Update r){throw new NotImplementedException("Should never happen", this);}
public java.util.Iterator<char> setIterator(java.util.Iterator<char> it){this.iterator = this;this.chars = it.iterator();}
public virtual void SetChildAnchorPosition(int pos){childAnchor = pos;}
public DeleteArchiveRequest{return new DeleteArchiveRequest(vaultName, archiveId);}
public virtual void AddChildRecord(EscherRecord record){for (int i = 0; i < _childRecords.Count; i++){_childRecords[i] = record;}}
public override bool Equals(object o){if (o is java.lang.StringHelper.Equals(this.toString())){return true;}java.lang.StringHelper.Equals(o, this.toString()));return false;}
public virtual ContinueRecord ProcessContinueRecord(){return new ContinueRecord(this);}
public virtual void SetOutputUnsigned(bool b){outputUnsigned = b;}
public string path[(int)pathStart];return path[pathStart];}
public virtual void UpdatePermissions(int permissions){if (permissions == _empty){_permissions = new int[0];}else{_permissions = permissions;}}
public override string GetSignerName(){return "BearerTokenSigner";}
public void DeleteInterfacePermission(string name){DeletePermission(name, true);}
public SSLCertificate ServiceEndpoint{set; get; private set; }
public virtual CampaignDetail GetCampaignDetail(string campaignId){return campaigns.Get(campaignId);}
public void SeekTo(long pos){Debug.Assert(pos >= 0);}
public virtual IList<Blueprint> GetSheets(){return database.GetSheets(this);}
public virtual CloudPhotoEditPhotosRequest Create(CloudPhotoEditPhotosParameters parameters){var request = new CloudPhotoEditPhotosRequest();request.SetParameters(parameters);return request;}
public virtual void ModifyVpcEndpointServicePermissions(){_vpcEndpointServicePermissions = true;}
public void Stop(){_job = null;}
public virtual StackCreateResponse StackCreate(StackCreateResponse stackCreateResponse){return StackCreateResponse(stackCreateResponse);}
public int FindFirstNonNewLineChar(byte[] b){return FindFirstNonNewLineChar(b, 0);}
public virtual IToken Get(int index){return lexer.Get(tokens[index]);}
public virtual bool IsUnknown(AnyType a){return a.AnyType;}
public int GetCellRef(CellRef other){return other.GetCellRef(null);}
public virtual void ReplaceNetworkACLEntry(ACLEntry entry){networkACL = entry;}
public virtual Configuration Get(string name){return null;}
public PruneByAgeOptions { set = _set_or_return_default_prune_by_age_options; }
public virtual IPolicyOperations Policy { get; private set; }
public virtual IList<Job> GetRunningJobs(){return GetJobs(false);}
public virtual IList<Identity> GetIdentities(){return identities;}
public DTDHandler GetDTDHandler(int level){return _dhandler;}
public CompleteMultipartUploadRequest(CompleteMultipartUploadRequest request){var options = new InvokeOptions();options.RequestMarshaller = CompleteMultipartUploadRequestMarshaller.Instance;options.ResponseUnmarshaller = CompleteMultipartUploadRequestUnmarshaller.Instance;return Invoke<CompleteMultipartUploadRequest>(request, options);}
public virtual string ToString(Props props){return GetComputedStyle(this, props.FirstStyleIndex);}
public virtual int GetPosition(){return _position;}
public HyphenationTree Create(int level){return Create(level, null);}
public virtual void Grow(int size){for (int i = size; i < size; i++){System.Array.Copy(array, i, array, i.ArrayOffset + i, array.Length - i);i.Length = i.Length;}}
public virtual void put(long[] longs){put(0, longs);}
public virtual Interpolator GetInterpolation(){return _interpolator;}
public List<DeleteResource> Resources { get; internal set; }
public ExternalModelRef CreateOrUpdateExternalModel(ExternalModelRef externalModel){return externalModel;}
public void DisassociateIAMProfile(string profileId){_iamProfiles[profileId] = null;}
public virtual AccountResponse Account(AccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = AccountRequestMarshaller.Instance;options.ResponseUnmarshaller = AccountResponseUnmarshaller.Instance;return Invoke<AccountResponse>(request, options);}
public NIOFSIndexInput(byte[] data): base(data){this.unused1 = data;this.wordNum = -1;this.word = 0;this.wordPos = -1;this.wordPos = -1;this.word = 0;this.word = 0;this.wordType = 0;this.word = 1;this.word = 2;this.type = 3;}
public virtual void append(E e){throw new System.NotImplementedException();}
public override void Write(ILittleEndianOutput out1){out1.WriteShort(field_1_reserved);}
public virtual void grow(int count){for (int i = 0; i < count; i++){grow(count);}}
public override string ToString(){return "No Trailer found";}
public string GetText(IVocabulary vocabulary){return vocabulary.ToString(null, NumberStyles.Integer, vocabulary);}
public virtual List<TypeRegistration> ListAppTypeRegistrations(){return Sharpen.Extensions.ListAll<TypeRegistration>(app, null, 0, -1);}
public override string ToString(){return Term.Utf8ToString();}
public virtual Profile GetProfile(){return this.GetProfileInternal(GetProfileName());}
public vaults.CreateVault(vaultsConfig){return vaults.Create(vaultsConfig);}
public SheetRecord[] GetBoundSheets(){return GetBoundSheets(null);}
public virtual DescribeLaunchConfigurationsResponse DescribeLaunchConfigurations(DescribeLaunchConfigurationsRequest request){return DescribeLaunchConfigurations(request, null);}
public virtual void AssociateDevice(Device device){this.device = device;this.networkProfile = device.GetNetworkProfile();}
public virtual string substring(string str){return new string(str, 0, str.Length);}
public override object Decode(byte[] data){return this.Decode(data, 0, data.Length);}
public virtual bool IsEqual(int arg){return arg == parity}
public virtual RevCommit AddRevCommit(RevCommit commit){AssumeList.Add(commit);return commit;}
public BGPPeer(){return (new BGPPeerAnonymousInnerClassHelper(this));}
public virtual NGit.Api.Bot Update(NGit.Api.Bot bot){return bot;}
public java.nio.LongBuffer newLongBuffer(long array_1){return newLongBuffer(array_1);}
public virtual EhcacheMap Get(EhcacheMapKey key){return this._enclosing.Get(key, EhcacheMap.Default.INSTANCE);}
public Item(string name, ICollection<E> parent, ICollection<E> child){return new Item(name, parent, child);}
public virtual Analyzer set_analyzer(Analyzer analyzer){this.analyzer = analyzer;}
public override bool Equals(object o){if (o == this){return true;}return false;}
public void DeleteOriginAccessIdentity(){CloudFrontOriginAccessIdentity identity = new CloudFrontOriginAccessIdentity();identity.Delete();}
public virtual bool IsExpectedChar(char expectedChar){return _le.IsCurrentCharacter(expectedChar);}
public DBStart(Connection connection){return dbStart(connection);}
public virtual string ToString(){return GetCanonicalName();}
public int size(){return this._enclosing._size;}
public virtual IList<ImportJob> GetImportJobsForSegment(int segment){return internal.ListImportJobs(segment);}
public data repository task: base(){data = new ObjectData(this);}
public override void Finish(int words){Finish(words, 0);}
public string GetAppId(){return appID;}
public java.lang.StringBuffer append(char c){append0(c);return this;}
public void ImportClientCertificateRevocationList(IClientCertificateRevocationList clientCertRevList){ImportClientCertificateRevocationList(clientCertRevList);}
public CellRangeAddress SetCellRangeAddress(CellRangeAddress cellRangeAddress){_cellRangeAddress = cellRangeAddress;}
public virtual void Grow(int size){for (int i = size; i < size; i++){System.Array.Copy(array, i, array, i.ArrayOffset + i, array.Length - i);i.Length = i.Length;}}
public virtual UpdateTableAutoScalingConfigurationResponse UpdateTableAutoScalingConfigurationResponse(UpdateTableAutoScalingConfigurationResponse response){if (_autoscalingConfigResponse.TableArn == null){throw new NullReferenceException("_autoscalingConfigResponse.TableArn is null");}return UpdateTableAutoScalingConfigurationResponse(response);}
public void RevokeFromIPPermissions(int permissions){_securityGroup.RevokeFromIPPermissions(permissions);}
public virtual CultureInfo GetLocale(){return locale;}
public override double get(int offset, size_t count){return buf.get(offset, count);}
public virtual bool IsDuplicate(T value){return value == null;}
public override int BytesRemaining(){return delegate1.BytesRemaining();}
public RuleRegionAdd(RuleRegion rule){regions.Add(rule);return this;}
public ListEventsRequest(ListEventsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListEventsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListEventsResponseUnmarshaller.Instance;return Invoke<ListEventsRequest>(request, options);}
public void UnwriteProtect(HSSFWorkbook workbook){UnwriteProtect(workbook);}
public usage plan(string description, IList<string> args){usage_plan = new List<string>();foreach (string name in args){usage_plan.Add(name);}return usage_plan;}
public LubanCloudRequest(): base("/clouds", "openAPI"){Method = "POST";}
public virtual void Suspend(){suspend();}
public override RevFilter CreateFilter(RevFilter filter){return new CommitTimeFilter(filter);}
public int set_row_col_relative(int row, int column){return row*column;}
public virtual string value(){return this.buf.Get(this.off);}
public virtual NGit.Schemas.Schema discover(InputSchema schema){return discover(schema.GetFields(), schema.GetOptions());}
public virtual void DisableAvailabilityZones(string availabilityZones){DisableAvailabilityZones(availabilityZones, null);}
public string GetType().FullName;
public virtual DescribeOptions DescribeOptions(){return DescribeOptions.IncludeUninitialized();}
public virtual ISchema GetSchema(){return getSchema();}
public virtual AssociateAmazonEC2ClientVpnRequest authorizeAmazonEC2ClientVpnRequest(){return new AssociateAmazonEC2ClientVpnRequest(this._cli, this);}
public override void Read(RecordInputStream in1){if (in1.ReadByte()!= 0){throw new System.IO.IOException("Bad stream");}int)(isPos = in1.ReadByte()!= 0);if (isPos == -1){throw new System.IO.IOException("Bad stream position");}if (in1.ReadByte()!= 0){throw new System.IO.IOException("Bad stream position");}}
public UDFToolPacks Add(ToolPack pack){AddUDF(pack);}
public virtual CreateOrUpdateRuleResponse CreateOrUpdateRule(CreateOrUpdateRuleRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateOrUpdateRuleRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateOrUpdateRuleResponseUnmarshaller.Instance;return Invoke<CreateOrUpdateRuleResponse>(request, options);}
public virtual DescribeGuardDutyFindingOptions DescribeGuardDutyFindingOptions(){return DescribeGuardDutyFindingOptions(new DescribeGuardDutyFindingOptions()){m_amazonGuardDutyFindingOptions = DescribeGuardDutyFindingOptions(new DescribeGuardDutyFindingOptions());}
public OnsMqttApi(string method){this.method = method;}
public virtual void putChar(char c){if (m_len >= m_buf.size){throw new java.nio.BufferOverflowException();}p.chars = m_buf.getChars();}
public override ObjectId GetObjectId(string type, string data){return base.GetObjectId(type, data);}
public string GetRegionId(){return regionId;}
public virtual void Tag(string name, string value){if (name == null){throw new ArgumentNullException("name cannot be null");}if (value == null){throw new ArgumentNullException("value cannot be null");}if (value.Length == 0){throw new ArgumentException("value cannot be empty");}if (_isVue){VueTag(name, value.Length > 0, _isVue);_isVue = true;_
public virtual void UpdateUserIdentityInformation(App app, UserIdentityInformation userIdentityInformation){UpdateUserIdentityInformation(app, userIdentityInformation);}
public virtual string ToString(){return GetCanonicalName();}
public override void Serialize(ILittleEndianOutput out1){out1.WriteByte(field_1_error_code);}
public EscherProperty(EscherProperty property){properties.Add(property);}
public virtual NGit.Api.Connection CreateConnection(Connection connection){return CreateConnection(connection);}
public java.util.Iterator<E> entries(){return entries.iterator(this);}
public virtual string GetDescription(){return GetEnumName();}
public virtual ATN WithBypassAlternatives(){return ATN.WithBypassAlternatives();}
public override string Read(int capacity){return _in.Read(capacity);}
public string getRawPath(){return path;}
public AnalysisScheme(AnalysisScheme analysisScheme){this.analysisScheme = analysisScheme;}
public virtual UpdateMailboxQuotaResponse UpdateMailboxQuota(UpdateMailboxQuotaResponse message){return UpdateMailboxQuota(message.GetMailboxId());}
public virtual bool containsAll(IList<E> other){return containsAll(other, other);}
public override object Encode(object o){return base.Encode(o);}
public virtual SearchMulticastGroupsResponse SearchMulticastGroups(int maxItems){return SearchMulticastGroups(maxItems, 0);}
public virtual bool IsNewFragment(ICharSequence text){return this.text.Length == 0;}
public override MultiTermsEnum Clone(){return base.Clone();}
public virtual void StopWalking(){current.StopWalking();}
public static bool shortArraysEqual(short[] array, int length){return array == null? false : array.Length == length;}
public virtual IList<Fragment> GetFragments(){return fragments;}
public virtual void Initialize(T parser, ParsingConfig config){this.m_parser = parser;this.m_initialized = true;}
public virtual void setValueAt(int index, V value){object[] newValues = new object[values.Length + 1];System.Array.Copy(values, 0, newValues, 0, values.Length);}
public void ApplyFontRange(FontRange range1, IFontRange range2){ApplyFontRange(range1, 0, range2);}
public virtual string GetRemoteTrackingBranch(){return remote.GetRemoteTrackingBranch();}
public virtual void SetMACaddress(string macAddress){_mac = macAddress;}
public override int Read(int index){return packs.Get(index);}
public virtual InferenceJob GetInferenceJob(int inferenceJobId){return _inferenceJob;}
public void DeleteSegment(int index){_list.Remove(index);_list = null;}
public virtual string ToString(){return GetCanonicalName();}
public virtual string SortField { get; set; }
public virtual DescribeDomainsResponse DescribeDomains(DescribeDomainsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDomainsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDomainsResponseUnmarshaller.Instance;return Invoke<DescribeDomainsResponse>(request, options);}
public virtual void Pause(){_name = GetNewClusterName();_actor.Pause(_name);}
public virtual IList<BatchInferenceJob> GetBatchInferences(){return BatchInferencesBatch.GetBatchInferences(){getBatchInferencesBatch();}
public virtual RebalancedSlotsInGlobalReplicationGroupException: RebalancedSlotsInGlobalReplicationGroupException{return RebalancedSlotsInGlobalReplicationGroupException: Rebalanced slots in a global replication group, error: RebalancedSlotsInGlobalReplicationGroupException{slotsInGlobalReplicationGroupException: Rebalanced slots in global replication group, };}
public virtual NGit.ObjectId GetNextDocumentInQueue(){return this.next;}
public virtual IList<Queue> GetQueues(){return Sharpen.Collections.UnmodifiableList(this.queues);}
public virtual IdentityPolicies GetIdentityPolicies(){return identityPolicies;}
public override void Set(byte[] data, int length){for (int i = 0; i < length; i++){this[i] = data[i];}}
public DConRef Read(RecordInput in1){return ReadDConRef(in1, null);}
public virtual void SlowReset(int usecs){if (usecs > 0){int next = next;if (next == SIZE_OF_BUFFER){buffer.Grow(1);next = INITIAL_BUFFER;}}else{buffer.Grow(space * _blockSize);next = INITIAL_BUFFER;}}
public SigningAttribute Account(string email){return Sharpen.Util.CreateOrUpdateSigningAttribute(email, "email");}
public java.nio.ShortBuffer wrap (short[] array_1, java.nio.ShortBuffer @out) {return wrap(array_1, java.nio.ShortBuffer.DEFAULT_MIN_CAPACITY,java.nio.ShortBuffer.DEFAULT_MAX_CAPACITY,java.nio.ShortBuffer.DEFAULT_MIN_CAPACITY_VALUE,java.nio.ShortBuffer.DEFAULT_MAX_OVERFLOW_VALUE, java.nio.ShortBuffer.MIN_OVERFLOW_VALUE);}
public virtual string GetType().FullName{get; set; }
public override void Write(StreamOutput out1){out1.WriteShort(this.name);}
public virtual string GetListenerDescription(){return this.name;}
public virtual DistributionConfiguration Get(string name){return null;}
public override double ReadDouble(){return delegate1.ReadDouble();}
public virtual void DeleteMember(string memberName){MemberInfo info = GetMemberInfo(memberName);if (info.MemberCount == 0){throw new Exception("Member with no name was provided");}Info.MemberCount--;}
public void WriteByte(int b){WriteByte(b & 0xff);}
public virtual bool Equals(PostingsAndFreq other){return other.DocFreq!= null;}
public virtual string GetDescription(){return GetDescription() + " analyzer:" + GetAnalyzerName();}
public virtual GetQueueUrlResponse GetQueueUrl(string queueUrl){return GetQueueUrl(queueUrl, null);}
public virtual char getprevious(){return getchar();}
public virtual void Parse(ITextReader reader, int line){ParseLine(reader, line);}
public override String GetFormat(){return GetFormat(null);}
public string pathToArray(){return pathToArray(path, 0, path.Length);}
public virtual string EscapeWhitespace(string str){return EscapeWhitespace(str, 0, str.Length - str.Length);}
public CellReference startEval(CellReference cr, IEvaluationContext context){startEval(cr, 0, 0);return startEval(cr, 0, 0);}
public virtual int GetBeginA(){return beginA;}
public virtual double GetAvp(){return _refinement.GetAvp();}
public override void writeChar(char ch){throw new System.NotImplementedException();}
public virtual EventsConfiguration Describe(){return Events;}
public ICell GetCell(CellNum cellnum){return GetCell(cellnum);}
public void SeekTo(long to){try{to.SeekTo(to, SeekOrigin.START);}catch (ThreadInterruptedException){throw WriteTimedOut();}
public virtual void Update(UpdateContext context){Schema schema = (UpdateContext)_outerInstance.GetSchema(context.SchemaName);if (schema.SchemaName!= null){schema.Update(context.SchemaName);}}
public override void Serialize(byte[] b, int offset){if (_position == _limit){_limit = 0;_position = _position;_buf = b;_position += _position;_limit = _limit;_end = _end;}}
public void RemoveHyperlink(HLink link){_hyperlinks.Remove(link);}
public ShingleFilter CreateShingleFilter(TokenStream stream){return CreateShingleFilter(stream, 0);}
public address(s) of identity {return identity.Email;}
public filter(){return new _LowerFilter(this);}
public dateConstraint(DateTime value){return new DateConstraint(value);}
public PrefixCodedTerms(){return new PrefixCodedTerms(this);}
public override bool Include(Ref @ref){return false;}
public virtual bool IsSempred(int arg){return _sempreds[arg];}
public virtual string GetShortPath(int start, int end){return GetShortPath(start, end);}
public virtual string GetStateString(){return this.phase.ToString();}
public virtual IList<SourceQueue> GetDeathQueue(string deadLetter){return sourceQueues.Get(deadLetter);}
public virtual IRawMessage GetRawMessage(){return this.GetRawMessage();}
public override bool ready(){return false;}
public override CharFilter CreateInstance(JapaneseIterationMarkCharFilter filter){return base.CreateInstance(filter);}
public virtual UpdateNetworkProfileResponse UpdateNetworkProfile(UpdateNetworkProfileResponse response){return UpdateNetworkProfile(response.ProfileId);}
public virtual UpdateAccountSettingsResponse UpdateAccountSettings(UpdateAccountSettingsResponse response){return UpdateAccountSettings(response.Settings);}
public virtual string Format(double value){return Format(value * kScale, value * m_littleEndian) + kScale[0];}
public void DeleteVoiceTemplate(VoiceTemplate voiceTemplate){_voiceTemplate = voiceTemplate;}
public override void Write(OutputStream outputStream){@out.Write(packedData);}
public virtual CreateClusterResponse CreateCluster(CreateClusterRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateClusterRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateClusterResponseUnmarshaller.Instance;return Invoke<CreateClusterResponse>(request, options);}
public virtual void add(E e){list.add(e);}
public void SeekTo(long pos){Debug.Assert(pos >= 0);}
public override TreeFilter Clone(){return this;}
public override void Serialize(Stream out1){out1.Write(PackedInt32s.Create(backingArray, offset + _position), "Array", "PackedInt32s");}
public CA(String caCertId){return CA(caId, null);}
public GetVaultNotificationsRequest(string vaultName){return new GetVaultNotificationsRequest(vaultName);}
public void RemoveManagerProperty(){_manager = null;}
public IAM policies, you can use to, and/or, the IAM role.  public List<string> GetAccessToIAMPolicies(string roleName){return list(user.GetAccessToIAMPolicies(roleName));}
public override void SeekToNextTerm(){termAtt = AddTermAttribute<ICharTerm>();}
public virtual InstanceDetail InstanceDetail(){return InstanceDetail(null);}
public void Write(byte b){Write((int) b);}
public virtual void Clear(){this._enclosing.Clear();}
public override void SetValue(double newValue){object.CopyValueOf(backingArray, offset + _position, newValue);}
public virtual Fraction BuildFraction(int denominator){return BuildFraction(denominator, 0);}
public virtual string ToString(){return GetCanonicalName();}
public virtual IList<ReplicationGroup> GetGlobalReplicationGroups(){return replicationGroups;}
public override WAH8DocIdSet Build(FieldInfos field){if (field.HasValue){AddValue(field.Value);}return base.Build(field.Options);}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(this.GetType().Name);out1.WriteByte(_order);}
public virtual void Recycle(int blocks){Recycle(blocks * m_blockSize);}
public virtual string GetDescription(){return Vendor.GetDescription() + " (required)";}
public QueryConfigHandler(QueryConfigHandler queryConfigHandler){_queryConfigHandler = queryConfigHandler;}
public RouteTable(RouteTableData routeTableData){this.routeTableData = routeTableData;}
public virtual bool EndsWith(string suffix, Ref @ref){return @ref.EndsWith(suffix, StringComparison.Ordinal);}
public virtual void compact(){_le.compact();}
public HTMLStripCharFilter Create(ICharStream input){return (HTMLStripCharFilter)Create(input);}
public virtual void Stop(){Hangup.Stop(this);}
public virtual int Hash(char[] array){return Sharpen.Util.GetHash(array, 0, array.Length);}
public VoiceTemplate CreateVoiceTemplate(VoiceTemplateSpec spec){this.Spec = spec;this.Template = new VoiceTemplate(this);return this;}
public virtual RejectDomainTransferRequest RejectDomainTransferRequest(string path, string transfer_type){var request = new InvokeOptions();request.RequestMarshaller = RejectDomainTransferRequestMarshaller.Instance;request.ResponseUnmarshaller = RejectDomainTransferRequestUnmarshaller.Instance;return Invoke<RejectDomainTransferRequest>(path, transfer_type, request.Parameters, null, null, null, null, null, null, null, null, null, null, null, null, null);}
public legacyCredential(){credential = new legacyCredential();}
public virtual E remove(E @object){return list.remove(@object);}
public virtual void clear(){list.clear();}
public void SetEnumValues(){_termsEnum = TermsEnum.Value;_subIndex = 0;}
public override string ToString(){return base.ToString() + "[]";}
public void SetCurrent(int position){m_index = position;}
public virtual InvalidationList GetInvalidations(){return invalidations;}
public MonitoringSchedule(Scheduler scheduler){return new MonitoringSchedule(scheduler);}
public override string Read(int capacity){return _in.Read(capacity);}
public Sheet RemoveSheetAt(int index){return RemoveSheet(index, _sheetNames.Count == 0);}
public virtual PhoneNumberCollection Phones { get; private set; }
public java.util.Iterator<E> entries(){return entries.iterator(this);}
public virtual bool Equals(object o){if (o == this){return true;}if (o is java.util.MapClass.Entry<K, V>){return true;}java.util.MapClass.Entry<object, object> entry = o.get(KEY_VALUE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE
public virtual IList<CacheSecurityGroup> GetCacheSecurityGroups(){return cacheSecurityGroups;}
public override ObjectId GetObjectId(int position){return delegate1.GetObjectId(position);}
public virtual DateTimeRange GetDateRange(){return startDate.GetDateRange();}
public override bool Equals(object o){return base.Equals(o);}
public IList<Region> GetRegions(){return regions;}
public void Write(SID x){_out.Write(x);}
public virtual string GetBoundSheetName(){return GetBoundSheetName(null);}
public virtual RepositoryConfig Register(RepositoryConfig config){var account = this;return new RepositoryConfig{AccessKeyId = repositoryAccessKeyId,Password = password };}
public virtual void Remove(string name){names.Remove(name);}
public virtual HIT Create(HIT type){return new HIT(this, type);}
public virtual void DeleteMountTarget(){this.mountTarget.Delete();}
public formula error(int type){return _formulaErrors.Get(type);}
public virtual DescribeMetricDataResponse DescribeMetricData(DescribeMetricDataRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeMetricDataRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeMetricDataResponseUnmarshaller.Instance;return Invoke<DescribeMetricDataResponse>(request, options);}
public virtual void Run(){base.Run();}
public virtual void Read(){int skip = _reader.ReadUShort();skip = 0;_reader.Read();}
public virtual void Alloc(int capacity){_limit = capacity;}
public void Clear ( ){_drawingGroups = null;}
public override void WriteDouble(double v){if (v == null){throw new ArgumentNullException("v");}else if (v > 0){throw new System.ArgumentException("v");}else if (v > 0){throw new System.ArgumentException("v");}else if (v > 0){throw new System.ArgumentException("v");}else if (v > 0){throw new System.ArgumentException("v");}endif", v);}
public virtual void Untag(ITokenStream tokenStream){_token = tokenStream;}
public virtual ReceiveDomainTransfersRequest ReceiveDomainTransfersRequest(DomainTransfersRequest request){var options = new InvokeOptions();options.RequestMarshaller = ReceiveDomainTransfersRequestMarshaller.Instance;options.ResponseUnmarshaller = ReceiveDomainTransfersRequestMarshaller.Instance;return Invoke<ReceiveDomainTransfersRequest>(request, options);}
public override void Serialize(ObjectOutput out1){out1.Write(this.GetType().GetTypeInfo().Assembly.GetName().Name);}
public virtual DescribeLoadBalancerOptions DescribeLoadBalancerOptions(){return new DescribeLoadBalancerOptions(this);}
public void SetBorder(IBorder border){field_1_border = border;}
public virtual NGit.Api.RevertCommand CreateRevertCommand(string reason){return new NGit.Api.RevertCommand(reason);}
public void RevokeIngressCacheSecurityGroup(string cacheSecurityId){_ingressCacheSecurityGroup = new CacheSecurityGroup(cacheSecurityId);_cacheSecurityIdRevokes[cacheSecurityId];}
public override void putCharAt(int index){java.util.Arrays.checkOffsetAndCount(offset, length);if (offset + length > buffer.length){throw new java.nio.BufferOverflowException();}buffer[offset + length] = char.ConvertFromUtf32(buffer[offset + length]));}
public static GalicianStemFilter Create(TokenStream input){return new GalicianStemFilter(input);}
public virtual RegionCollection GetRegions(){return regions;}
public int indexOf(object o){return indexOf(o, this.endOf(o));}
public void SetBlockPool(SafeBlockPool b){pool = b;}
public ExpressionResult Evaluate(int row, int column){return Evaluate(row, column);}
public void SetFillerToken(IToken fillerToken){_fillerToken = fillerToken;}
public virtual string ToString(){return GetCanonicalName();}
public override void ReadArea3DPtg(Area3DPtg data, int input1, int input2, int input3, int input4, int input5, int input6, int input7){Area3DPtg data = _in.ReadArea3DPtgData(input1, input2, input5, input6, input7, input8, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input10, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9, input9
public void SetContent(string content){_content = content;}
public bool IsLetter(char c){if (CharIsUpper(c)){return true;}return false;}
public virtual void SetBlockSize(int size){m_blockSize = size;}
public override object Create(int[] elements, 0, elements.Length);foreach (E element in elements){if (element[0] == end){return element[1];}}return new _Clone(elements, 0, elements.Length);}
public java.lang.StringBuffer getBuffer(){return new java.lang.StringBuffer(this);}
public virtual string GetPromptText(){return prompt;}
public void ReadBottomMargin(Record in1){_rc4.SkipTwoBytes();_rc4.StartRecord(in1);_rc4.EndRecord(in1);_rc4.OffsetRecord(in1);_rc4.EndRecord(in1);_rc4.RecordSizeRecord(in1);_rc4.OffsetRecord(in1);_rc4.EndRecord(in1);_rc4.OffsetRecord(in1);_rc4.OffsetRecord(in1);_rc4.OffsetRecord(in1);}
public virtual void DeleteSnapshotCopyGrant(SnapshotCopyGrant grant){Delete(grant.GrantId);}
public override double Evaluate(int row, int column){return base.Evaluate(row, column);}
public virtual bool contains(object o){return this._enclosing.containsKey(o);}
public QueryParserSettings(IQueryParser parser): base(parser){this.parser = parser;}
public virtual IList<BlockHeader> GetChangedBlocks(){return Sharpen.Collections.UnmodifiableList(getChangedBlocks()));}
public ListAlbumsRequest(): base("/albums"){return ListAlbums(new ListAlbumsRequest());}
public virtual void DescribeVirtualInterfaces(){this._enclosing.DescribeVirtualInterfaces();}
public virtual char read(char c){throw new System.NotImplementedException();}
public override void SetIterator(Iterator @it){this._iterator = @it;}
public string GetAccessKeyId(){return _accessKeyId;}
public void DisassociateDomain(string domainName){domainName = null;}
public virtual void AttachDiskToApp(Disk disk){app.AttachDiskToApp(disk);}
public virtual AttributesCollection GetSnapshotAttributes(){return snapshot.GetSnapshotAttributes();}
public virtual string ToString(){return GetCanonicalName();}
public override void fill(object[] values, int value, int arrayOffset, int arrayOffset, int arrayOffset, int arrayOffset) {for (int i = 0; i < values.Length; i++){values[i] = values[i];}}
public virtual string getValue(){return mValue;}
public virtual void copyObjectId(object id){copyObjectId(id.GetObject());}
public virtual void putDouble(double value){if (value == 0){throw new System.ArgumentException("value is a required property and must be set before storing the doubles.", "value");}buffer.putDouble(value);}
public virtual string GetEncodingName(){return enc.GetEncodingName();}
public void Write(int n){for (int i = 0; i < _limit; i++){_out.Write(n);}}
public override void Decode(int n){Decode(n, m_buf, _stndStart, _stndLength);}
public virtual string GetNext(){return this.Peek(true);}
public string GetText(IVocabulary vocabulary){return vocabulary.ToString(null, NumberStyles.Integer, vocabulary);}
public void ApplyFont(Font font){this.ApplyFont(font);}
public virtual FaceDetectionStatistics GetFaceDetectionStatistics(){return faceDetectionStatistics;}
public virtual void SetInputStream(java.io.InputStream @is){throw new System.NotImplementedException();}
public virtual string ToString(){return TokenString;}
public virtual void append(bool b){append0(b? "true" : "false");}
public LexerType type { get; internal set; }
public virtual EnableAvailabilityZonesRequest EnableAvailabilityZonesRequest(ISet<AvailabilityZoneRequest> request){return EnableAvailabilityZonesRequest(request);}
public ExpressionResult Evaluate(int row, int column){return Evaluate(row, column);}
public CompositeShape.Anchor anchor { get; set; }
public virtual void Start(INetBrityRecognitionContext context){start(context, new StartBrityRecognitionContext(elebrity));}
public void ReadForHideArrayItem(E element){ReadForHideArrayItem(element);}
public virtual IQueryBuilder getBuilder(string nodeName){return null;}
public virtual Snapshots Describe(){return snapshots;}
public virtual void SynthesizeSpeech(string text, int length){SynthesizeSpeech(text, length);}
public virtual void Reboot(){base.Reboot();}
public virtual bool StartsWith(AbbreviatedObjectId id){return id.StartsWith(abbreviatedObjectIdPrefix).Value;}
public virtual void RevokeAccessToDomain(string domain){RevokesAccessToDomain(domain, null);}
public virtual void SetReferenceLogMessage(string msg){this.m_logMessage = msg;}
public SetAccessKeySecretKeySessionToken(string key, string secretKey, int expiration){AccessKey = key;Secret = secretKey;Expiration = expiration;}
public virtual DescribeMetricCollectionTypesResponse DescribeMetricCollectionTypes(DescribeMetricCollectionTypesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeMetricCollectionTypesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeMetricCollectionTypesResponseUnmarshaller.Instance;return Invoke<DescribeMetricCollectionTypesResponse>(request, options);}
public virtual BrokerEngineType Listeners(){return brokerTypeList;}
public PrefixWriter(string oldPrefix, int oldPrefixLen){oldPrefix = oldPrefix.Length;}
public RowRecordsAggregate(RecordStream recordStream){return new RowRecordsAggregate(this, recordStream);}
public void Reset() {iterator = null;}
public virtual ExpandedDoubleExpression CreateExpandedDoubleExpression(IList<ExpandedDoubleExpression> args){return CreateExpandedDoubleExpression(args, 0, args.Length);}
public override java.util.Iterator<E> entries(){return new java.util.Hashtable<K, V>.EntryIterator(this._enclosing);}
public virtual string ToString(){return GetCanonicalName();}
public virtual void SetDups(bool b){this._enclosing.SetDups(b);}
public PatternSyntaxException(PatternSyntaxException e){throw new PatternSyntaxException(e.Message, e);}
public virtual void Validate(ILexerPushModeAction action){if (pushMode == null){return;}lexerPushMode = action.LexerPushMode;}
public ExcelClassDefinition RegisterFunction(String name){_name = name;}
public void DeleteWorkGroup(WorkItem workGroup){Delete(workGroup.WorkGroupId);}
public override void write(int b){write((int) b);}}
public virtual void DisassociateReplicationGroup(ReplicationGroup group){DisassociateReplicationGroup(group);}
public virtual void reset(){buffer.state = STATE_INIT;}
public override string ToString(){return Hashtable.keys()[0];}
public virtual void ConfirmsVirtualInterfaceInATransitVirtualInterface(IThreadContext context){ConfirmsVirtualInterfaceInATransitVirtualInterface(context);}
public virtual string ceiling(string key){return map[key];}
public virtual java.nio.CharBuffer wrap(char sequence, java.nio.CharSequence c, int wrapLength){return wrap(sequence, 0, wrapLength);}
public void Rewind(TextReader reader){_reader = reader;}
public virtual Attendees ListAttendees(string accountId){return Attendees.List(accountId);}
public override void CopyInto(byte[] array){box.CopyInto(array);}
public virtual void SetPrefixLength(int len){m_prefixLength = len;}
public virtual FaceDetection[] GetFacesIncludingBody(IList<FaceDetection> faces){return faces;}
public virtual void put(int[] v){if (m_len >= m_buf.size){throw new System.IO.IOException("Buffer is full");}if (m_len >= m_buf.size){throw new java.nio.BufferOverflowException();}{for (int i = 0; i < m_len.arrayOfInt32s; i++){m_buf[i] = m_len[i];}}}
public void ResetDBParameterGroup(DBParameterGroupName group){Reset(group.GroupName);}
public virtual void SetFieldName(string name){this.m_name = name;}
public virtual HIT Get(string id){return HITs.TryGetValue(id, out HIT HIT_REF)? HITS.GetValue(id) : null;}
public QueryFaceRequest(QueryFaceRequestParameters parameters){return (QueryFaceRequest)Create(parameters);}
public virtual BundleTaskDetail GetBundleTaskDetail(){return BundleTaskDetail.ForBundle();}
public virtual bool CanReuseIndexInput(int input){return false;}
public DocsArray(int size){if (size == 0){return new DocsArray(this);}return new DocsArray(this, size);}
public virtual int size(){return this._enclosing._size;}
public override void ReadFields(RecordInputStream in1){int field_1_offset = _in1.ReadUShort();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();}
public override void SetRange(int range, long[] array, int start, int end){for (int i = start; i < end; i++){Set(range[i], array[i], end);}}
public virtual BytesRef ReadNext(){return _buf.ReadNext();}
public override void ReadFields(RecordInput in1){_in1.Read(field_1_options);_in1.Read(field_2_options);}_in1.Read(field_4_options);}
public override void Skip(int skip){Skip(skip);}
public virtual IList<Tag> GetTags(){return service.listTags(){};}
public virtual void PollForUpdates(int updates){Poll(updates, 0, updates);}
public virtual IntegrationResponse CreateOrUpdate(IntegrationResponse existingResponse){return existingResponse;}
public override void put(byte b){throw new System.NotImplementedException();}
public override void ReadFields(RecordInput in1){ReadValues(in1, _units);_units = ReadValues(in1, _units);_unitsOffset = ReadValues(in1, _unitsOffset);}
public virtual inflection.InflectionType GetInflectionType(int doc){int pos = doc - _start;if (pos == start){pos = word.Length - 1;wordStart = doc.Length - 1;}return _inflectionType;}
public virtual void Skip(int skip){SkipBytes(skip);}
public EscherContainerRecord FindFirstEscherContainerRecord(){return (EscherContainerRecord)FirstEscherRecordInList(true);}
public virtual void write(byte b){throw new System.NotImplementedException();}
public override JBoss.EvaluationContext GetParentContext(int index){return _parent;}
public ValueEval GetCellAt(int row, int column){return GetCellAt(row, column);}
public int MaximumPackedIntSize { get; set; }
public virtual int size(){return this._enclosing._size;}
public virtual SubmoduleAddCommand SubmoduleAddCommand(SubmoduleAddCommand cmd){return cmd.SetCommand(submoduleAddCommand);}
public void SetBulkScorer(BulkScorer bulkScorer){_bulkScorer = bulkScorer;}
public static BigramFilter Create(TokenStream input){return new CJKBigramFilter(input);}
public ValueEval GetValueAt(int sourceRow, int sourceColumn){return GetRelativeValue(sourceRow, sourceColumn);}
public void SetResourceDelegate(ResourceDelegate @delegate){resource = @delegate;}
public int firstOccurrenceOf(int position){return index;}
public void Initialize(NGit.Configuration config){Initialize(config.GetConfigurationObject());}
public virtual void Close(){session = null;}
public virtual void remove(object key){remove(key, true);}
public virtual void Abort(){throw new InvalidOperationException("Aborting a vault lock");}
public virtual UpdateOriginationResponse UpdateOrigination(UpdateOriginationResponse response){return UpdateOrigination(response.GetOriginationId());}
public virtual void StartAnalysis(XDocument doc){_startAnalysis(doc, null);}
public override void Fill(byte[] b){Fill(b, 0, b.Length);}
public override string Sign(string str, AlibabaCloudCredentials credentials){return Sign(str, credentials, "AlibabaCloudCredentials", "AWS4-Auth-Token", "AWS4-Use-Signature", "AWS4-TokenSecret", "AWS4-TokenPrefixedCredentials", "AWS4-Region", "AWS4-RegionDelimiters", "AWS4-RegionDelimiters", "AWS4-RegionDelimiters", "AWS4-RegionDelimiters"){return Sign(str, credentials.GetRegionCredential, "regionDelimiters", "regionDelimiters", "regionDelimiters", "regionDelimiters", "regionDelimiters", "regionDelimiters", "regionDelimiters", "regionDelimiters", "regionDelimiters", "regionDelimiters", "regionDelimiters", "regionDelimiters", "regionDelimiters", "regionDelimiters", "regionDelimiters", "regionDelimiters", "regionDelimiters", "regionDelimiters", "regionDelimiters", "regionDelimiters", "regionDelimiters", "regionDelimiters", "regionDelimiters", "regionDelimiters", "regionDelimiters", "regionDelimiters", "regionDelimiters", "regionDelimiters", "
public static float GetHyperbolicTf(int freq){return 0.0f;}
public override void Serialize(Token t){Serialize(t.Serialize(t.output, t));}
public virtual void SetMultiSimilarity(int similarity){multi = similarity;}
public virtual VoiceTemplate Information(VoiceTemplate type){return VoiceTemplateInfo.For(Type, null);}
public virtual double Acosh(double number){return Acosh(number) ;}
public virtual void remove(object o){remove(o);}
public virtual void SetLoginProfile(string profileName){this.profileName = profileName;this.createDate = new DateTime() ;}
public CellRangeRefinement(int start, int end){CheckRange(start, end);start = start;end = end;}
public virtual PushTemplate CreatePushTemplate(){return (PushTemplate)CreateTemplate(null);}
public virtual RuntimeConfiguration GetRuntimeConfiguration(){return runtimeConfiguration;}
public virtual void copy(){copy_prot.copy(_address);}
public virtual bool Equals(TermData other){return TermData.Compare(other);}
public IList<Dataset> GetDatasets(){return datasets;}
public virtual int count(){lock (this._enclosing){return _enclosing._size;}}
public virtual ScalingParameter[] GetScalingParameters(){return scalingParameters;}
public FeatRecord DeepCopy(){return (FeatRecord)base.DeepCopy();}
public void Disassociate(DeleteTarget target){this.Target.Disassociate(target.GetReference());}
public virtual int GetDepth(){return this.depth;}
public virtual void SetRate(int rate){this.rate = rate;}
public string base = "";
public virtual int lastIndexOf(object o){if (o == null){return -1;}return (o - 1);}
public ListPhotoStoresRequest(ListPhotoStoresRequest request){_request = request;}
public BM25Similarity(){return new BM25Similarity(this);}
public virtual java.util.Iterator<E> descendingIterator(){return descendingIterator(this);}
public virtual Weight GetWeight(int contentLength, int totalTermFrequency){return 0;}
public void setValue(T value){this._enclosing.setValue(value);}
public virtual string readUTF8(java.nio.CharBuffer @in){throw new System.NotImplementedException();}
public virtual bool HasSourceData(int start, int end){return false;}
public virtual void Grow(int size){for (int i = size; i < size; i++){System.Array.Copy(elements, i, _array, i + _position, _array.Length);_array[i] = _array[i++];}}
public void SerializeBorderStyles(BorderStyles1 border_styles2, border_styles3, border_styles4, border_styles5, border_styles6){for (int i = 0; i < border_styles4.Length; i++){SerializeStyle(border_styles1, border_styles2, border_styles3, border_styles4, border_styles5_border_index);}SerializeStyle(border_styles4, border_styles5_border_index);}
public MessageBody(string msg ){this.m_msg = msg;}
public virtual MergeBatchResult Merge(MergeBatchResult * r){return Merge(r.Batch, n);}
public void SetForegroundColor(HSSFColor color){foreground = color;}
public virtual void removeAt(int location){removeAt(location);}
public virtual UpdateSkillGroupResponse UpdateSkillGroup(UpdateSkillGroupResponse result){return UpdateInternal(result, null);}
public virtual int GetSize(){return mSize;}
public virtual float GetWeight(){return m_weight;}
public virtual DescribeInstanceResponse DescribeInstance(DescribeInstanceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeInstanceRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeInstanceResponseUnmarshaller.Instance;return Invoke<DescribeInstanceResponse>(request, options);}
public virtual void DescribeOptions(){this._enclosing.DescribeOptions();}
public ProgressMonitor(ProgressMonitor other){this.other = other;}
public string GetAccessKeySecret(){return _accessKeySecret;}
public ValueEval GetRef3DPtgEval(Ref3DPtg arg0){return GetRef3DPtgEval(arg0.Ref3DTarget);}
public virtual bool Available(){return false;}
public virtual DiffEntry<T> CreateChangeSet(DiffEntry<T> entry){this.entry = entry;return this;}
public virtual IList<BusinessReportSchedule> GetBusinessReportSchedules(){return null;}
public virtual bool StartsWith(string s){return startsWith(s, 0, s.Length);}
public virtual void Associate(string subnet, IP address block){this.CidrBlock = new IPAddressBlock(subnet);this.CidrBlock = new IPAddressBlock(subnet);}
public override long Length(){return _size;}
public virtual string GetCommandName(){return name;}
public DefaultProfile GetDefaultProfile(){return default(DefaultProfile);}
public virtual void SetBatchVisibility(IBatchVisibility visibility){_batchVisibility = visibility;}
public virtual void SetField1(int v){field1 = v;}
public virtual void DeleteNATGateway(string name){_natGatewayNames.Remove(name);_natGatewayNames.Add(name);}
public virtual void UpdatePhoneNumberSettings(){updateNumberSettings(new PhoneNumberSettings());}
public override void fill(object[] values, int value, int arrayOffset, int arrayOffset, int arrayOffset, int arrayOffset) {for (int i = 0; i < values.Length; i++){values[i] = values[i];}}
public virtual void Clear(){_limit = 0;}
public virtual NGit.Storage.Disk CreateDisk(Snapshot snapshot){return CreateDisk(snapshot.GetPath());}
public virtual void SetTableName(string table){m_tableName = table;}
public virtual NGit.Api.ListBranchesCommand ListBranches(){return branches;}
public UAX29URLEmailTokenizer subclassing this class, you should never be using this one.
public virtual ICharTerm GetLastChild(){return GetLastChild().GetCharTerm();}
public virtual string ToJson(DFA f){return f.ToJson(null, null, null);}
public TreeFilter(ICharTerm term){return term == null? null : new TreeFilter(term, this);}
public virtual void SetPreAndPostTags(string[] preTags){_pre = preTags;_post = postTags;}
public override string ToString(){return "benchmark.lock[" + this.phase + ", memory=" + this.bytesUsed + "]";}
public UploadData(File[] files){this.files = files;}
public override void Serialize(ILittleEndianOutput out1){out1.Write(this.GetType().Name);out1.WriteByte(this.GetType().Name);out1.WriteByte(this.GetType().GetProperty("id"));out1.WriteShort(this.GetHashCode());}
public virtual TokenSet GetExpectedTokens(){return expectedTokens;}
public DecisionInfo[] getDecisionInfos(){return new DecisionInfo[0];}
public void AddExpression(IExpression e){m_expressions.Add(e);}
public virtual NGit.Api.XmlSerializer Create(XmlSerializer serializer){return new NGit.Api.XmlSerializer(this);}
public virtual int Evaluate(SDVariable n){return Evaluate(n, 0);}
public string GetDirectory(){return directory;}
public int GetBiasedExponent(){return biasedExponent;}
public java.nio.DoubleBuffer wrap(double array_1_accessed) {return new java.nio.DoubleArrayBuffer(array_1_accessed);}
public virtual IList<CacheNode> GetReservedCacheNodes(){return reservedCacheNodes;}
public virtual void SetRunInBackground(RunInBackground runInBackground){this.runInBackground = runInBackground;}
public virtual int GetEstimatedNumberUniqueValues(int value){return GetEstimatedNumberUniqueValues(value);}
public virtual IField FieldInfo Get(int index, FieldInfo field){int oldIdx = index;if (oldIdx!= -1){return oldIdx;}return null;}
public DateTime DateFor(double value){return Date(GetTimeForValue(value));}
public virtual void DeleteDeploymentGroup(string deploymentGroupName){this.DeleteDeploymentGroup(deploymentGroupName, 0, deploymentGroupName.Length);}
public virtual void AddFacet(Facet facet){AddFacet(facet);}
public virtual ReceiveMailboxResponse ReceiveMailbox(ReceiveMailboxRequest request){var options = new InvokeOptions();options.RequestMarshaller = ReceiveMailboxRequestMarshaller.Instance;options.ResponseUnmarshaller = ReceiveMailboxResponseUnmarshaller.Instance;return Invoke<ReceiveMailboxResponse>(request, options);}
public virtual E next(){return this.nextEntry();}
public SheetRecordCollector(StreamRecordStream stream){_writer = new BinaryWriter(stream);_in = stream;}
public override void Initialize(Seed seed){this.seed = seed;}
public override V set(string cs){return this._enclosing.set(cs);}
public override void SetData(byte[] data){this._enclosing.SetData(data);}
public virtual string GetConstantName(){return constantName;}
public virtual void onViewInvalidated(){this._enclosing.notifyDataSetInvalidated();}
public CellRangeAddress FromCellReference(CellReference cellReference){return CreateCellRangeAddress(cellReference, 0, 0);}
public virtual CreateSkillAuthorizationResponse CreateSkillAuthorization(SkillAuthorizationRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateSkillAuthorizationRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateSkillAuthorizationResponseUnmarshaller.Instance;return Invoke<CreateSkillAuthorizationResponse>(request, options);}
public virtual string ToString(){return GetCanonicalName();}
public void WriteInt(int value){_out.WriteInt(value);_size += INT_SIZE_IN_BYTES;}
public virtual IList<ProcessingJob> GetProcessingJobs(){return processingJobs;}
public virtual Attributes GetClusterSnapshot(){return null;}
public virtual void AddAttributesToFindings(IAttributeQuery attributes){AddAttributeToFindings(attributes);}
public void CellDeleted(ICell cell){_cell = cell;}
public virtual void Reset(TextReader reader){_reader = reader;}
public virtual void SetDFRSimilarityParams(int x, int y){this.x = x;this.y = y;this.z = z;this.w = w;this.a = b;this.b = c;}
public virtual void Open(int openCount){m_openCount = openCount;}
public virtual void Deregister(TaskDefinition task){Deregister(task);}
public QueryGroupUsersRequest(): base(){return new InvokeOptions();}
public override String ToString(){StringBuilder sb = new StringBuilder(64);sb.Append(this.GetType().Name);sb.Append(", ").Append(this.Formula.Value);sb.Append("]");return sb.ToString();}
public virtual NGit.Api.Reporter GetReporter(){return _reporter;}
public System.Exception(MessageFormat.Format(JGitText.Get().exceptionWidthOfTheMessageFormat, MessageFormat.Z)){return this;}
public string name { get; set; }
public HSSFSheetSetProperty(E EvaluateProperty){this.evaluationProperty = EvaluateProperty;}
public virtual void SendRawMessage(){SendRawMessage(null, null, 0);}
public override long available(){return delegate1.available();}
public virtual void append(char c){append0(c);}
public override void capacity(int capacity){byteArray.capacity = capacity;}
public virtual IList<Tag> GetTags(){return new List<Tag> { Get tags() };}
public virtual void SetWriteReferences(IList<WriteReference> writeReferences){_writeReferences = writeReferences;}
public virtual string KeyOfNextEntry(E value){return this._enclosing.KeyOfNextEntry(value);}
public Azure.Storage.FileProperty credentialsProvider = null; eturn credentialsProvider;}
public virtual int count(char[] text){return query(text, 0, text.Length);}
public override void SetDefaultAnalyzer(Analyzer analyzer){analyzer = null;}
public GalicianStemFilter(){return new GalicianStemFilter(this);}
public virtual void Delete(DiskSnapshot snapshot){Delete(snapshot.GetPathName());}
public virtual int compare(byte b, byte c){return cmp(b, c, 0, c.Length);}
public new Request(Parameters parameters){return new Request(parameters);}
public virtual int GetId(ObjectO) {return side.GetId();}
public virtual char[] createCopyOfRange(char[] array_1, int length_1){return newArray_1(array_1, length_1);}
public CalcCountRecord reads(RecordInputStream in1){return reads(in1, 0, _numRecords, 0);}
public Cell(String value, CellStyle cellStyle): base(cellStyle){Row=firstRow;Column=firstColumn;IsRow=firstColumn;IsLastRow=firstRow;IsCol =firstColumn;}
public virtual string ToString(){return this.text;}
public void SetBitMask(int mask){mask = 1 << mask;}
public virtual void ModifyClusterSnapshot(){ClusterSnapshot c = new ClusterSnapshot();c.ModifyClusterSnapshot(this);}
public virtual int length(Entry<K, V> e){return e.length;}
public virtual DescribeReservedDBInstancesResponse DescribeReservedDBInstances(DescribeReservedDBInstancesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeReservedDBInstancesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeReservedDBInstancesResponseUnmarshaller.Instance;return Invoke<DescribeReservedDBInstancesResponse>(request, options);}
public void Delete(string resource){Delete(resource, null);}
public override void Serialize(ILittleEndianOutput out1){out1.Write(this.GetType().Name);out1.WriteByte(this.GetType().Name);out1.WriteByte(this.GetType().GetProperty("id"));out1.WriteShort(this.GetHashCode());}
public virtual long CalculateTokenSizes(long start, long end){return CalculateTokenSizes(start, end);}
public virtual void addAll(IList<E> other){addRange(other);}
public virtual void ReceivePackPreReceived(void){ReceivePackPreReceived(void)Called;}
public new ClasspathResourceLoader(this, loaderType, classpathProvider, debug, debugClass){return new ClasspathResourceLoader(this, loaderType, classpathProvider, debugClass);}
public void Write(PtgRecord rec){_out.Write(rec.PtgRecordId);_ptgRecord = rec;}
public virtual int read(int b){throw new System.NotImplementedException();}
public virtual DetectSyntax(){return detectSyntax();}
public int sid(){return -1;}
public override void WriteDouble(double v){if (v == null){throw new ArgumentNullException("v");}else if (v > 0){throw new System.ArgumentException("v");}else if (v > 0){throw new System.ArgumentException("v");}else if (v > 0){throw new System.ArgumentException("v");}else if (v > 0){throw new System.ArgumentException("v");}endif", v);}
public virtual void setValueAt(int index, V value){object[] newValues = new object[values.Length + 1];System.Array.Copy(values, 0, newValues, 0, values.Length);}
public PatternConsumer(PatternConsumer consumer){_patternConsumer = consumer;}
public override int getItemId(int position){return _engine.session.getItemId(position);}
public override void Finish(){base.Finish();}
public SST Create(long offset){return (Create(offset));}
public string getPath(){return "";}
public override void put(long value){if (value >= 0){throw new System.IndexOutOfRangeException("value=" + value + " outOfBounds=" + (long)value.ToString("broken-out"));}else{buffer[offset + writeIndex++] = value;}}
public virtual PredictionResults GetPredictionResults(){return predictionResults;}
public virtual void UpdateDirectoryConfiguration(DirectoryConfiguration existingConfiguration){this.existingConfiguration = existingConfiguration;}
public virtual List<string> GetVersions(){return list.GetVersions()}
public virtual string StemmedVersion(string word){return StemmedVersion(word, 0, word.Length);}
public virtual ResolverEndpoint GetResolverEndpoint(){return this;}
public virtual void Grow(int size){for (int i = size; i < size; i++){System.Array.Copy(array, i, array, i.ArrayOffset + i, array.Length - i);i.Length = i.Length;}}
public virtual bool contains(object o){return this._enclosing.containsKey(o);}
public virtual bool Equals(Stemmer stemmer){return _stemmer == stemmer;}
public java.nio.ByteBuffer wrap(byte[] b){return new java.nio.ByteBuffer(wrap(b));}
public virtual void SetCreateMethod(MethodInfo method){this.method = method;}
public virtual RSAKeyPair Create(byte[] key){return (new RSAKeyPair(key));}
public bool IsLargeImage(){return true;}
public Explanation[] Explanation { }
public override void CreateInstance(){base.CreateInstance();}
public virtual void Delete(MethodResponse response){ResponseBase old = response.Delete();old.Delete(response);}
public virtual DescribeHostResponse DescribeHost(DescribeHostRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeHostRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeHostResponseUnmarshaller.Instance;return Invoke<DescribeHostResponse>(request, options);}
public virtual Tagger GetTagger(){return null;}
public String ToString(){return CellReferenceDataFormat.Format(CultureInfo.InvariantCulture, name);}
public override void Set(object id, byte array, int offset){int b1 = offset / 8;b2 = offset % 8;}
public virtual string Set(){return (" ");}
public override void ReadBytes(int offset, byte[] buffer, int length){int end = offset + length;for (int i = offset; i < end; i++){byte b = buffer[i];buffer[i] = b[i];}}
public defaultProfile(string regionId, string accessKeyId, string secret){return defaultProfile(regionId, accessKeyId, secret);}
public bool ReadBooleanError(RecordInputStream in1){int field_1_error_flag = in1.ReadByte();int? value = in1.ReadByte();field_2_error_flag = in1.ReadByte();_isBooleanError = in1.ReadByte();_isHexError = in1.ReadByte();_isHexError2 = in1.ReadByte();_isHexError3 = in1.ReadByte();_isHexError3 = in1.ReadByte();_isHexError4 = in1.ReadByte();_isHexError5 = in1.ReadByte();_isHexError5 = in1.ReadByte();_isHexError5 = in1.ReadByte();_isHexError5 = in1.ReadByte();_isHexError5 = in1.ReadByte();_isHexError5 = in1.ReadByte();_isHexError5 = in1.ReadByte();_isHexError5 = in1.ReadByte();_isHexError5 = in1.ReadByte();_isHexError5 = in1.ReadByte();_isHexError5 = in1.ReadByte();_is
public Type GetParameterAt(int index){return m_parameterTypes[index];}
public virtual ExportClientVPNClientCertificateRevocationListResponse ExportClientVPNClientCertificateRevocationListResponse(ExportClientVPNClientCertificateRevocationListRequest request){var options = new InvokeOptions();options.RequestMarshaller = ExportClientVPNClientCertificateRevocationListRequestMarshaller.Instance;options.ResponseUnmarshaller = ExportClientVPNClientCertificateRevocationListResponseUnmarshaller.Instance;return Invoke<ExportClientVPNClientCertificateRevocationListResponse>(request, options);}
public string GetAccessKeyId(){return _accessKeyId;}
public virtual void setValueAt(int index, V value){object[] newValues = new object[values.Length + 1];System.Array.Copy(values, 0, newValues, 0, values.Length);}
public java.util.Iterator<E> entries(){return entries.iterator(this);}
public java.text.Iterator<char> setIteratedBy(char[] chars){iterator = new java.text.CharacterIterator(chars);}
public virtual ICollection<string> GetFacetNames(TypedLinkFacet request){return internalGetFacetNames(request, null, null);}
public java.util.Iterator<E> entries(){return entries.iterator(this);}
public Norwegian Light stem filter constructor. public NorwegianLight stem filter constructor(string[] args){return new NorwegianLightstemfilter(args);}
public virtual void Abort(){this._enclosing.Abort();}
public void AuthoriseDBSecurityGroup(DBSecurityGroupName dbSecurityGroupName){AuthoriseDBSecurityGroup(dbSecurityGroupName, true);}
public virtual void Grow(byte[] b){int n = b.Length;do{Buffer.BlockCopy(b, 0, b, 0, n);n += n;}}
public receipt rule set(payload){return receiptRuleSet(payload);}
public virtual bool IsCurrentVersionEqualTo(string version){return string.CompareOrdinal(Version, version, StringComparison.Ordinal)!= 0;}
public virtual ResourceDescription Get(){return resourceDescription;}
public virtual bool SetDebuggingCommand(bool b){return b;}
public virtual void TagMeetingAccountForApp(MeetingAccount account){tagMeetingAccountForApp(account);}
public RemoveAlbumPhotosRequest(List<string> args){var options = new InvokeOptions();options.RequestMarshaller = RemoveAlbumPhotosRequestMarshaller.Instance;options.ResponseUnmarshaller = RemoveAlbumPhotosResponseUnmarshaller.Instance;return Invoke<RemoveAlbumPhotosRequest>(args, options);}
public virtual PurchaseReservedInstanceOfferingRequest ReceiveReservedInstanceOfferingRequest(PurchaseReservedInstanceOfferingRequest request){var options = new InvokeOptions();options.RequestMarshaller = PurchaseReservedInstanceOfferingRequestMarshaller.Instance;options.ResponseUnmarshaller = PurchaseReservedInstanceOfferingRequestMarshaller.Instance;return Invoke<PurchaseReservedInstanceOfferingRequest>(request, options);}
public virtual java.util.List<E> subList(){return list;}
public bool IsAtMinimum(int value){return _optionValues.Get(value);}
public override bool IsValid(){return true;}
public virtual DeleteLoadBalancerRequestResponse DeleteLoadBalancerRequest(DeleteLoadBalancerRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteLoadBalancerRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteLoadBalancerRequestResponseUnmarshaller.Instance;return Invoke<DeleteLoadBalancerRequestResponse>(request, options);}
public ICell GetCell(CellNumAddress cellnum, CellPolicyEnum policyCheck){return GetCell(cellnum, policyCheck);}
public virtual void decrement(object o){if (!o){throw new InvalidOperationException("o");}this._enclosing.decrementRefCount();}
public virtual string GetDescription(){return GetErrorElement().GetDescription();}
public virtual bool hasData(){return byteBuffer.data!= null;}
public override ObjectId GetObjectId(){return peeledObjectId;}
public ValueEval GetExpression(){return _expression;}
public virtual CreateNetworkACLEntryResponse CreateNetworkACLEntry(CreateNetworkACLEntryResponse request){var options = new InvokeOptions();options.RequestMarshaller = CreateNetworkACLEntryRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateNetworkACLEntryResponseUnmarshaller.Instance;return Invoke<CreateNetworkACLEntryResponse>(request, options);}
public Rule(string text, IPosition start, IPosition end){this.text = text;this.start = start;this.end = end;}
public virtual string GetText(IToken token){return GetTokenString(token);}
public explicit_list_constraint(IList<Constraint> constraints){return _constraint;}
public virtual void AddApplicationRefDataSource(NGit.ApplicationReferenceDataSource dataSource){appRefSources.Add(dataSource);}
public override IList<IToken> GetTokens(int start, int stop){return base.GetTokens(start, stop);}
public virtual string[] GetServiceNames(){return serviceNames;}
public virtual java.lang.StringBuffer append(object o){return append(o, null, o.Length);}
public FargateProfile(FargateProfile profile){this.profile = new FargateProfile(profile);}
public virtual void remove(object o){iterator.remove(o);end++;}
public SheetIsHiddenAttribute SetIsHidden(bool b){if (b){IsHidden = b;}else{IsHidden = b;}}
public virtual ReceiveException: base(Exception.PRESENT, Exception.PRESENT, Exception.REJECT, null, null, null);{this.precedence = precedence;this.exception = rejection;}
public DeleteTagsRequest: base(){return deleteTags(null, null);}
public virtual int NPV(int element_1_index){return NPV(element_1_index);}
public virtual string substring(int index, int length_1){return substring(index, length_1);}
public void SetProtect(bool protect){protect = protect;}
public virtual int size(){return _size;}
public virtual void ReplaceRoute(Route route){this.route = route;}
public override object Encode(int b){return base.Encode(b);}
public virtual void Delete(Output output){_output = output;}
public virtual ListDomainsResponse ListDomains(){return domains;}
public IndexWriterConfiguration CreateIndexWriterConfiguration(IndexWriterConfiguration config){this.m_config = config;}
public virtual ShippingLabelResponse GetShippingLabel(ShippingLabelRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetShippingLabelRequestMarshaller.Instance;options.ResponseUnmarshaller = GetShippingLabelResponseUnmarshaller.Instance;return Invoke<ShippingLabelResponse>(request, options);}
public virtual IList<Volume> GetVolumes(){return volumes;}
public override void close(){delegate1.close();}
public virtual void DumpDFAStates(List<DFAState> states){DumpDFAStates(states);}
public void ApplySecurityGroups(LoadBalancerLoad balancer){ApplySecurityGroupsToLoadBalancer(loadBalancer, balancer.loadBalancerGroups, balancer.securityGroups, balancer.loadBalancerGroupsActive, balancer.loadBalancerGroupsActive, balancer.loadBalancerGroupsActive, balancer.loadBalancerGroupsActive, balancer.loadBalancerGroupsActive, balancer.loadBalancerGroupsActive, balancer.loadBalancerGroupsActive, balancer.loadBalancerGroupsActive, balancer.loadBalancerGroupsActive, balancer.loadBalancerGroupsActive, balancer.loadBalancerGroupsActive, balancer.loadBalancerGroupsActive, balancer.groupsActive, balancer.loadBalancerGroupsActive, balancer.loadBalancerGroupsActive, balancer.loadBalancerGroupsActive, balancer.loadBalancerGroupsActive, balancer.groupsActive, balancer.groupsActive, balancer.groupsActive, balancer.groupsActive, balancer.groupsActive, balancer.groupsActive, balancer.groupsActive, balancer.groupsActive, balancer.groupsActive, balancer.groupsActive, balancer.groupsActive, balancer.groupsActive, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
public void CreatePrivateVirtualInterface(){this.CreateExternalVirtualInterface(nPOIFSRecord.NUM_BYTES_OBJECT_REF);}
public virtual IList<ClientVPNAuthorizationRule> GetClientVPNAuthorizationRules(){return new List<ClientVPNAuthorizationRule>(clientVPNAuthorizations, clientVPNClientVersion, clientVPNClientUserName, clientVPNClientExternalId, clientVPNClientExternalId, clientVPNClientExternalId, clientVPNClientExternalId, clientVPNClientExternalId, clientVPNClientExternalId, clientVPNClientExternalId, clientVPNClientExternalId, clientVPNClientExternalId, clientVPNClientExternalId, clientVPNClientExternalId, clientVPNClientExternalId, clientVPNClientExternalId, clientVPNClientExternalId, clientVPNClientExternalId, clientVPNClientExternalId, clientVPNClientExternalId, clientVPNClientExternalId, clientVPNClientExternalId, clientVPNClientExternalId, clientVPNClientExternalId, clientVPNClientExternalId, clientVPNClientExternalId, clientVPNClientExternalId, clientVPNClientExternalId, clientVPNClientExternalId, clientVPNClientExternalId, clientExternalId, clientExternalId, clientExternalId, clientExternalId, clientExternal
public override void ReadFields(TextRecord in1){ReadFields(in1);}
public override bool ShouldAddTerm(Term term){term = term;return false;}
public explicit_list_constraint(IList<Constraint> constraints){return _constraint;}
public virtual void TestAlarm(Alarm alarms){Alarm t = newAlarm();t.Test(allAlarmCases, 0, alarms);}
public void DeleteProfilingGroup(string name){if (name == null){throw new ArgumentNullException("name cannot be null");}this.m_profilingGroups.Remove(name);}
public override void Write(int b){Write((long)b, b >> 0);}
public virtual void SetFunctionName(string name){_functionName = name;}
public virtual IList<string> GetHangulLoopInfos(){return GetHangulLoopInfos(null);}
public virtual int size(){return this._enclosing._size;}
public virtual void DisablesEnhancedMonitoring(object app){this._enclosing.Disables(app);}
public int index(){return this.array[this.array.index()];}
public DeploymentConfiguration CreateDeploymentConfiguration(string deploymentName){return CreateDeploymentConfiguration(deploymentName, null, null);}
public virtual UpdateBatchResponse Update(UpdateBatchRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateResponseUnmarshaller.Instance;return Invoke<UpdateBatchResponse>(request, options);}
public AppCookieStickinessPolicyRequest RequestMarshaller(RequestMarshaller.Instance parameters){return new AppCookieStickinessPolicyRequest(parameters);}
public virtual ListUserPoliciesResponse ListUserPolicies(ListUserPoliciesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListUserPoliciesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListUserPoliciesResponseUnmarshaller.Instance;return Invoke<ListUserPoliciesResponse>(request, options);}
public void SetBodyText(IText text){_bodyText = text;}
public virtual void DeleteUsagePlanKey(int key){DeleteInternal(key, true);}
public Schema(Document doc){var options = new InvokeOptions();options.RequestMarshaller = InvokeOptionsMarshaller.Instance;options.ResponseUnmarshaller = InvokeOptionsUnmarshaller.Instance;return Invoke<Schema>(doc, options);}
public static NGit.Api.DiffCommand newDiffCommand(string command, string arg0, int arg1, int arg2, bool arg3, bool arg4, bool arg5, bool arg6, bool arg7, bool arg8, bool arg9, bool arg10, bool arg11){return new DiffCommand(command, arg0, arg11, arg12, arg11, arg12, arg13, arg13, arg14, arg15, arg18, arg18, arg18, arg18, arg18, arg19, arg19, arg19, arg20, arg20, arg21, arg22, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32_default)
public void WriteByte(int b){out1.WriteByte(b);}
public virtual IList<AssessmentRun> GetAssessmentRuns(){return assessmentRunService.ListAssessmentRuns();}
public virtual DimConfig GetDimConfig(string dimName){return dimNames[dimName];}
public string getRawAuthority(){return authority;}
public IDrawingGroupId CreateDrawingGroupId(int groupIndex){return (new DrawingGroupId(groupIndex));}
public virtual void Sort(int cmp, int to){if (cmp < 0){throw new ArgumentException("cmp" + cmp + " not supported.");}int result = _size;for (int i = cmp; i < result; i++){result[i] = _size[i];}}
public MLModel CreateMLModel(MLModel input){return input;}
public virtual void SetTag(string key){iv1.tag = key;}
public override string Get(string name){return base.Get(name, StringComparison.Ordinal)?"true" : "false";}
public virtual ReceiveCommand.Result GetResult(){return status;}
public virtual RevFilter[] CreateRevFilters(IList<RevFilter> list){return new ArrayList<RevFilter>(list.ToArray());}
public virtual void CallAllRegisteredHooksOnPostReceive(object o){CallAllRegisteredHooksOnPostReceive(o);}
public virtual int GetDeltaBase(int @base){return GetDeltaBase(@base);}
public virtual int Decode(int value, int length){return _dec.Decode(value, length);}
public virtual ValueSource GetValueSource(){return _valueSource;}
public override int Read(int count){return _buf.Read(count);}
public virtual double Evaluate(double x, double y, int z, int w, inth, inth, intl){return Evaluate(x, y, z, w, x, y, z, w, x, y, z);}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(this.field_1_flag);}
public virtual bool Contains(char sequence){return map.Contains(sequence);}
public override ObjectId GetObjectId(){return peeledObjectId;}
public virtual bool Contains(char sequence){return map.Contains(sequence);}
public virtual void backup(int count){if (count > 0){backingArray[offset + count] = buffer[offset + count];}}
public virtual void SetJobFlowIdentity(string jobFlowIdentity){this.jobFlowIdentity = jobFlowIdentity;}
public virtual int Repeats(int value){return _limit;}
public Dictionary<string, string> GetKeyValuePairs(){return DictionaryUtil.GetKeyValuePairs(this.store, this.key);}
public virtual void DeleteMatchgroupConfiguration(MatchgroupConfiguration config){this.DeleteMatchingGroup(config.group_name, config.flags, config.flags_matchgroup);}
public virtual DeleteDistributionRequest Create(DeleteDistributionRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDistributionRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDistributionRequestUnmarshaller.Instance;return Invoke<DeleteDistributionRequest>(request, options);}
public virtual ReplicationGroup CreateReplicationGroup(ReplicationGroup group){return replicationGroup;}
public virtual void DeleteVPCAssociation(RouteTable table){Delete(table.RouteTableRecordId, table.VpcAssociation);}
public ValueEval GetValueEval3D(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9, int arg10, int arg11, int arg12, int arg11, int arg12, int arg11, int arg12, int arg13, int arg13, int arg14, int arg15, int arg16){return GetValueEval3D(arg) + (arg12 * arg11 + arg12 + arg16 + arg12 + arg13 + arg14 + arg15 + arg16 + arg17 + arg18+ arg18+ arg19 + arg19 + arg19 + arg19 + arg19 + arg19 + arg19 + arg19 + arg19 + arg19 + arg19 + arg20 + arg21,
public virtual BatchPredictionBatchUpdateResult BatchPredictionBatchUpdate(BatchPredictionBatchUpdateRequest request){var options = new InvokeOptions();options.RequestMarshaller = BatchPredictionBatchUpdateRequestMarshaller.Instance;options.ResponseUnmarshaller = BatchPredictionBatchUpdateResponseUnmarshaller.Instance;return Invoke<BatchPredictionBatchUpdateResponse>(request, options);}
public virtual IField GetField(string name){return fieldMap[name];}
public virtual IList<IToken> GetTokens(int start, int end){return GetTokens(start, end);}
public override void Serialize(Object o){this._enclosing.Serialize(o);}
public CellRecord Clone(){return this._enclosing.DeepCopy();}
public override void put(float value){buffer.put(value);}
public DirectoryInfo CreateDirectory(string path, FileMode dirType) {if (pathType == FileMode.Empty){CreateDirectory(path);}DirectoryInfo existingDir = new DirectoryInfo(path);if (existingDir.Exists()){DirectoryInfo.CreateDirectory(existingDir);}DirectoryInfo.CreateIfMissing(pathType, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, false, false, false, false, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null,
public virtual IList<CapacityProvider> GetCapacityProviders(){return _capacityProviders;}
public virtual ISet<IToken> GetFollowingStates(){return ancestors;}
public virtual void SetPreservePositionIncrements(bool value){preservePositionIncrements = value;}
public Range(long start, long end){CheckRange(start, end);return this;}
public static DefaultAcsClient Create(AWSCredentialsProvider provider){return Create(provider, null, null);}
public virtual void removeAt(int index){System.Array.Copy(_names, index + 1, _names, index, _names.Length); index--;}
public virtual EBSEncryptionConfiguration GetEBSEncryptionConfiguration(EscherApp app){return encryption;}
public NameRecord(NameRecord rec){return rec;}
public override void End(){base.End();}
public override void Push(Context state){base.Push(state);}
public BulgarianStemFilterFactory(){return new BulgarianStemFilterFactory(this);}
public string format(int index){return format(index);}
public virtual void append(char ch){buffer.append(ch);}
public virtual MatchGroupMatchGroup information(MatchGroup matchgroup){return null;}
public virtual void SwitchTo(IToken state){SwitchTo(state.GetLexicalState());}
public virtual void Delete(TrafficPolicyInstance instance){if (instance!= null){Instance.Delete(instance);}}
public CellReference EvaluateCell(CellReference cr, IRowRecord row, IRowRecord or IRowRecord){return _cellReference;}
public void Append(byte b){if (m_buf.Length == m_buf.Length){Resize(m_buf.Length + 1);}m_buf.Length += b.Length;}
public virtual void AttachCertificate(X509Certificate certificate){loadBalancer.AttachCertificate(certificate);}
public SetTopicArnRequest(string topicArn){_topicArn = topicArn;_endpoint = null;}
public virtual NGit.Api.CleanCommand CreateCleanCommand(string cmd){return new NGit.Api.CleanCommand(cmd);}
public virtual void Initialize(){base.Initialize();}
public virtual int size(){return _size;}
public void Reset() {iterator = null;}
public override void Serialize(ObjectOutput out1){out1.Write(Serialize(this));}
public TreeFilter(TreeFilter treeFilter){this.treeFilter = treeFilter;}
public virtual UpdateBusinessReportScheduleResponse UpdateBusinessReportSchedule(UpdateBusinessReportScheduleResponse customizable_1){return UpdateBusinessReportSchedule(customizable_1, null);}
public bool Equals(FontRecord fontRecord){return fontRecord.Equals(fontRecord);}
public virtual DescribeResourceResponse DescribeResource(DescribeResourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeResourceRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeResourceResponseUnmarshaller.Instance;return Invoke<DescribeResourceResponse>(request, options);}
public virtual PromoteReadReplicaResponse PromoteReadReplica(PromoteReadReplicaResponse replicateReadReplicaResponse){return PromoteReadReplicaResponse(replicateReadReplicaResponse);}
public hyperlink(LinkType type){this.type = type;}
public java.util.NavigableSet<E> descendingSet(){return this.descendingSet();}
public DataRetrievalPolicy(AppRecord retrievalPolicy){this.retrievalPolicy = retrievalPolicy;}
public int valueAt(int index){return array[index];}
public override double Evaluate(double value){return base.Evaluate(value);}
public virtual UpdateSkillParameterResponse UpdateSkillParameter(UpdateSkillParameterResponse result){return UpdateSkillParameter(result.SkillId);}
public override string GetSignerName(){return "BearerTokenSigner";}
public virtual int position(){return view.position();}
public virtual E get(int index){return _array[index];}
public virtual void SetCountsByTime(long value){countsByTime = value;}
public bool empty(){return buffer.isEmpty();}
public virtual bool Expired(RoleSession session){return session.IsExpired();}
public virtual IList<Task> GetTasks(){return Sharpen.Collections.UnmodifiableList(GetTasks(null, null));}
public virtual IList<CacheEntry> GetList(){return new ArrayList<CacheEntry>(this);}
public virtual int GetIndex(int nameIndex){return names.Get(nameIndex);}
public vaultName { get; set; }
public FilterFilter RevFlagFilter(TermFlag flag){return new FilterRevFlagFilter(flag);}
public int get_high_ix(){return _high_ix;}
public virtual StatisticsReport GetDomainStatisticsReport(){return domainStatistics;}
public void setValue(object newValue){object3d.Set(this, newValue);}
public virtual void println(string b){println(m_sb.fget(b, b.Length - 1), b.Length);}
public virtual void AttachIamPolicy(IAMPolicy policy){appPolicy.AttachIamPolicy(policy);}
public override bool Equals(object o){if (o == this){return true;}return false;}
public DFA CurrentState{ get; internal set; }
public PipelineConfig Pipeline(PipelineConfig config){return this.Pipeline(config, null, null);}
public override void size(){buffer.size = size;}
public virtual string GetPath(int side){return side == Up? "" : "/", this.side.Of(side);}
public override void Read(Record record){_in.Read(record);_rc4.SkipTwoBytes();}
public DNSName(String dnsName){return DNSName(dnsName, 0, dnsName.Length);}
public override void Serialize(byte[] b, int offset){Serialize(b, offset, 4);}
public virtual void Add(E e){AddItem(e);}
public virtual DescribeInterconnectsResponse DescribeInterconnects(DescribeInterconnectsResponse result){return DescribeInterconnects(result.Interconnects, result.EndPoint);}
public ListQueuesRequest(string queuePrefix){return new ListQueuesRequest(queuePrefix, null);}
public virtual IPSet Update(IPSet set){return set;}
public virtual void DeleteBatchSnapshots(List<Snapshot> snapshots){BatchDeleteSnapshotsRequest batch = new BatchDeleteSnapshotsRequest(snapshots);}
public Latvian StemFilter(TokenStream input){return new LatvianStemFilter(input);}
public static Calculator Create(Object o){return new Calculator(o);}
public virtual void Describe(){this._enclosing.Describe(null);}
public virtual IList<string> GetAdminAccountIDsForOrganization(){return listAdminAccountIDsForOrganizationInternal(null, null, null);}
public virtual void PushTerm(Term term){stack.Push(term);}
public override int get(){return this.getInt();}
public virtual void DeleteGatewayResponse(){GatewayResponse _gatewayResponse = null;_gatewayResponse = null;}
public void DeleteNodegroup(Nodegroup group){Delete(group.GetPath(0), group.GetPath(0));}
public void RemoveTop(E element){_top = element;}
public bool IsRelevant(string docName){return docName.Equals(this.query.docName);}
public virtual void Modify(Snapshot snapshot){this._enclosing.Modify(snapshot.Attributes);}
public virtual E remove(E @object){lock (this._enclosing){int oldSize = this._enclosing._size;this._enclosing.remove(oldSize);this._enclosing._size = oldSize;this._enclosing.notifyDataSetRemoved();return this._enclosing._size!= oldSize;}}
public virtual void DescribeReservedInstances(){DescribeReservedInstancesInternal(false);}
public void Reset() {iterator = null;}
public virtual Analyzer set_analyzer(Analyzer analyzer){this.analyzer = analyzer;}
public virtual void SetSortedFields(IList<string> fields){m_sortedFields = fields;}
public string GetAccessSecret(){return secret;}
public static bool IsEqual(int x, int y){return x == y && y == z;}
public virtual byte[] GetCachedByteArray(){return _le.GetCachedByteArray();}
public void WriteByte(int b){WriteByte(b & 0xff);}
public virtual void Update(Workforce existing){Workforce = existing;}
public override string ToString(){return "missing";}
public virtual void Update(){lastDocID = -1;wordNum = -1;}
public virtual void Reset(E e){throw new System.NotImplementedException();}
public bool? IsSet(int index){this.index = index;}
public override bool Equals(object context){if (context == null){return false;}return true;}
public virtual string ToString(){return GetCanonicalName();}
public string GetName(){return GetComponentName();}
public override double Evaluate(double expression, int row, int column){return 0.0f * expression * this.R * (expression * this.R * expression *.N) + (expression *.N * expression *.N) + (expression *.N * expression *.N) + (expression *.N * expression *.N) + (expression *.N * expression *.N) + (expression *.N * expression *.N) + (expression * expression* this.R * expression* this.R * expression*.N) + (expression *.N * expression * this.R * (expression * this.N) + (expression *.N) + (expression *.N) +(expression *.N) +(expression *.N) +(expression *.N) +(expression *.N) +(expression *.N) +(expression *.N) +(expression *.N) + (expression.N) + (expression.N
public virtual string ToString(IFormatProvider provider){return GetCanonicalName(provider);}
public virtual SemanticContext EvaluatePrecedenceTransition(SemanticContext other){return other;}
public virtual bool print(bool b){return b;}
public virtual void Deregister(){base.Deregister();}
public virtual void DeleteLogs(List<LogEntry> logs){foreach (LogEntry e in logs){Delete(e.GetKey(), e.GetValue());}}
public override FileDescriptor GetFileDescriptor(){return fileDescriptor;}
public GeohashPrefixTree(Context context, int maxLevels){return GeohashPrefixTree(context, maxLevels);}
public override string ToString(){return "0x" + base.ToString(CultureInfo.InvariantCulture);}
public virtual bool IsConflicting(ISet<E> other){return false;}
public override void Decode(int n){Decode(n, m_buf, _stndStart, _stndLength);}
public override void fill(object[] values, int value, int arrayOffset, int arrayOffset, int arrayOffset, int arrayOffset) {for (int i = 0; i < values.Length; i++){values[i] = values[i];}}
public virtual int EstimatedNumberOfUniqueValues(IFilter filter){return _filter.EstimatedNumberOfUniqueValues();}
public override int Evaluate(int row, int column){return _engine.Evaluate(row, column);}
public void Clear(){_generator.Clear();}
public virtual void ModifyDBParameterGroup(int groupIndex){throw new System.NotImplementedException();}
public override bool IsWithin(int start, int end){return false;}
public virtual string GetTerminalState(){return terminal.state;}
public virtual void Revert(ICommit commit){Commits.AddItem(commit);}
public virtual int previous(char c){return index(c, 1);}
public virtual string GetRefUpdateDetails(){return this.GetRefUpdateDetails(null);}
public bool Contains(CellRangeAddress cellRangeAddress){return book.ContainsCellRangeAddress(cellRangeAddress);}
public virtual string Pack(int capacity){return libcore.io.SizeOf(backingArray) + "-" + backingArray.Length + " elements;}
public virtual int GetPreviousSentenceIndex(){return index;}
public virtual string[] GetSourceRepositoryRefs(){return sourceRepoRefs;}
public virtual void PushNewRecursionContext(RecursionContext c){pushContext(c);}
public IIdentitySet SendEmailTo(IIdentity identity){var options = new InvokeOptions();options.RequestMarshaller = SendEmailToRequestMarshaller.Instance;options.ResponseUnmarshaller = SendEmailToResponseUnmarshaller.Instance;return Invoke<IIdentitySet>(identity, options);}
public LexerAtnDecodingConfiguration SetLexerAtnDecodingConfiguration(LexerAtnDecodingConfiguration config){this.configuration = config;}
public int Count(int start, int end){return Count(start, end);}
public override void Serialize(byte[] b, int offset){if (_position == _limit){_limit = 0;_position = _position;_buf = b;_position += _position;_limit = _limit;_end = _end;}}
public override void close(){_writer.close();}
public virtual void print(string @string){print(@string);}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(HCenter);}
public java.nio.CharBuffer allocate(int capacity_1){return _java.nio.CharBufferProxy.Wrap(alloc(capacity_1));}
public virtual string ToString(){return GetCanonicalName();}
public ConcurrentRefUpdateException(string message, int returnCode){throw new System.NotImplementedException();}
public virtual int count(List<Range> ranges){return list.size();}
public void SetCoordinates(long x, long y, int width, int height){for (int i = 0; i < width; i++){if (i > 0){SetGeometry(x, y, width, height);}}}
public virtual double sum(double[] values){return sum(values, 0, values.Length);}
public override bool IsContainer(RecordId recordId){return recordId in CONTAINER_RECORD_IDS;}
public FontStyle(FontStyle style){this.fontStyle = style;}
public void DeleteBusinessReportSchedule(BusinessReportSchedule schedule){_schedule = schedule;}
public virtual string GetShortMessage(){return _rc4.XorshortMessage;}
public BarRecord(RecordInput in1){return this.ReadFields(in1);}
public virtual int Sign(double value){return Sharpen.Util.Sign(doubleValue(value));}
public virtual int getProgress(){return progress;}
public override string ToString(){return "0x" + (long)toHexString(fromString());}
public virtual CherryPickResult Create(RevCommit newRevCommit){return (CherryPickResult)Create(newRevCommit, newRefs);}
public override string ToString(){return string.Format("{0} is a reserved word (0x{0:X})", this.canonicalName, this.canonicalNameTag) ;}
public virtual BatchDetectSentimentResponse BatchDetectSentiment(BatchDetectSentimentRequest request){var options = new BatchDetectOptions();options.DetectSentimentRequest = BatchDetectSentimentRequest.Instance;options.DetectSentimentResponse = BatchDetectSentimentResponse.Instance;return BatchDetectSentimentResponse.Instance;}
public java.util.regex.Pattern patternFrom(string text){return new java.util.regex.Pattern(this.patternFromInternal(text));}
public virtual void print(float v){print(v);}
public LabelCreator(LabelCreator arg0, ILabelCreator arg1, ILabelCreator arg2, ILabelCreator arg3, ILabelCreator arg4, ILabelCreator){return new LabelCreator(arg0, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg12, arg13, arg13, arg14, arg15, arg16, arg17, arg18, arg18, arg19, arg19, arg19, arg19, arg18, arg19, arg20, arg20, arg20, arg20, arg20, arg20, arg21, arg22, arg22, arg22, arg22, arg22, arg22, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32
public ICell next_cell(){return this.next_cell();}
public virtual void DetachVPNGateway(){_gateway = null;}
public string ToString(){return Query(null, null);}
public override void Serialize(ILittleEndianOutput out1){out1.Write(field_1_windowED);}
public int compareRemaining(int remaining){return _buf.compareTo(remaining);}
public virtual void UpdateScheduledUpdateGroupAction(ScheduledUpdateGroupAction action){UpdateScheduledUpdateGroupAction(action);}
public SendingAttribute CreateOrUpdateSendingAttribute(Account account){var options = new InvokeOptions();options.RequestMarshaller = SendingAttributeRequestMarshaller.Instance;options.ResponseUnmarshaller = SendingAttributeResponseUnmarshaller.Instance;return Invoke<SendingAttribute>(account, options);}
public virtual NGit.Api.Project CreateProject(){return CreateProject(null, null);}
public virtual void Delete(NGit.Archive archive){this.archive = archive;this.fs = null;}
public virtual bool offer(E e){return offer(e)!= null;}
public ConsumeContentSourceTask(ContentSource task){_consumeContentSourceTask = task;}
public override void Set(byte[] data){Array.Copy(data, 0, _buf, _pIndex, data.Length); _pIndex = data.Length;}
public virtual void CommitCherryPick(){CherryPickCommand c = (CherryPickCommand)Open();c.AddCommand(new CommitCherryPick());}
public virtual double max(double[] doubles){return m_maximum(doubles, 0, doubles.Length);}
public ImageScanRequest(int capabilities){this.capabilities = capabilities;}
public DateTime set_date{get_date = date;}
public Dashboards Create(DashboardsRequest request){var options = new DashboardsOptions();options.RequestMarshaller = DashboardsRequestMarshaller.Instance;options.ResponseUnmarshaller = DashboardsResponseUnmarshaller.Instance;return Invoke<Dashboards>(request, options);}
public RuleReceiptRule(ReceiptRule rule): base(rule){this.rule = rule;return this;}
public override java.nio.LongBuffer getLongBuffer(){return new java.nio.ReadOnlyLongBuffer(this._enclosing);}
public virtual Object Clone(){return this;}
public virtual int ceiling(int value){return (value >= 0)? 1 : 0;}
public virtual void SendVoice(string voice){Toast.Send(voice, "voice");}
public void WriteShort(int v){WriteShort(v);}
public virtual void ModifyInstanceFleet(InstanceFleet instance){if (instance.fleetId!= null){instance.fleetId.IsFine =!instance.fleetId;}else{instance.fleetId = null;}}
public void SetDocument(string @in){name = @in;}
public void reset(){current = null;}
public virtual reservedDBInstanceOfferings(){return reservedDBInstanceOfferings.Values;}
public override void copy(){backingArray[offset + _position++] = buffer.get() [offset];}
public virtual void DeleteComment(Comment comment){Delete(comment.DocId);}
public virtual int WorkdaysBetween(DateTime start, DateTime end){return WorkdaysBetween(start, end);}
public virtual string GetValueFiller(){return _valueFiller;}
public void Connect(PipedReader input){this.Connect(input);}
public long? Get(SectionName section, string name){if (SectionName!= null){return SectionName.Get(section, name);}return Value;}
public override long Size(){return _size;}
public virtual IList<DetectJob> GetKeyPhrases(){return keyPhraseDetectJobs.GetList(this);}
public virtual UpdateDomainEntryResponse UpdateDomainEntry(UpdateDomainEntryResponse domainEntryResponse){return UpdateDomainEntry(domainEntryResponse);}
public DeleteVaultRequest(string vaultName){var request = new DeleteVaultRequest();request.VaultName = vaultName;request.UseQueryString = true;return request;}
public virtual IErrorMessage GetErrorMessage(IToken token, IList<ITokenError> errorDisplay){return errorDisplay.GetErrorMessage(token, errorDisplay);}
public override bool IsRowBlockRecord(RecordId id){return false;}
public string GetWildcardName(){return "*";}
public virtual CreateCloudFormationStackResponse CreateCloudFormationStack(CreateCloudFormationStackRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateCloudFormationStackRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateCloudFormationStackResponseUnmarshaller.Instance;return Invoke<CreateCloudFormationStackResponse>(request, options);}
public virtual long GetSize(){return fileSize.GetSize();}
public bool Equals(HSSFRichTextString str){if (str.HSSFRichTextString!= null){if (str.HSSFRichTextString.BOMTYPE.Equals(HSSFRichTextString.BOMTYPE)){return false;}return true;}
public virtual GetCustomerByPhoneNumberRequest GetCustomerByPhoneNumberRequest(): base(){return new GetCustomerByPhoneNumberRequest(new CustomersInfo());}
public override bool IsHungarianStemmer(object o){if (o is HungarianStemmer){return true;}return false;}
public override void putChar(char c){if (m_buf[m_index + 1] == c){throw new System.IndexOutOfRangeException("value " + c + " is out of bounds for index " + m_buf[m_index + 1]);}m_buf[m_index++] = c;}
public virtual Significand GetSignificand(){return significand;}
public virtual IList<ReservedDBInstance> GetReservedDBInstances(){return reservedDBInstances;}
public virtual void AbortUpload(DocumentVersion documentVersion){AbortDocumentVersion(documentVersion);}
public virtual int nextToken(){return lex.next();}
public virtual StemmerType GetStem(int sequence){return _lucene.Runtime.Substring(sequence, 0, sequence.Length);}
public LexerATNConfig Initialize(LexerATNConfig config){this.config = config;}
public void Open(Closer closer){Open(closer);}
public virtual void PrintReservedInstanceIDs(List<string> reservedInstanceIDs){PrintReservedInstanceIDs(reservedInstanceIDs);}
public override FreeRefFunction GetFunction(String name){return _freeRefFunctions.Get(name);}
public virtual string GetNotokenFoundExceptionAsString(){return "notoken found";}
public virtual ContentModerationDetail ContentModerationDetail(){return ContentModerationDetail;}
public void Encode(char b){Encode(b, 0, b.Length, 0);}
public override void Serialize(byte[] b, int offset, int length){Serialize(b, offset, length);}
public virtual string first_token(s){return string.Empty;}
public IAMPolicyAssignment GetIamPolicyAssignmentDetails(){return IAMPolicyAssignmentDetails{ReadEntry();}
public virtual VoteOnProposalResponse VoteOnProposal(ProposalResponse proposal){return VoteOnProposal(proposal);}
public override int ReadShort(){return delegate1.ReadShort();}
public bool IsWithin(double value){return value >= minValue && value <= maxValue;}
public virtual float get(int state){return state * _state;}
public override java.nio.ShortBuffer compact(short c){return compact(c, 0, c.remaining());}
public IEnumerator<V> GetEnumerator(){return this._enclosing.GetEnumerator();}
public virtual void DeleteLaunchTemplates(){DeleteLaunchTemplates(null);}
public virtual string Referencestring(int referenceCount){return (_referenceCount == 0)? "0" : _referenceCount.ToString();}
public virtual Solutions GetSolutions(){return _solutions;}
public virtual void IncrementReplicationCount(int capacity){incrReplicationCount(capacity);}
public IClientAnchor CreateAnchor(){return anchor;}
public GetSearch request(SearchRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetSearchRequestMarshaller.Instance;options.ResponseUnmarshaller = GetSearchResponseUnmarshaller.Instance;return Invoke<GetSearch>(request, options);}
public DVRecord Read(RecordInputStream in1){return ReadDVRecord(in1, null);}
public string getScheme();return scheme;}
public virtual void SetIndexBufferSize(int bufferSize){indexBufferSize = bufferSize;}
public void Serialize(TextWriter out1){out1.Write(this.GetFontString());}
public virtual void visibilityChanged(object message_1){visibility = message_1.isVisible();}
public void Clear(){_enclosing.Clear();}
public virtual UserAgent GetUserAgent(){return userAgent;}
public virtual void ModifyClusterSnapshotAttribute(){nodeAttributes = new int[0];}
public override string GetMultiFields(){return GetNativeField().GetMultiFields();}
public virtual GetOperationResponse GetOperation(GetOperationRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetOperationRequestMarshaller.Instance;options.ResponseUnmarshaller = GetOperationResponseUnmarshaller.Instance;return Invoke<GetOperationResponse>(request, options);}
public virtual void add(object o){iterator.add(o);end++;}
public override void Read(Record record){_in.Read(record);_size = record.Size;}
public virtual void DeleteRuleVersion(int ruleNumber){ruleNumbers.Remove(ruleNumber);}
public virtual IList<RevertedReference> GetRevertedReferences(){return _revertedReferences;}
public virtual string ToString(){return GetType().FullName;}
public virtual DescribeSnapshotAttributeRequest DescribeSnapshotAttributeRequest(string snapshotId, string attributeName){return DescribeSnapshotAttributeRequest(snapshotId, attributeName, null, null);}
public ESSFAnchor(IPoint2D point2d){ESSFAnchor(point2d, point2d);return new ESSFAnchor(this, point2d, point2d.X, point2d.Y, point2d.Z);}
public virtual bool isEmpty(){return list.isEmpty();}
public HSSFListener(IChildHandler listener){hssf_child_handler = listener;}
public override void putDouble(double value){buffer.putDouble(value);}
public virtual void DescribeReservedNodes(){DescribeReservedNodesAsync(null, null, 0);}
public virtual string ToString(){return GetCanonicalName();}
public virtual IList<Type> GetLifecycleHookTypes(){return Sharpen.Collections.UnmodifiableList(lifecycleHooks);}
public HSSFConditionalFormattingRule(int ruleIndex){HSSFConditionalFormattingRule other = (HSSFConditionalFormattingRule)At(ruleIndex);this.ruleIndex = ruleIndex;}
public override WordFilter Create(WordFilter wordfilter){return new KeepWordFilter(wordfilter);}
public static IPs information { get; private set; }
public virtual AmazonS3Resources DescribeS3Resources(){return AmazonS3Resources.ListResources(this.RequestMarshaller.Instance);}
public bool Success(){return _conversionState.Successful;}
public java.lang.StringBuffer replace(char[] s, int index, char[] t){java.lang.StringBuffer.Wrap(this).replace(s, index, t);return this;}
public override int GetByte(){return delegate1.GetByte();}
public virtual VpcAttachment CreateVpcAttachment(VpcAttachmentConfig config){return new VpcAttachment(this, config);}
public bool canEncode(char c){return true if this encoder canEncode(c);}
public string at(int index){return Sharpen.Runtime.RuleNames[index];}
public virtual void SetExecuteFlag(bool b){exec = b;}
public override string ToString(){return base.ToString() + ":" + this.GetType().Name + ":" + this.GetValue();}
public virtual List<OnPremises> GetOnPremises(){return Sharpen.Collections.UnmodifiableList(OnPremises.Values);}
public string URI { get; set; }
public FileOutputStream CreateFileOutputStream(string path){return new FileOutputStream(path, FileMode.Create, path);}
public LengthFilter(int length){return new LengthFilter(this, length);}
public override void Fill(BytesRef bs){base.Fill(bs);}
public bool fill(bool[] array, int value, int arrayIndex, object value1, object value2, object value3, object value4, object value5, object value6){return fill(array, value, value, value2, value3, value4, value5, value6, value7, value8, value9, value10, value11, value12, value18, value19, value20, value21, value22, value22, value22, value22, value22, value22, value22, value22, value22, value22, value22, value22, value3, value3, value4, value5, value5, value6, value7, value7, value7, value7, value7, value7, value7, value7, value7, value7, value7, value7, value7, value7, value7, value7, value7, value7, value7, value7, value7, value7, value7, value7, value7, value7, value7, value7, value7, value7, value7, value7, value7, value7, value7, value7
public void RemoveAll(){RemoveAll(true, true);}
public virtual void UpdateUserSettings(UserSettings settings){base.UpdateUserSettings(settings);}
public override String ToFormulaString(){return "";}
public virtual int Choose(int nth){return choose(n);}
public JapaneseBaseFormFilter Create(ITokenStream input){return new JapaneseBaseFormFilter(input);}
public virtual VPNRoutes GetClientVPNRoutesResponse GetClientVPNRoutesResponse(){return VPNRoutesResponse(null, null, null);}
public Anchor CreateAnchorFromEscherContainerRecord(EscherContainerRecord escherContainerRecord){return CreateAnchor(escherContainerRecord, escherContainerRecord.field_1_escher_container_record);}
public virtual int Stem(int doc, long start, long length){Begin:doc,EndOfLine:start,EndOfLine:end,Space:Space;return Stem(doc, start, length);}
public override bool Equals(object o){if (o == this){return true;}return false;}
public virtual int GetPort(){return port;}
public virtual NGit.Storage.File.Record GetRecord(){return this._enclosing.GetRecord(this.name);}
public virtual void UpdateFolder(File file){Update(file, null);}
public virtual void addURI(string value){list.Add(value);}
public override string ToString(){return ScoreAndShardIndex.ToString() + ":" + ShardIndex;}
public virtual float Evaluate(double value){return value;}
public override string ToString(){return this.GetType().Name + " " + this.GetNote().GetDescription();}
public virtual LexiconInfo GetLexiconInfo(int lexiconIndex){return _lexiconInfo;}
public virtual List<SentimentDetectionJob> GetSentimentDetectionJobs(){return null;}
public virtual void Delete(string name){Delete(name, true);}
public virtual void Update(EscherScript b){Update(b.current, b.currentDir, b.currentName, b.currentScript);}
public ParseException(){}
public virtual string GetFullMessage(){return GetFullMessage(false);}
public virtual IList<IToken> GetFieldsAt(int field_index){return GetFields(field_index, null);}
public virtual ListTablesResponse ListTables(){return ListTables(null, null, null);}
public override int size(){return this._enclosing._size;}
public override string ToString(){return "0x" + this.GetType().Name + " " + this.GetValueOf("F");}
public virtual ListDeploymentsResponse ListDeployments(){return deployments;}
public Spot Fleet Cancels(Spot Fleet Request){var options = new InvokeOptions();options.RequestMarshaller = SpotFleetRequestMarshaller.Instance;options.ResponseUnmarshaller = SpotFleetCancelResponseUnmarshaller.Instance;return Invoke<Spot Fleet Cancel>(request, options);}
public virtual AddJobFlowStepRequest PipelineStepRequest(string name, string description){return AddJobFlowStepRequest(name, description, "jobFlowStepRequest(string)");}
public InterpreterRuleContext Create(Antlr4.Runtime.RuleContext parentRuleContext){return (parentRuleContext == null)? new InterpreterRuleContext(parentRuleContext, this) : new InterpreterRuleContext(parentRuleContext, this);}
public virtual void Negate(){this.negate = true;this.precedence = this.precedence;}
public String GetFormat(int formatIndex){return formatString[formatIndex];}
public virtual void append(string str){append0(str);}
public void EndBlockRecord(RecordStream in1){_in1.ReadByte();}
public ProgressMonitor(ProgressMonitor other){this.other = other;}
public virtual UpdateIntegrationResponse UpdateIntegration(UpdateIntegrationRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateIntegrationRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateIntegrationResponseUnmarshaller.Instance;return Invoke<UpdateIntegrationResponse>(request, options);}
public void Stop(){Timer.Stop(this);}
public virtual void TerminateInstance(string instanceId){terminateInstance(instanceId, null);}
public virtual void Publish(int revision){Publish(revision, null);}
public StandardSyntaxParser(){Initialize(null, null);}
public virtual void SetDefaultTermField(string field){m_default_term_field = field;}
public override void write(char b){throw new System.NotImplementedException();}
public StringRecord(RecordInputStream in1){int length;RecordInputStream in1 = _in1.ReadShort();int longs = in1.ReadUpto();int remaining = in1.ReadShort();if (remaining > 0){for (int i = 0; i < remaining; i++){StringRecord record = _in1.ReadRecord();if (record.RecordType == RECORD_TYPE_STRING){if (remaining > 0){_in1.ReadShort(remaining);break;}int l = _in1.ReadShort();}else{_in1.ReadShort();}return record;}
public void setValue(E value){setValue(value);}
public virtual string GetState().GetState().GetStateName(); return GetState().GetStateName();}
public override java.nio.Address copy(){return copy(this.m_address, this.m_addr.get());}
public virtual void Grow(byte[] b){int n = b.Length;do{Buffer.BlockCopy(b, 0, b, 0, n);n += n;}}
public override void Do(ITokenStream tokenStream){_tokenStream = tokenStream;}
public Packed64SingleBlock Create(int valueCount, int bitsPerValue){return Create(valueCount, bitsPerValue, 0);}
public override void Fill(E value){base.Fill(value);}
public void DisablesVPCClassicLinkDNS(void){DisablesVPCClassicLinkDNS(null);}
public hyperbolic_hyper_params = null;
public override void ResetSize(int capacity){current.capacity = capacity;}}
public override bool inContext(ThreadContext other){return current.isInContext(other);}
public virtual int lookup_value(int source_row, int column){return lookup_value(source_row, column);}
public virtual void append(object o){append(o);}
public override java.nio.FloatBuffer compact(java.nio.FloatBuffer c){return compact(c.getNative().FloatBuffer, c.getLowReference());}
public virtual IList<Option> GetOptions(string option){return Options;}
public void ClearFormulaEntry(){_formulaEntry = null;}
public override TokenStream CreateOverrideTokenStream(TokenStream input){return new StemmerOverrideTokenStream(input);}
public java.io.Reader slice_1_start and @end_start are set automatically by calling{@link java.io.ReaderSlice#set_reader_slice_position(position);}
public virtual void SetExternalName(string externalName){this.externalName = externalName;}
public void AddCharacterWidths(int widths){for (int i = 0; i < widths; i++){AddCharacterWidth(widths[i]);}}
public faceDetectionStart(){lastFaceIndex = -1;wordNum = -1;}
public virtual long Decode(long value){return BitConverter.Int64BitsToDouble(value);}
public virtual IList<string> GetSchemaARNs(){return schema.GetArns();}
public virtual UsagePlan GetUsagePlan(){return usagePlan;}
public override void Apply(TokenStream stream){Apply(stream, null);}
public virtual void Remove(){this._enclosing.RemoveComponent(this);}
public ValueAt(int row, int column){return _expression.Evaluate(row, column);}
public override void CreateInstance(){base.CreateInstance();}
public virtual E get(object key){return get(key, null);}
public virtual IList<Queue> ListAll(){return Sharpen.Collections.UnmodifiableList(this.ListAll()).AddItem(this);}
public virtual AttributesSnapshot GetAttributes(){return snapshot.GetAttributes();}
public java.util.Iterator<char>(){return new java.util.Hashtable<char, char>(this._enclosing);}
public override string ToString(){return field.GetName().Name;}
public virtual void Purchase(int capacity, int capacityCount, reservedCacheNode... reservedCacheNodes){Purchase(capacityCount, 0, reservedCacheNodes);}
public virtual void ResendContactReachabilityEmail(){_reachabilityEmail = null;}
public virtual void SetUser(string user_1){user_1 = user_1;}
public override void SetMergeAlgorithm(MergeAlgorithm algorithm){this.m_mergeAlgorithm = algorithm;}
public virtual void AppendGitLinkCommit(string message){AppendText(message, 0, GITLINK_HEAD);}
public virtual void ImportSnapshot(){_enterpriseInstance.ImportSnapshot(null, null);}
public CloudWatch Logging Option { get; private set; }
public ExtendedPivotTableViewFields Read(RecordInput in1){int field_1_extended_pivot_table_view_flag = _record.GetField_1_extended_pivot_table_view_flag();field_2_extended_pivot_table_view_flag(_record, field_1_extended_pivot_table_view_flag);}
public PLSRecord ReadNext(PLSRecord rec){return rec;}
public override string ToUTF32(){return ToUTF32(this);}
public ExternalWorkbook References(ExternalWorkbook externalWorkbook){return (_externalWorkbook == null)? null : _externalWorkbook.CreateExternalWorkbook(externalWorkbook);}
public virtual string ToString(){return GetCanonicalName();}
public virtual LaunchTemplate CreateLaunchTemplate(LaunchTemplateSpec spec){return (LaunchTemplate)CreateTemplate(spec);}
public virtual bool StartsWith(string prefix, int start){return startsWith(prefix, start);}
public virtual void Delete(){_connection = null;}
public virtual void print(int v){if (v == 0){throw new System.ArgumentException("v is never printed");}print(v);}
public virtual int PronunciationOf(int doc){return _pronunciationOf(doc, 0);}
public virtual void write(java.io.OutputStream outputStream){throw new System.NotImplementedException();}
public virtual void AllocateHosts(){_hostModel.AllocateHosts(this);}
public CreateLogStreamsRequest(string logGroupName, string logStreamName){return CreateLogStreamsRequest(logGroupName, logStreamName, null);}
public virtual CreateCloudPhotoSearchPhotosRequest CreateCloudPhotoSearchPhotosRequest(CloudPhotoSearchPhotosRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateCloudPhotoSearchPhotosRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateCloudPhotoSearchPhotosRequestUnmarshaller.Instance;return Invoke<CreateCloudPhotoSearchPhotosRequest>(request, options);}
public CalcModeRecord(){return (CalcModeRecord)_in.ReadRecord();}
public virtual DeleteDBInstanceResponse DeleteDBInstance(DeleteDBInstanceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDBInstanceRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDBInstanceResponseUnmarshaller.Instance;return Invoke<DeleteDBInstanceResponse>(request, options);}
public virtual Permissions GetPermissions(DataSource dataSource){return dataSource.GetPermissions(dataSource);}
public proposal_1_new(ProposalSpec_4element, int start, int end){if (start >= end){throw new InvalidOperationException("Start of proposal before end of end");}return start;}
public ChartRecord CreateChartRecord(Record input){return CreateChartRecord(input, 0, 0);}
public virtual void ContinueUpdateRollback(){m_rollbackCount = 0;}
public String ResolveName(Object o){return ResolveName(o.GetName());}
public virtual void AddField(string name, int value){fields[name] = new Byte(value);}
public override bool Equals(object o){if (o == this){return true;}return false;}
public void connect(java.io.PipedInputStream input){connect(input);}
public virtual void SetActiveReceiptRuleSet(ReceiptRuleSet ruleSet){_activeReceiptRuleSet = ruleSet;}
public virtual void Stop(){Cluster c = GetCluster(c.GetClusterName());c.Stop();}
public virtual void Grow(int size){for (int i = size; i < size; i++){System.Array.Copy(array, i, array, i.ArrayOffset + i, array.Length - i);i.Length = i.Length;}}
public virtual E peek(E e){return peek(e.head, e.tail, e);}
public void DeleteStack(StackInstance[] stackInstances){Delete(stackInstances, 0, stackInstances.Length);}
public android.graphics.drawable.ProgressBar drawable { get; set; }
public virtual void Push(RefSpec spec){push.AddItem(spec);}
public virtual MergeChunk.ConflictState GetConflictState(){return conflict;}
public virtual IList<AccessControlRule> GetAccessControlRules(){return list.AsAccessControlRules();}
public virtual void write(java.io.OutputStream outputStream){throw new System.NotImplementedException();}
public virtual E get(E key){return get(key, E.NULL_ON_FAILURE);}
public virtual void SetGroupDocsOffset(long offset){groupDocsOffset = offset;}
public virtual IFieldConfig GetFieldConfig(string field){return null;}
public virtual void SetDeleteBranches(string[] names){m_deleteBranches = names;}
public override char get(int index){return buf[index].get(this);}
public virtual void remove(){lock (this._enclosing){int oldSize = this._enclosing._size;this._enclosing.remove(this);this._enclosing._size = oldSize;this._enclosing.notifyDataSetRemoved();this._enclosing.notifyDataSetRemoved();this.declosing._size = oldSize;this.declosing._size = oldSize;}}
public virtual string[] GetReverseEntries(string referenceName){return GetReverseEntries(referenceName, true);}
public virtual void add(E element, int index){object[] newElements = new object[elements.Length + 1];System.Array.Copy(elements, 0, newElements, 0, elements.Length);elements[index] = element;elements = newElements;}
public virtual string{get; set; }
public virtual bool isEmpty(){return list.isEmpty();}
public override string Format(int n){return Format(n, 0);}
public override void putShorts(short[] array, int arrayOffset, int arrayOffset, int arrayOffset, int arrayOffset, int arrayOffset, int arrayOffset, int arrayOffset, int arrayOffset, int arrayOffset, int arrayOffset, int arrayOffset, int arrayOffset, int arrayOffset, int arrayOffset, int arrayOffset, int arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset);arrayOffset = 0;int offset = 0; for (int i = 0; i < arrayOffset; i++){putShort(arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffsetOffset);}
public virtual void DeleteAddressBook(AddressBook book){_addressBook = book;}
public virtual IRectangle GetCenter(IRectangle rectangle){return center;}
public bool Equals(EscherComplexProperty property){return _escher.Equals(property.GetRawValue());}
public override TokenFilter Create(int capacity){return base.Create(capacity);}
public virtual Endpoint Get(string endpoint){return null;}
public override java.nio.ShortBuffer duplicate(){return duplicate(this)? duplicate(this) : this;}
public override float Evaluate(int row, int column){return base.Evaluate(row, column);}
public void ReadChartStartBlockRecord(ChartStartBlockRecord rec){ReadShortRecord(rec);}
public DisablesAutoRenewingOfADomainException(){throw new System.NotImplementedException();}
public BinaryFilter Create(IList<Filter> filters){return Create(filters, 0, filters.Count);}
public virtual IList<User> GetUsers(){return Sharpen.Collections.UnmodifiableList(users).Values{ id, username };}
public virtual IList<Flow> GetFlowsForContact(){return contactFlowInstances.GetFlowsForContact();}
public void DeleteHostedZone(HostedZoneRecord zone){_zone = zone.HostedZoneRecord;}
public override bool Commit(){return false;}
public int get_alt(){return _alt;}
public virtual UpdateCampaignResponse UpdateCampaign(UpdateCampaignRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateCampaignRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateCampaignResponseUnmarshaller.Instance;return Invoke<UpdateCampaignResponse>(request, options);}
public override Type GetRecordType(){return record.GetClass();}
public POST(string path){_path = path;}
public virtual IErrorMessage GetErrorMessage(string s){IErrorMessage error = GetErrorMessage(s);return error;}
public RegistrantProfileRealNameVerificationService(RequestParameters parameters){_parameters = parameters;}
public virtual ExtRstsComparer compare(ExtRst other){return other.compare(null);}
public virtual Entry Clone(){return (Entry)this.CloneViaReserialise();}
public virtual void UnregisterURI(string uri){pushURIList.Remove(uri);}
public (bool)precedence = false;}
public virtual bool IsRenameDetectionEnabled(){return renameDetectionEnabled;}
public void RemoveFacet(Facet facet){if (facet!= null){FacetManager.Remove(facet.Object);}this.facet = null;}
public virtual ICollection<BundleEntry> GetWorkspaceBundles(){return bundles;}
public virtual void setValue(V value){lock (this){object[] newValues = new object[values.Length + 1];System.Array.Copy(values, 0, newValues, 0, values.Length);values[values.Length] = value;}}
public override String Value(){return Convert.ToString(this);}
public RequestValidator(Action action){this.action = action;}
public virtual string ToString(){return GetCanonicalName();}
public void DumpDrawingGroupRecords(List<DrawingGroupRecord> records){DumpDrawingGroupRecords(records);}
public virtual void clearLastModified(){clearInternal();}}
public virtual IntervalSet SetInterval(IntervalSet interval){this.interval = interval;}
public virtual void SetMoreType(InlineFragment other){m_more = other;}
public virtual GetRateResponse GetRate(GetRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetRequestMarshaller.Instance;options.ResponseUnmarshaller = GetRequestResponseUnmarshaller.Instance;return Invoke<GetRateResponse>(request, options);}
public virtual void CreateSnapshot(){this._enclosing.CreateSnapshot();}
public virtual InsightRule Get(int id){return rule_1_insight;}
public virtual PurchaseReservedNodeResponse PurchaseReservedNode(PurchaseReservedNodeResponse response){return PurchaseReservedNode(response);}
public virtual StepDetail GetStepDetail(){return detail;}
public virtual void Clear(){this._enclosing.Clear();}
public virtual NGit.Storage.File.PasswordRecord GetPasswordRecord(){return this;}
public override long Write(){return delegate1.Write(ByteConverter.ConvertToDouble(outRaw));}
public override ObjectId GetObjectId(){return null;}
public void DeleteVpcPeeringConnection(string peeringConnectionName){_vpcPeeringConnections.Remove(peeringConnectionName);}
public virtual AccountAttributes DescribeAccountAttributes(){return AccountAttributes;}
public override List<DeploymentStrategy> GetDeploymentStrategies(){return deploymentStrategies;}
public virtual DescribeAutoScalingGroupsResponse DescribeAutoScalingGroups(DescribeAutoScalingGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeAutoScalingGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeAutoScalingGroupsResponseUnmarshaller.Instance;return Invoke<DescribeAutoScalingGroupsResponse>(request, options);}
public virtual char get(){return _char;}
public virtual List<TransitGateway> GetTransitGateways(){return transitGateways;}
public virtual Comment CreateComment(string text){return null;}
public virtual VersionCollection GetVersions(){return GetVersionsInternal(null);}
public virtual void Disassociate(TrialComponent component){this._enclosing.Disassociate(component);}
public override bool EndOfRowBlock(ID id){return false;}
public ValueEval GetAreaEval(){return _areaEval;}
public override void SetMergePolicy(MergePolicy @policy){this.m_mergePolicy = @policy.Clone();}
public Rule.CreateOrUpdateObject(InsightRule rule){if (rule == null){throw new ArgumentNullException("rule");}this.rule = rule;}
public String CreateSafeSheetName(ISheetReferenceSheet1 sheetReferenceSheet1){return CreateSafeSheetName(sheetReferenceSheet1, sheetReferenceSheet2, 0);}
public BM25Similarity(){return new BM25Similarity(this);}
public override string ToString(){return this.operator.ToString();}
public override string ToString(){return GetTag(0);}
public virtual FieldLevelEncryptionProfile Update(FieldLevelEncryptionProfile existingProfile){return existingProfile;}
public virtual E lastKeyInthisMap(E key){return this._enclosing.get(key);}
public void Clear(){_postings = new List<Posting>();}
public string authority { get; set; }
public virtual void Grow(int size){for (int i = size; i < size; i++){System.Array.Copy(elements, i, _array, i + _position, _array.Length);_array[i] = _array[i++];}}
public virtual string[] GetColumnNames(int row, int col){return tableName.GetColumnNames(row, col);}
public virtual long BytesUsed(){return BytesUsed();}
public virtual string ToString(){return GetCanonicalName();}
public void Reinitialise(ILexerState machine){Reinitialise(machine);}
public virtual PackFile GetNewPackFile(){return new PackFile(this);}
public override AnalyzerConfiguration Build(AnalyzerConfiguration config){return config;}
public virtual string get(string key){return getString(key, CultureInfo.InvariantCulture);}
public override TreeFilter Clone(){return this;}
public virtual void SetInputReader(TextReader input){this._input = input;}
public Iterator(CacheEntry cache){return new Iterator(cache, this);}
public virtual ListAccountsResponse ListAccounts(ListAccountsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAccountsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAccountsResponseUnmarshaller.Instance;return Invoke<ListAccountsResponse>(request, options);}
public virtual string ToString(){return GetCanonicalName();}
public virtual E ResolveError(E error){return GetError(error);}
public virtual string GetPreview(string host){return GetHostResource(host, true);}
public float height { get; set; }
public virtual ModifyJumpserverPasswordResponse ModifyJumpserverPassword(ModifyJumpserverPasswordRequest request){return ModifyJumpserverPassword(request.RequestProperty);}
public void UntagMeetingAccount(MeetingAccount customer){Account = customer;}
public virtual void append(E e){throw new System.NotImplementedException();}
public void Reset(byte[] b){if (b == null){throw new System.ArgumentNullException("b");}reset(b, 0, b.Length);}
public virtual UpdateContactResponse UpdateContact(UpdateContactRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateContactRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateContactResponseUnmarshaller.Instance;return Invoke<UpdateContactResponse>(request, options);}
public string name { get; set; }
public string match(string text){this.m_match = text;return this.m_match;}
public override double ReadDouble(){return delegate1.ReadDouble();}
public void DisassociateVPC(string hostedZoneId, DisassociateVPCRequest request){_vpc = null;_hostedZoneId = hostedZoneId;}
public virtual UpdateVoiceChannelResponse UpdateVoiceChannel(UpdateVoiceChannelResponse request){var options = new InvokeOptions();options.RequestMarshaller = UpdateVoiceChannelResponseMarshaller.Instance;options.ResponseUnmarshaller = UpdateVoiceChannelResponseUnmarshaller.Instance;return Invoke<UpdateVoiceChannelResponse>(request, options);}
public override void Serialize(byte[] b, int offset){if (_position == _limit){_limit = 0;_position = _position;_buf = b;_position += _position;_limit = _limit;_end = _end;}}
public virtual Endpoint CreateEndpoint(Endpoint endpoint){return CreateEndpointInternal(endpoint, null, null);}
public virtual void compact(){_le.compact();}
public FuzzySet(long maxBytes){return new FuzzySet(maxBytes);}
public void AfterRefresh(ObjectRefreshableDocumentRef doc){AfterRefresh(doc, null);}
public bool Matches(FooterKey key){return _key == key;}
public virtual void SetNormFp(int n){m_normFp = n;}
public virtual VariableCollector VariableCollector(int maxValues){return VariableCollector.Default.All(maxValues);}
public virtual TrackingOptions Update(TrackingOptions options){return options;}
public virtual void DetectModerationLabels(){DetectModerationLabels(null);}
public override string ToString(){return DropData.ToString(null, true);}
public virtual void DeleteAssessmentTemplate(EscherTemplate assessmentTemplate){_assessorTemplate = assessmentTemplate;}
public TextLengthConstraint(ICharSequence text){return new TextLengthConstraint(text);}
public virtual IList<int> GetValues(){return intervals.GetValues(Interval.ALL_INTEGERS_CHAR);}
public virtual void RemoveTags(){_enclosing.RemoveTags(_enclosing.Tags);}
public static bool arrays_equal (bool[], bool[]){return bool_arrays_equal(0, 1);}
public string GetSecurityToken(){return securityToken;}
public ICellFormat? Format(){return format;}
public virtual void print(char b){print(b, 0, b.Length);}
public override double get(int index){return base.get(index);}
public override StemFilter Create(){return new JapaneseKatakanaStemFilter(this);}
public string lower(string @string){return _lower(@string, 0, @string.Length);}
public virtual void TableFinish(ITableReader reader){_writer = new DefaultTableFinish(reader, 0, 0);}
public virtual Deployment CreateDeployment(string deploymentName){return CreateDeployment(deploymentName, null);}
public virtual void SetBundleId(string bundleId){this.bundleId = bundleId;}
public virtual NGit.Api.EmailChannelResponse GetEmailChannelResponse(string channel){return GetEmailChannelResponse(channel, null);}
public override void Decompress(BytesRef input){_input.CopyTo(input);}
public override string GetDefaultClusterParameters(){return defaultClusters.Values;}
public virtual GatewayGroup[] GetGatewayGroups(){return gatewayGroupList(null, null, null);}
public virtual int e(int value){throw new System.NotImplementedException();}
public override string ToString(){return format(null, null, "date");}
public virtual string GetOldPath(){return oldPath;}
public virtual NGit.Storage.File.Record GetRecord(){return this._enclosing.GetRecord(this.name);}
public virtual BundleInstance GetBundleInstance(string bundleName){return this._enclosing.GetBundleInstance(bundleName);}
public virtual void DeleteLogGroup(string name){Delete(name, null);}
public DeletedRef3DPtg input(byte[]){return _rc4.Xor(input, 0);}
public virtual DeleteRepositoryRequest SetRequestParameters(DeleteRepositoryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteRepositoryRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteRepositoryResponseUnmarshaller.Instance;return Invoke<DeleteRepositoryRequest>(request, options);}
public java.util.LinkedHashMap<K, V>(){return new java.util.LinkedHashMap<K, V>.LinkedHashMap(this._initialCapacity, this._loadFactor);}
public void UpdateCellNameDefsAfterCellShift(CellNameDef n){_nameDefs = n.NameDefinitionsAfterCellShift;}
public virtual void ReadNext(){_rc4.SkipTwoBytes();_rc4.StartRecord(_rc4.Header);_rc4.EndRecord();}
public virtual void Recycle(int blocks){Recycle(blocks * m_blockSize);}
public virtual void SetValue(string newValue){this.value = newValue;}
public override string GetCacheParameters(){return CacheParameters;}
public override bool ShouldRecurse(string path){return path.EndsWith(path, StringComparison.Ordinal) || path.EndsWith(path, StringComparison.Ordinal);}
public virtual UpdateRepoRequest SetRequestParameters(UpdateRepoRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateRepoRequestMarshaller.Instance;options.ResponseUnmarshaller = SetRequestParametersUnmarshaller.Instance;return Invoke<UpdateRepoRequest>(request, options);}
public override object Get(){return this.GetRawText().GetBytesRef();}
public virtual IList<Session> GetProxySessions(){return sessionPool.ListProxySessions();}
public void RemoveTransitionAt(int index){Transition other = transitions[index];Transition = other;}
public virtual void ensureCapacity(int capacity_1){ensureCapacity(capacity_1);}
public override int get(){return _limit - _position;}
public ValueEval GetPrecisionAt(int index){return _precision;}
public string GetQuery(){return string.Empty;}
public virtual bool ShouldTraverse(BreadthFirstNode node){return true;}
public void SetIdentityPoolRole(string pool, int identityPoolRole){_identityPool = identityPool;}
public virtual string ToString(){return GetType().Name + "(function=" + GetName() + ")";}
public override void ReadFields(DataFormatRecord rec){int field_1_offset = rec.ReadUShort();field_2_offset = rec.ReadUShort();}
public LexerParser(Lexer lexer){this.lexer = lexer;this.parser = parser;}
public virtual int codepointsInRange(int start, int end){return codepointsInRange(start, end);}
public virtual SubscriptionListing GetSubscriptions(){return subscriptions;}
public virtual void write(java.io.OutputStream outputStream){object output = outputStream.getOutputStream();if (output == null){throw new System.IO.IOException("Stream is closed");}this._writer.write(serialize(output);}
public override PatternReplaceCharFilter Create(PatternReplaceCharFilter filter){return base.Create(filter.GetReader());}
public virtual E set(E e){lock (this){object[] newElements = new object[elements.Length + 1];System.Array.Copy(elements, 0, newElements, 0, elements.Length);newElements[elements.Length] = e;elements = newElements;}}
public void Protect(ISheet sheet, ISheetSyntaxException e){throw new InvalidOperationException(e.Message, e);}
public virtual int compare(string str, int start, int end){return string.compare(str, start, end);}
public virtual InstancesResponse Instances(InstancesRequest request){var options = new InvokeOptions();options.RequestMarshaller = InstancesRequestMarshaller.Instance;options.ResponseUnmarshaller = InstancesResponseUnmarshaller.Instance;return Invoke<InstancesResponse>(request, options);}
public java.util.regex.Matcher newMatcher(this.suffixes, true);return newMatcher();}
public virtual void write(java.io.OutputStream outputStream){throw new System.NotImplementedException();}
public override java.nio.ShortBuffer get(){return _backingArray.getShortBuffer(this);}
public virtual void SetObjectId(string id){this.objectId = id;}
public virtual E get(int nth){return readdir(this.m_root, nth);}
public void Add(FormulaRecordAggregate rec){_aggregates.Add(rec);}
public bool HasFailures(){return Errors.Count > 0;}
public virtual void Delete(IdConstraint constraint){object[] fprs = new object[m_numParams];for (int i = 0; i < m_numParams; i++){if (m_params[i].Name.Equals(this.Name, StringComparison.Ordinal)){fprs.Remove(i);}}}
public virtual BinaryHunk.Type GetType(){return type;}
public virtual void SetStartTime(DateTime start){start.SetTime(start);}
public java.util.MapClass.Entry<string, string> newBasePathMapping(string path, string value){return newBasePathMapping(path, value);}
public override void Set(int v){values[i] = v;}
public virtual PrefixList<PrefixList> GetPrefixLists(){return PrefixList.ListPrefixLists(this.m_ctx);}
public virtual SSTRecord Create(RecordInputStream in1){return new SSTRecord(in1);}
public virtual IList<Token> GetTokens(IEvaluationCell evaluationCell){return GetTokens(evaluationCell.Records, evaluationCell.CurrentIndex);}
public override void Seek(int position, SeekOrigin origin){long to = position >> 3;int start = position & 3;int end = position | 3;if (to < 0){to = -1;}else{to = to;}}
public void RestoreWorkspace(){_workspace = null;}
public virtual byte[] Decode(byte[] bytes, int offset, int length){for (int i = offset; i < length; i++){byte b = Decode(bytes[i], 16);if (b!= null){int b1 = Decode(bytes, i + offset, length);int b2 = Decode(bytes, i + offset, length);int b3 = Decode(bytes, i + offset, length);for (int i = i + length; i < b3; i++){b3 = Decode(bytes, i + offset, length);}}return b3;}
public Type GetBundleClass(){return this.GetType().GetTypeInfo().GetTypeInfo().GetBaseType().GetTypeInfo().GetTypeInfo().GetDeclaringClass().GetTypeInfo().GetDeclaringClass().GetTypeInfo().GetDeclaringClass().GetTypeInfo().GetDeclaringClass().GetDeclaringClass().GetDeclaringClass().GetDeclaringClass().GetDeclaringClass().GetDeclaringClass());}
public IRow Get(int index){return _array[index];}
public override void CacheOrdinals(DataInput in){_cache.CacheOrdinals(in);}}
public override void put(float value){buffer.put(value);}
public virtual void OnDataSetChanged(Object dataSet){object flag = dataSet.GetFlag(C.BLOB_SINGLE_FLAG);if (flag == null){return;}if (flag.Get(C.BLOB_SINGLE_FLAG)){flag = null;}if (flag.Get(C.BLOB_SINGLE_FLAG)){flag = null;}if (flag.Get(C.BLOB_SINGLE_FLAG)){flag = flag.GetFlag();}if (flag.GetFlag()!= null){flag.Set(flag.GetFlag());}}
public void ResetBackgroundImage(){backgroundImage = new byte[0];}
public virtual CampaignDetail GetCampaignDetail(string campaignId){return campaigns.Get(campaignId);}
public empty_tree_iterator(){return new _EmptyTreeIterator_54(this);}
public virtual void RemoveNotes(){Note[] notes = new Note[_limit];Notes.CopyTo(notes, 0, _notes.Length);for (int i = 0; i < _notes.Length; i++){Note c = _notes[i];i.Remove(c);}}
public virtual string GetIndexString(){return index.ToString();}
public void ReadByte(){_rc4.SkipTwoBytes();}
public virtual void enqueue(E element){if (element == null){throw new ArgumentNullException("element" )}this.end = true;}
public virtual E previous(){return list.remove(head());}
public override string ToString(){return GetFile().GetPath() + File.separator;}
public override void put(long array_1){if (array_1!= null){putLongArray(array_1);}}
public virtual string ToString(){return ToString(null, true);}
public Size GetImageDimension(){return getImageDimension();}
public virtual void Reset(List<Posting> postings){_list = postings;}
public Format GetFormat(int index){return formats[index];}
public virtual void reset(){buffer.state = STATE_INIT;}
public virtual string ToString(){return Term.ToString();}
public virtual ExternalNameRecord CreateExternalNameRecord(ExternalNameRecord rec){return rec;}
public override bool IsSubtotalFormula(Cell cell){return base.IsSubtotalFormula(cell);}
public virtual void Emit(IToken t){this._enclosing.Emit(t.Key, t.Value);}
public virtual void DeleteConfigurationSetEventDestination(ConfigurationSetEventDestination destination){_configurationSet = destination;}
public static int range(int value1, int value2, int value3, int value4, int value5, int value6, int value7,... value8){return range(value0, value2, value3, value4, value5, value6, value7, value8, value9, value10, value11, value12, value13, value14, value15, value16, value18, value19, value20, value21, value22, value22, value22, value22, value20, value21, value22, value22, value21, value22, value22,... value32, value22, value22, value22, value22, value22, value22, value22, value22, value22, value22, value22, value22, value22, value22, value22, value22, value22, value22, value22, value22, value22, value22, value22, value22, value22, value22, value21, value22, value22, value22, value22, value22, value22, value22, value3, value3, value3, value3, value3,
public virtual void ModifyVpcAttachment(TransitGateway gateway){CheckGatewayName(gateway.GatewayName);}
public override bool ShouldAllowThinOrNot(){return true;}
public virtual void UndeleteAllLeafIndexReaders(){UndeleteAllRefiners(true);}
public virtual IList<DataSource> GetDataSources(){return dataSources;}
public virtual void SetUpFields(FieldInfos fields){SetUpFields(fields);}
public override bool containsMultibyte(string s){return base.containsMultibyte(s);}
public virtual java.util.Iterator<E> iterator(int location){lock (mutex){return c.get(location);}}
public virtual DeliverySource CreateOrUpdate(DeliverySource source){return source;}
public String FormatSpecifier { get; internal set; }
public AttributeSpace CreateAttributeSpace(){return _attributeSpace = new AttrSpace(this);}
public virtual string GetDescription(){return GetErrorString();}
public virtual void Describe(List<string> customHeaders){describeCustomHeaders(customHeaders);}
public virtual void Fill(int value){Debug.Assert(value >= 0 && value <= this.limit, "value=" + value);}
public virtual string ToString(){return GetCanonicalName();}
public override string ToString(){return Term.Utf8ToString();}
public override string GetName(){return "benchmarks";}
public Bucket { get; set; }
public virtual ReceiveCommand.Type GetType(){return type;}
public virtual VaultLockResponse VaultLockGet(VaultLockRequest request){var options = new InvokeOptions();options.RequestMarshaller = VaultLockRequestMarshaller.Instance;options.ResponseUnmarshaller = VaultLockResponseUnmarshaller.Instance;return Invoke<VaultLockResponse>(request, options);}
public virtual void SetRoot(E value){this._root = value;}
public virtual int BaselineFreq(int frequency){return 0;}
public Experiments: base(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null) return Experiments: base(default(Experiments), null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null); }
public void SeekTo(long pos){Debug.Assert(pos >= 0);}
public virtual string ListAsString(){return Sharpen.Collections.ToString(this._enclosing);}
public override bool IsInstance(object o){if (o is RomanianStemmer){return true;}return false;}
public Book and Sheet Index {get; set; }
public void SetUp(XFRecordRecord rec){_merged_rows = rec.CreateRecords(null);_first_data_row = rec.CreateHeaderRow(rec.Row, rec.Column, null);_last_data_row = rec.CreateHeaderRow(rec.Row, rec.Column, null);_last_data_row = rec.CreateHeaderRow(rec.Row, rec.Column, null);_last_data_row = rec.CreateHeaderRow(rec.Column, null);}
public int valueAt(int index){return array[index];}
public virtual byte[] Decode(byte[] bytes, int offset, int length){for (int i = offset; i < length; i++){byte b = Decode(bytes[i], 16);if (b!= null){int b1 = Decode(bytes, i + offset, length);int b2 = Decode(bytes, i + offset, length);int b3 = Decode(bytes, i + offset, length);for (int i = i + length; i < b3; i++){b3 = Decode(bytes, i + offset, length);}}return b3;}
public virtual void remove(object o){iterator.remove(o);end++;}
public PostRealTimeDeviceDataRequest(): base("postRealTimeDeviceData", "deviceData", "openAPI"){Protocol = "POST";Method = "GET";}
public rule(string name, bool value){return rule(name, value);}
public virtual PortSettings Describe(FleetInput fleetInput){return fleetInput.DescribePortSettings();}
public virtual string GetDetail(){return GetDetailAsString();}
public virtual java.nio.CharBuffer copy(){return copy(this._buf, this._enc.position, this._enc.limit);}
public virtual Report Report(){return Report(null, null, null);}
public virtual void SetType(Type type){this._enclosing.Type = type;}
public void AddMergeCellsRecords(List<MergeCellRecord> mergeCellsRecords){_mergeCellsRecords = mergeCellsRecords;}
public bool IsShowSeriesKey(){return seriesKeys.Count > 0;}
public override void Write(int b){if (m_len >= m_buf.Length){Resize(m_len + 1);}UnsafeWrite(b);}
public string GetQuery(){return GetAttributeQuery();}
public Worker(string id){this.WorkerId = id;this.Qualifier = new WorkerId(id);}
public virtual void open(){text = null;}
public virtual void DeletePhoneNumber(int phoneNumber){DeletePhoneNumber(phoneNumber, 0);}
public int valueAt(int row, int column){return internalValues[row][column];}
public virtual NGit.Api.Repository OpenRepository(string repoName){return OpenRepository(repoName, true);}
public virtual long BytesUsed(){return BytesUsed();}
public virtual Subscription SubscribeToDatasetToDatasetToDatasetToSubscriptions: base.SubscribeToDatasetToSubscriptions{return Subscription;}
public virtual int GetTotalLookaheadCount(){return _ll_atn_lookahead_count;}
public virtual int indexOf(E e){return indexOf(e.object, e.index);}
public void SetText(IText text){this.m_text = text;}
public virtual DatabaseInformation GetDatabaseInformation(){return databases;}
public CustomPropertyComparator(CustomProperty other){return other.Equals(this);}
public int GetOffsetOfThumbInPixels(){return thumbOffset;}
public scanner_initial_state(){state = STATE_INITIALIZER;}
public virtual ListMultipartUploadsRequestesResponse ListMultipartUploadsRequestes(ListMultipartUploadsRequestsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListMultipartUploadsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListMultipartUploadsRequestesResponseUnmarshaller.Instance;return Invoke<ListMultipartUploadsRequestesResponse>(request, options);}
public virtual int read(){return _in.read();}
public virtual string ToString(){return GetCanonicalName();}
public virtual void dismissDropDownIfTheWindowHasFocus(){this._enclosing.dismissDropDown();}
public RevFilter[] CreateRevFilters(ICollection<RevFilter> filters){return CreateRevFilters(filters, 0, filters.Count);}
public virtual NGit.Transport.AdvertisedReference GetAdvertisedReference(string name){return this._enclosing.GetRef(name);}
public virtual SendAzureOfferResponse SendAzureOffer(SendAzureOfferRequest request){var options = new InvokeOptions();options.RequestMarshaller = SendAzureOfferRequestMarshaller.Instance;options.ResponseUnmarshaller = SendAzureOfferResponseUnmarshaller.Instance;return Invoke<SendAzureOfferResponse>(request, options);}
public void CreateCell(ICell cell){CreateCell(cell);}
public int status_code(){return status_code;}
public virtual DescribeClustersResponse DescribeClusters(){return DescribeClusters(null, null);}
public virtual void grow(int count){for (int i = 0; i < count; i++){grow(count);}}
public virtual void DeleteConnectionNotifications(Endpoint endpoint){DeleteConnectionNotification(endpoint.GetEndpointName());}
public virtual string GetDetail(){return GetDetail(null);}
public virtual DetectorVersion GetDetectorVersion(){return version;}
public override int BlockSize(int rangeOfRows){return _blockSize(rangeOfRows);}
public virtual IList<Pipeline> GetPipelines(){return Sharpen.Collections.UnmodifiableList(pipelines).Values;}
public virtual bool isEmpty(){return isEmpty();}
public virtual void SetOffset(int offset){m_offset = offset;}
public virtual int preferredSize(){return _anchor.preferredSize();}
public override string ToString(){return base.ToString() + " " + this.GetType().Name;}
public virtual WeightedTerm[] GetWeightedTerms(IQuery query){WeightedTerm[] unweightedTerms = new WeightedTerm[_maxTermSize];foreach (WeightedTerm w in unweightedTerms){_maxTermSize *= -1;}return unweightedTerms;}
public virtual NGit.Api.UserHierarchy Update(UserHierarchyRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateUserHierarchyRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateUserHierarchyResponseUnmarshaller.Instance;return Invoke<NGit.Api.UserHierarchy>(request, options);}
public virtual NGit.Api.Repository GetRepository(){return repository;}
public virtual void SetToContainOnly(int size){HashSet<E> set = new HashSet<E>(size);{for (int i = size; i < size; i++){Set(i, this[i].Value);}}
public shape(ESCHER container, object record){return new shape(this, container);}
public override Hunk GetReverseBinaryHunk(){return this;}
public void SetDeleteMe(bool b){UpdateMe(b);}
public BytesRefArray(){return new BytesRefArray(this);}
public virtual object remove(object o){return remove(o, true);}
public override ObjectId Create(byte[] b, int offset){return Create(b, offset, b.Length);}
public virtual List<Subnet> GetSubnets(){return subnets;}
public override void Read(PaletteRecord paletteRecord){if (paletteRecord.Property1!= null) {paletteRecord.Property2 = _internal.ReadColor(paletteRecord.Property1);}else{paletteRecord.Property3 = _internal.ReadColor(paletteRecord.Property2);}}
public virtual Transcript Information(int id){return Information(null, null, null, null, null, null);}
public virtual void add(E e){map[e] = e;}
public DataSource(string name){return null;}
public void Reset(){m_counter = 0;}
public virtual void add(E e){throw new System.NotImplementedException();}
public virtual int SetCacheMissesCount(int value){return _cacheMissesCount;}
public virtual void SetIndexVersion(int indexVersion){indexVersion = indexVersion;}
public virtual Note GetNote(){return notesRef.GetNote(noteId);}
public static float PMT(QuadraticModel model){return PMT(model.precedence);}
public override void OnClick(){this.isPopupOpen = true;this.isShiftViewOpen = false;this.isPopState = true;this.isShiftViewOpen = false;this.isShiftViewOpen = false;this.isSemaphoreLocked = false;this.notifier.notifyDataSetSelected(this);}
public virtual IList<Job> GetJobs(){return jobs;}
public SharedContextCache getSharedContextCache(){return _sharedContextCache;}
public string FetchedFrom{get; internal set;}
public override java.nio.ByteBuffer getBuffer(){return _buf.getBuffer(0);}
public virtual void RemoveTargets(IList<Target> targets){foreach (Target target in targets){RemoveTarget(target);}}
public virtual bool matches(string text){return strings.Match(text, StringComparison.Ordinal)!= null;}
public override java.io.OutputStream getOutputStream(){return outputStream;}
public virtual MergeCommandResult GetMergeResult(){return this.merge;}
public HMMChineseTokenizer(){this.tokenizerClass = new HMMChineseTokenizerClass(this);}
public virtual void SetCallerReference(object @ref){caller = @ref;}
public virtual E set(E e){lock (this){object[] newElements = new object[elements.Length + 1];System.Array.Copy(elements, 0, newElements, 0, elements.Length);newElements[elements.Length] = e;elements = newElements;}}
public virtual IList<string> GetOptions(){return options;}
public virtual void SetLabel(string label){this.label = label;}
public virtual string GetMaskString(){return mask.ToString();}
public void VisitAllCells(){VisitAllCellsInRegion(null);}
public java.lang.StringBuffer deleteRange(java.lang.StringBuffer start, java.lang.StringBuffer end){java.lang.StringBuffer.Position start2 = start.index(c.startIndex());java.lang.StringBuffer.Position end2 = end.endIndex(c.startIndex());return end2;}
public virtual void SetStartPoint(Point start){m_start = start;}
public virtual void Clear(){cache.Clear();}
public virtual SpeechPart GetPart(int index){return _part.GetPart(index);}
public virtual void SetCommitUserData(string newUserData){m_commitUserData = newUserData;}
public string ToString(){return Tuple.ToString(this._enclosing);}
public virtual int lastMarkerInTheBuffer(int length){return markerInTheBuffer(length - 1);}
public CRNCountRecord Read(RecordInput in1){return ReadCRNRecord(in1, null);}
public virtual DescribeConnectionsResponse DescribeConnections(DescribeConnectionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeConnectionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeConnectionsResponseUnmarshaller.Instance;return Invoke<DescribeConnectionsResponse>(request, options);}
public CellReference CompareTo(CellReference other){return other.CompareTo(this);}
public void DeleteReusableDelegationSet(ReusableDelegationSet set){_delegator = set;}
public void DeleteVaultNotifications(){_amz.DeleteVaultNotifications(null, true);}
public ProgressBar(int id, int progress, bool fromUser){this.id = id;this.progress = progress;this.fromUser = fromUser;}
public virtual List<TopicDetectionJob> GetTopicsDetectionJobs(){return topicsDetectionJobs;}
public virtual java.nio.CharBuffer append(char c){throw new java.nio.ReadOnlyBufferException();}
public override void Skip(int b){Skip(b & 0x00FF);}
public ColumnWrapMasks(byte value){return _columnWrapMasks[value];}
public virtual void DeleteSubnetGroup(int subnetGroupID){DeleteSubnetGroup(subnetGroupID);}
public override altset subset(altset) {return subset(null).Union(altset.union(altset.union(altset)));}
public override int Read(int field_1_index){return _in.ReadInt32(field_1_index);}
public virtual bool SetAllowNonFastForwardUpdates(bool enable){var b = _interpreter.EnableNonFastForwardUpdates(enable);return b;}
public void Reset(int offset){backingArray[offset] = null;}
public virtual bool Matches(IParseTree tree, ParseTree pattern){return m_match(tree, pattern, false);}
public override string ToString(){return "and(" + op + ")";}
public virtual List<Template> GetCustomVerificationEmailTemplates(){return customVerificationEmailTemplates;}
public Vaults.CreateVault(VaultOptions options){var vaultName = options.VaultName;var options = new InvokeOptions();options.VaultName = vaultName;options.CreateOptions = options.CreateOptions;return new Vaults(this, options);}
public LabelValue(Label Value){this.value = Value;this.label = Value;this.type = TokenTypes.String;this.setValue(LabelValue);}
public IdentityNotificationTopic(string topic){this.topic = topic;}
public string[] Split(string input){return split(input, 0, input.Length);}
public virtual bool IsCheckEofAfterPackFooter(PackWriter writer){return false;}
public override string ToString(){return GetBookmarkAsString();}
public virtual IFolderInformation GetFolderInformation(){return folderInformation;}
public virtual string GetDescription(){return Vendor.GetDescription() + " (required)";}
public virtual IList<Certificate> GetCertificates(){return balancer.getCertificates();}
public virtual void SetAdd(object o){lock (this._enclosing){if (o is java.util.MapClass.Entry<K, V>){set.Add(o);}}else{set.Add(o);}}
public virtual Segmentation Lookup(int phraseId, WordID phrase){return Lookup(phraseId, null);}
public override void Serialize(byte[] b, int offset){if (m_offset == 0){m_offset = 0;}UnsafeWrite(b, offset + _position, m_buf, m_offset + _size);}
public virtual bool IsRoleInRole(string roleName){return roleName!= null && roleName.StartsWith("Role:", StringComparison.Ordinal) && roleName.EndsWith(":", StringComparison.Ordinal) && roleName.EndsWith(":", StringComparison.Ordinal) && roleName.EndsWith(":", StringComparison.Ordinal) && roleName.EndsWith(":", StringComparison.Ordinal) && roleName.EndsWith(":", StringComparison.Ordinal) && roleName.EndsWith(":", StringComparison.Ordinal) && roleName.StartsWith(":", StringComparison.Ordinal) && roleName.EndsWith(":", StringComparison.Ordinal) && roleName.EndsWith(":", StringComparison.Ordinal) && roleName.EndsWith(":", StringComparison.Ordinal) && roleName.EndsWith(":", StringComparison.Ordinal) && roleName.EndsWith(":", StringComparison.Ordinal) && roleName.EndsWith(":", StringComparison.Ordinal) && roleName.EndsWith(":", StringComparison.Ordinal) && roleName.EndsWith(":", StringComparison.Ordinal)&& roleName.EndsWith(":", StringComparison
public virtual ITemplate GetTemplate(){return null;}
public set_hosted_zone_id(_hosted_zone_id) {_hosted_zone_id = _hosted_zone_id;}
public Preset Create(Preset preset){this.preset = preset;}
public void DeleteAccount(Account account){_account = account;}
public virtual void Execute(ITokenStream lexer){lexer.SetState(lexerState);}
public bool hasChildren(){return hasChildren();}
public QueryLoggingConfiguration CreateQueryLoggingConfiguration(){return new QueryLoggingConfiguration{OverrideQueryLogger = this._enclosing.CreateQueryLogger(this._enclosing);}
public ProgressMonitor(ProgressMonitor other){this.other = other;}
public virtual double GetAcosh(double value){return Sharpen.Util.GetAcosh(value);}
public virtual void RejectInvitation(Invitation invitation){this.Invitation = invitation;}
public string getSchemeSpecificPart(){return scheme;}
public ThreatIntelSet[] ThreatIntelSets { get; internal set; }
public StopTrainingAcsmallClassifier(){return stopTrainingAcsmallClassifier();}
public virtual ClusterSnapshot CreateClusterSnapshot(ClusterSnapshotConfig config){return CreateClusterSnapshot(config, null, 0);}
public virtual void print(char b){print(b == null? "null" : b.ToString());}
public int indexOf(object o){if (indexOf(o, this)!= -1){return indexOf(o, this);}return -1;}
public override bool GetFlags(){return file.GetFlags();}
public virtual void clear(){ref count = 0;}
public virtual void Set(T value){this._enclosing.result = value;}
public virtual void SetQuery(string query){this.m_query = query;}
public override long Size(){return 0;}
public override string ToString(){return "Infinity";}
public virtual IPAddress[] GetResolverEndpointIPs(){return null;}
public virtual int first_character(char c){return index_1(c);}
public virtual int compare(string str, int toCompare){return str.CompareTo(toCompare, StringComparison.Ordinal) == 0;}
public TableStylesRecord Read(RecordInputStream in1){return ReadTableStylesRecord(in1, null);}
public virtual void Clear(){this._enclosing.Clear();}
public virtual void SetChunkerModelFile(string chunkerModelFile){args[0].ChunkerModelFile = chunkerModelFile;}
public virtual int GetCurrent(){return m_count;}
public AvailabilityZoneAttribute: A,B { get; set; }
public ICharSequenceNew(ILittleEndianInput in1){return (ILittleEndianInput)in1.CreateCharSequence(in1.AvailableCharTypes);}
public override FilterFactory CreateFilterFactory(FilterConfig config){return base.CreateFilterFactory(config);}
public static double Irr(double[] doubles){return Irr(doubles, 0, doubles.Length);}
public virtual PatternFormatting GetPatternFormatting(){return _patternFormatting;}
public virtual SpanQuery GetSpanQuery(XmlElement e){return SpanQuery.Create(e.InnerElement);}
public virtual bool IsMarkSupported(){return markSupported;}
public override string ToString(){return this.ToString(CultureInfo.InvariantCulture);}
public virtual ClusterParameters GetClusterParameters(){return parameters;}
public virtual void ModifyReplicationGroupShardConfiguration(ReplicationGroupShardConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyReplicationGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyReplicationGroupShardConfigurationMarshaller.Instance;returnInvoke<ReplicationGroupShardConfiguration>(request, options);}
public java.nio.ByteBuffer slice(java.nio.ByteBuffer offset,_limit) {return byteBuffer.slice(offset, _limit);}
public virtual void Clear(){cache.Clear();}
public virtual void Validate(){base.Validate();}
public bool insert(object o){return insert(o, 0, o.Length);}
public virtual BusinessReportSchedule CreateBusinessReportSchedule(IBusinessReportSchedule schedule){return schedule;}
public override bool copy(){return this._enclosing.copy();}
public override string ToString(){return "Flushing...";}
public void DeleteQueryLoggingConfiguration(){DeleteQueryLoggingConfigurationInternal(null);}
public override void SetFieldsData(ICollection<E> fieldsData){foreach (E field in fieldsData){SetField(field, null);}}
public ExpressionParser(Parser recognizer){_parser = recognizer;}
public virtual AppsList.AppStatus GetAppStatus(){return status;}
public override void put(long value){throw new System.NotImplementedException();}
public void Freeze(){lock (this.mBlock) {if (this.mParseState!= null) {this.mParseState.Dispose ();this.mParseState = null;this.mBlock.decOpenCountLocked ();}}}
public override void put(float value){buffer.put(value);}
public bool Contains(string value){return customProperties[value];}
public Rule Rule(List<FormattingRule> rules){return AddRule(rules);}
public static double GreatestCommonDivisor(double value){return GreatestCommonDivisor(value, 0.000000001);}
public float value = 1f,grow = 1f,budget = 1f,erase = 0f, inclusive = 0f, bust = 1f, wast = 1f, hast = 1f, wast2 = 1f, wastThree = 1f, wastThree = 1f, wastThree = 1f, wastThree = 1f, wastThree = 1f, wastThree = 1f, wastThree = wastThree; wastThree = wastTwo, hastTwo = wastTwo, hastTwo = wastTwo, wastTwo = wastTwo, wastTwo = wast || 1f, wastTwo = wastThree; wastThree = wastThree || wastThree || wastTwo || wastTwo returnValues[0].Value;}
public override string ToString(){return string.Format("indexDifferenceFilter{0} is not supported.", IsIndexDifferenceFilter);}
public override long TotalBytesUsed(DocumentDocument doc){return doc.TotalBytesUsed();}
public string value { get; set; }
public LengthOfAbbreviationData set(int value){this.value = value;}
public virtual IList<Operation> GetStackOperations(){return stackOperations;}
public virtual ListDomainsResponse ListDomains(){return domains;}
public virtual void SetSignalingChannel(SignalingChannel channel){this.channel = channel;}
public virtual int indexOf(E e){return indexOf(e.object, e.index);}
public override void Read(Record record){_in.Read(record);_rc4.SkipTwoBytes();}
public virtual void AddDocumentId(int id){m_documents.Add(id);}
public virtual string ToString(){return Term.ToString();}
public void end(){pos = endOfFile;}
public string getPath(){return "";}
public void write(object o){throw new System.NotImplementedException();}
public static DelimitedPayloadTokenFilterFactory CreateDelimitedPayloadTokenFilterFactory(params TokenFilterParameters parameters){return CreateDelimitedPayloadTokenFilterFactory(parameters);}
public virtual NGit.Storage.File.Resource Get(string path){string resource = path;if (resource == null){throw new ArgumentNullException("path")}return null;}
public virtual double get(string key){return properties[key];}
public override void OnCreate(Field field){base.OnCreate(field);}
public virtual int RamUsageCount(){return _rc4.MemoryUsage().GetUsedInBytes();}
public override long FreeCount(){return this._enclosing.NumFreeBlocks();}
public virtual void OnEvent(int type, string data){if (type == EventType.KEY_PRESS){SendKeyPress(data);}else{ReceiveKeyPress(data);}}
public virtual string GetNewId(){return id;}
public ValueSource[] ValueSources { get; internal set; }
public virtual IList<FargateProfile> GetFargateProfiles(){return fargateProfiles;}
public virtual IList<LaunchTemplate> GetLaunchTemplates(){return launchTemplate.GetLaunchTemplates();}
public override void SetByteSize(int b){base.SetByteSize(b);}
public virtual void CopyBytesInto(BytesRef bytes){if (bytes == null){return;}Stream out = new FileStream(bytes, 0, bytes.Length);FileStream c = fs.Create(bytes.Length);f.CopyTo(out);}}
public HadoopJarStepConfig ToHadoopJarStepConfig(){return new HadoopJarStepConfig{WorkDirectory = this.WorkDirectory, MaxTaskCount = this.MaxTaskCount,InitialDirectory = this.InitialDirectory, };}
public virtual void DeleteTemplate(SmsTemplate template){_template = template;}
public CellRangeAddress[] ReadCellRangeAddressList(RecordInput in1){int nItems = _in.ReadUShort();_in.ReadFully();_rangeAddressList = ReadCellRangeAddressList(in1);_isPositionRelative = _in1.ReadUShort();_isPositionRelative = _in1.ReadFully();_isPositionRelative = _in1.ReadFully();_isPositionRelative = _in1.ReadFully();_isPositionRelativeRelative = _in1.ReadFully();_in1.ReadFully();_isPositionRelative = _in1.ReadFully();_in1.ReadFully();_rangeAddressList = _in1.ReadCellRangeAddressList(in1);_isPositionRelative = _in1.ReadFully();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();_in1.ReadFully();return _in1.ReadFully();}
public virtual IList<string> Get(string key){return Get(key, null);}
public virtual IList<Snapshot> GetSnapshots(){return snapshots;}
public virtual CompoundException Create(ICollection<Exception> excptr){if (excptr is ICollection<Exception>){foreach (Exception t in excptr){if (excptr is ICompoundException){return (CompoundException)excptr;}}}return (CompoundException)Create(excptr.FirstChild, excptr.LastChild, excptr.StackTrace, excptr.PreviousSibling, excptr.NextSibling, excptr.NextSibling, excptr.NextSibling, excptr);}
public override bool Commit(){return false;}
public virtual IEnumerator<long?> Decode(long? input, int? length) {return Input.GetEnumerator();}
public bool IsCollapsed{getRange();setRange();}
public virtual NGit.Storage.File.Record GetRecord(){return this._enclosing.GetRecord(this.name);}
public Fleet(string name, string description, IList<string> options){var fds = new List<string>();foreach (var child in options.Children){fds.Add(child);}}
public IList<Region> GetRegions(){return regions;}
public PatchIdDiffFormatter(PatchIdFormat format){this.format = format;}
public virtual ModifyClusterResponse ModifyCluster(ModifyClusterRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyClusterRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyClusterResponseUnmarshaller.Instance;return Invoke<ModifyClusterResponse>(request, options);}
public override set of stop tags{return default_stop_tags;}
public GetQuotaRequest(): base(){return path/to/quota/{id}/*";}
public virtual int count(){lock (this._enclosing){return _enclosing._size;}}
public virtual void CreateSSTRecord(Record record){CreateSSTRecord(record);}
public void Evaluate(ExcelDate date){_value = date.GetTime();}
public void RemoveAuthorProperty(){_author = null;}
public virtual SST Get(int index){return _sst.Get(index);}
public virtual void Parse(ILexer.State machine){ILexer.State machine = this;ParseRuleDeclarations(machine);}
public French Light stem filter(TokenStream input){return new FrenchLightStemFilter(input);}
public override void Remove(int index){if (index == -1){throw new IndexOutOfRangeException("index is out of range");}this.blocks[index] = null;}
public override int Parse(byte[] bs){return _le.ParseBigInteger(bs, 0);}
public virtual IList<Application> GetApplications(){return allApplications();}
public virtual ObjectId ToObjectId(){return ToObjectId(this);}
public virtual DetectionJobDetail GetDominantLanguageDetectionJobDetail(){return null;}
public virtual IList<Tag> GetTags(){return new List<Tag> { GetTag(false) };}
public void Dispose(){_collector.Dispose();}
public TreeIterator(long id){return new NGit.Treewalk.Iterator(this, id);}
public virtual void put64(long value){throw new System.NotImplementedException();}
public virtual int f(double v){return Sharpen.Util.NormaliseBase2(v);}
public virtual void put(char b){if (m_len >= m_buf.Length){throw new System.IO.IOException("Buffer full");}m_len += m_len;}
public void DeleteIAMPolicyAssignment(IAMPolicyAssignment policyAssignment){_policyManager.DeleteIAMPolicyAssignment(policyAssignment);}
public void RemoveRole(Role role){Cluster.RemoveRole(role);}
public virtual void SetEntry(Entry<NotSupportedException> e){throw new System.NotImplementedException();}
public virtual bool contains(object o){return this._enclosing.containsKey(o);}
public virtual ResourceDetail GetCapacityReservationUsage(){return _capacityReservationUsage;}
public virtual void SetEditPath(string newPath){editPath = newPath;}
public override string ToString(){return this.GetType().Name + " table " + this.table.GetDisplayNames();}
public virtual void SetOutermostReturn(E @outermostReturn){_outermostReturn = @outermostReturn;}
public virtual void UnassignPrivateIpAddressList(List<string> privateIpAddressList){_unassignPrivateIpAddressList(privateIpAddressList);}
public virtual void DropAllChanges(){_rc4.DropAllChanges();}
public SpanQueryBuilderFactory(ISpanQueryBuilderFactory factory){_spanQueryBuilderFactory = factory;}
public virtual void Unbind(VpcInstance instance){_vpc = instance;}
public virtual IList<string> GetCandidateIDs(){return NO_MATCH;}
public virtual void ModifySnapshotAttributes(SnapshotAttributes attributes){this._enclosing.ModifySnapshotAttributes(attributes);}
public virtual IList<DeploymentInstance> GetDeployments(){return deploymentInstances;}
public virtual GetNotificationResponse GetNotification(GetNotificationRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetNotificationRequestMarshaller.Instance;options.ResponseUnmarshaller = GetNotificationResponseUnmarshaller.Instance;return Invoke<GetNotificationResponse>(request, options);}
public virtual IList<Distribution> GetDistribution(){return aWebACL.GetDistribution();}
public virtual SortingSet Clone(){return sortingSet;}
public virtual GetSkillGroupResponse GetSkillGroup(GetSkillGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetSkillGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = GetSkillGroupResponseUnmarshaller.Instance;return Invoke<GetSkillGroupResponse>(request, options);}
public virtual ParseException generateParseException(string message, ParseException e){throw new System.NotImplementedException();}
public string GetFileName(string segmentName, int suffixIndex, int extIndex){return GetFileName(segmentName, suffixIndex, extIndex);}
public override void SetBytesReadonly(bool b){bytesReadonly = b;}
public override bool Equals(object o){if (o is StemmerPrefix){return base.Equals(o);}return false;}
public override object Decode(byte b){return this.Decode(b, 0, b.Length);}
public override void GetImageLayerInfo(string tag){GetImageLayerInfoResponse res = null;try{res = internal.GetImageLayerInfo(tag);}catch (MissingImageLayerException){return res;}}
public override void Read(Record record){_in.Read(breakRecord);}
public virtual void run(char[] text){run(text, 0, text.Length);}
public void flush(){_writer.flush();}
public virtual string GetText(IToken token){return GetText(token.Text, token.Start, token.End);}
public virtual VariableCollection GetVariables(){return Sharpen.Collections.UnmodifiableList(getVariables()));}
public vaults.NotifyPropertyChange(VaultsNotifyPropertyChange value){vaults.NotifyPropertyChange(value);}
public virtual ConfigurationSet Get(string name){return information;}
public virtual void Encode(string str){Encode(str, 0, str.Length);}
public virtual string ToString(){return GetType().FullName;}
public virtual IList<LifecycleConfig> GetLifecycleConfigurations(string appName){return Sharpen.Collections.UnmodifiableList(lifecycleConfigurations, appName);}
public virtual void SetApplicationName(string applicationName){this.applicationName = applicationName;this.optionSettings = new Hashtable();this.optionSettings = new Hashtable();this.isInteractive = true;}
public virtual void DeleteAssessmentTarget(AmazonGuardDutyAssessmentTarget target){DeleteAssessmentTarget(target.GetAssessmentTarget());}
public void SetAccessKey(string access_key){_access_key = access_key;}
public virtual ResolveResult Resolve(ICollection<ResolveResult> operands){return Resolve(operands, null);}
public virtual TerminationHealth GetTerminationHealth(){return terminationHealth;}
public virtual IList<TrafficPolicyInstance> GetTrafficPolicyInstances(int zone){return zone.GetTrafficPolicyInstances(null, null);}
public virtual string GetDetail(){return GetDetailAsString();}
public virtual Distribution Get(string id){return DistributionInfo.ForId(id, null);}
public void DisassociateFromMasterAccount(AmazonS3BucketName keyStoreKey){regionCloudProvider.DisassociateFromMasterAccount(keyStoreKey);}
public void Write(byte b){_out.Write(b);_size += b.Length;}
public virtual void Reinitialise(ICharStream input){this.m_input = input;this.m_pos = 0;this.m_eof = false;this.m_type = TokenTypes.Invalid;this.m_compiled = new CompiledLexicalState(input);}
public virtual void DeleteLaunchTemplate(string launchTemplateName){this.launchTemplateName = launchTemplateName;}
public virtual ConfigurationProfile Create(ConfigurationProfile config){this.config = config;}
public virtual float GetScore(int doc, string field){return null;}
public virtual void remove(object o){remove(o);}}
public override object Decode(byte b){return this.Decode(b, 0, b.Length);}
public virtual TermIndexWriter CreateTermIndexWriter(IndexWriter writer){return IndexWriterForTermIndex(writer);}
public virtual ICollection<string> GetRemoved(){return Sharpen.Collections.UnmodifiableSet(m_strings.GetRemoved());}
public string ContentDisposition { get; internal set; }
public virtual void Optimize(int minIdx, int maxIdx){Optimize(minIdx, maxIdx + 1);}
public PutLogEventsRequest(PutLogEventsRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutLogEventsRequestMarshaller.Instance;options.ResponseUnmarshaller = PutLogEventsRequestUnmarshaller.Instance;return Invoke<PutLogEventsRequest>(request, options);}
public formats: return formats;}
public virtual void UpdatePrivacyStatus(int privacyStatus){var contact = contacts[privacyStatus];UpdateDomainContactsStatus(contact);}
public virtual CompositeAlarm CreateOrUpdateCompositeAlarm(CompositeAlarm other){return other;}
public override void Delete(){this._enclosing.Delete(this.GetPath());}
public virtual void reset(){base.reset();}
public java.lang.StringBuffer insert(string str, int index, java.lang.StringBuffer @out) {java.lang.StringBuffer @out = @out;return this;}
public virtual RevTag Lookup(int id){return RevTags.Get(id);}
public virtual NGit.Storage.File Create(File file){this.file = file;this.mode = FileMode.Create;this.m_disk = new NGit.Storage.File(file, this);}
public virtual NGit.Api.ListNotesCommand ListNotes(){return ListNotes();}
public virtual void SetValue(string newValue){this.value = newValue;}
public DiffConfigComparator(DiffConfigComparator other){this.other = other;}
public DBSecurityGroup Create(DBSecurityGroupName dbSecurityGroupName){return Create(dbSecurityGroupName, null, dbSecurityGroupName, null, null);}
public void SetNoteMessage(string msg){this.noteMessage = msg;}
public static HindiNormalizationFilter Create(TokenStream input){return new HindiNormalizationFilter(input);}
public virtual string ToString(){return GetCanonicalName();}
public virtual void filterOutCJKWidthTokens(){termAtt = AddAttribute<ICharTermAttribute>();}
public virtual void SetTokenType(int tokenType){this.tokenType = tokenType;}
public virtual IntervalSet Intersect(ISet other){return other;}
public void DeleteAPI(string id){if (id == null){throw new ArgumentNullException("id");}base.DeleteAPI(id);}
public virtual UpdateGatewayGroupResponse UpdateGatewayGroup(UpdateGatewayGroupResponse groupResponse){return UpdateGatewayGroup(groupResponse.GatewayGroupName);}
public override void AddFilter(ICharTermFilter filter){this.filter = filter;}
public override E elementAt(int location){return location.element;}
public virtual IList<string> GetClusterRevisions(){return GetClusterRevisions(null, null);}
public override TreeFilter Clone(){return this;}
public override string ToString(){return "Infinity";}
public BuyOriginPictures(optional parameters): base(){return new BuyOriginPicturesRequest(requiredParameters);}
public GetImagesRequest GetImagesRequest(string query){return new GetImagesRequest(query, null, null);}
public virtual NGit.Storage.File.Record GetRecord(){return this._enclosing.GetRecord(this.name);}
public override bool IsInstance(object o){if (o is LovinsStemmer){return true;}return false;}
public Image(byte[] data){this.m_data = data;}
public TrackingOptions ConfigurationSet(ConfigurationSet configSet){return CreateTrackingOptions(configSet.TrackOptions);}
public void Write(byte b){_out.Write(b);_size += b.Length;}
public virtual Hyphenation Hyphenate(string word){return Hyphenate(word, true)? Hyphenate(word) : Hyphenate(word, false);}
public virtual void DeleteFleets(List<Fleet> fleets){_fleets = fleets;}
public virtual void CreateOrUpdateIndexField(){this.indexField = new IndexField(this);}
public Automaton(ICollection<byte> bytes){return Build(bytes, 0, bytes.Length, false);}
public virtual IList<EmbeddedObject> GetEmbeddedObjects(){return GetEmbeddedObjects(null);}
public void SetPrecedence(int precedence){precedence = precedence;}
public CloudFrontAccessIdentityConfigurationId(string id){_id = id;}
public void SeekTo(long pos){Debug.Assert(pos >= 0);}
public virtual NGit.Api.BasicUserModel.Channel Update(NGit.Api.BasicUserModel.Channel channel){return UpdateUser(channel.GetRawClientEncodedChannel());}
public int index_of_cell_in_externSheet(CellIndex_t cell){return index_of_cell_in_externSheet(cell);}
public virtual string ToString(){return GetCanonicalName();}
public void Add(Cell consumingCell){cache.Add(consumingCell);}
public NGit.Revwalk.Filter.NotRevFilter CreateNotRevWalkFilter(Term term){return new NGit.Revwalk.Filter.NotRevFilter(term);}
public int row_1, col_1 = 0;int x_1, y_1 = 0;int y_2, z_2 = 0;bool is_empty = false;try{GetValue(row_2, out y_2) && (y_2 = values[row_2] == null);}catch (Exception e){throw new ArgumentException(e.Message, e);}if (is_empty){setValue(row_2, column_3, z_2);}Is_1 =!is_empty? 1 : 0;}
public virtual void Run(string @string){Run(m_luceneMatchVersion, @string);}
public virtual string ToString(){return XCT.GetString(this);}
public RegisterFaceRequest(): base("registerFace", "defaultFace", "openAPI"){return this;}
public virtual IList<DeploymentInstance> GetDeployments(){return deploymentInstances;}
public virtual NGit.Storage.File.Record GetRecord(){return this._enclosing.GetRecord(this.name);}
public virtual void Add(string s){Add(s);}
public void SetAppRole(string role){_role = role;}
public virtual void Delete(InsightRule rule){DeleteRule(rule.RuleIndex);}
public virtual E remove(E element){return remove(element, 0, element.Length);}
public int get(short key){return get(key, Longs.Short(key));}
public virtual INotificationAttributes GetInstanceEventNotificationAttributes(){return _eventNotificationAttributes;}
public int BitCount(int wordOffset){return Intersect(wordOffset, _size);}
public java.util.MapClass.MappingCharacterFilter createMappingCharacterFilter(java.util.MapClass.MappingParameter parameter_1){return new java.util.Hashtable<char, IMappingCharacterFilter>(parameter_1);}
public Group(string name, string[] defaultValues){return new Group(name, defaultValues);}
public virtual DedicatedCapacity Get(string id){return _capacity.Get(id, true);}
public virtual void pop(){lexer.popState();}
public virtual SignOutResponse SignOut(SignOutRequest request){var options = new InvokeOptions();options.RequestMarshaller = SignOutRequestMarshaller.Instance;options.ResponseUnmarshaller = SignOutResponseUnmarshaller.Instance;return Invoke<SignOutResponse>(request, options);}
public virtual ModifyImageAttributeResponse ModifyImageAttribute(ModifyImageAttributeRequest request){return ModifyImageAttribute(request, null);}
public void RemoveSegment(string name){if (name.StartsWith("_", StringComparison.Ordinal) &&!name.Equals("_", StringComparison.Ordinal)){return;}RemoveSegment(name, StringComparison.Ordinal);}
public SetAccessKeyIdAndSecretRequest(string key, string secret){_accessKeyId = key;_secret = secret;}
public virtual RevFilter Filter(ICollection<RevFilter> filters){return new CommitFilter(filters);}
public virtual void SetNumThreads(){numberOfThreads = m_numberOfThreads;}
public virtual IList<DeploymentGroup> GetDeploymentGroups(){return deploymentGroups;}
public virtual void RemoveName(string name){names.Remove(name);}
public override void SetScore(int doc, int shard){this.m_doc = doc;this.m_shard = shard;}
public string GetDownloadURL(int layerIndex){return _layerIndex.GetDownloadURL(layerIndex);}
public override void print(double v){if (m_len >= m_buf.size()){throw new InvalidOperationException("Buffer full (too short) for m_len >= m_buf.size() - 0");}m_buf[m_len++] = v;}
public virtual string GetAttributeName(){return attributeName;}
public virtual list_traffic_policies_v1(){return list_traffic_policies_v1(_owning_profile_id, _default_flow_params);}
public TreeFilter Create(ICollection<TreeFilter> treeFilters){return Create(treeFilters, 0, treeFilters.Count);}
public string setCacheParameterName(){return cacheParameterName;}
public virtual IList<string> GetGitHubAccountTokenNames(){return GitHubAccountTokenNames.List(authenticatedUser);}
public virtual ListTrainingJobsResponse ListTrainingJobs(ListTrainingJobsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListTrainingJobsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListTrainingJobsResponseUnmarshaller.Instance;return Invoke<ListTrainingJobsResponse>(request, options);}
public BytesRefHash(){return new BytesRefHash(this);}
public PatternTokenizerFactory(){return new PatternTokenizerFactory(this);}
public DefaultPassageFormatter(){this.formatter = new DefaultPassageFormatter(this);}
public virtual Snapshot Information(s){return Snapshots;}
public virtual DetectDominantLanguagesResponse DetectDominantLanguages(DetectDominantLanguagesRequest request){var options = new DetectOptions();options.DetectDominantLanguages(request);return DetectDominantLanguages(request, options);}
public virtual void ActivityTaskCanceled(ActivityTask task){_activityTaskCanceled = task;}
public virtual void DeleteDeployment(Deployment deployment){this.deployment = deployment;}
public virtual void remove(object o){removeRange(o, o.GetIndex(), o.Length);}
public ObjectReader GetObjectReader(){return new NGit.Storage.File.ObjectReader(this);}
public override void reset(){buf = new byte[0];}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_formatFlags);}
public IndexReaderContext(IndexReaderContext context){indexReaderContext = context;}
public virtual PackWriter.PackingPhase GetPackingPhase(){return this._enclosing.GetPackingPhase();}
public virtual void write(string b){write(b, 0, b.Length);}
public virtual void append(object o){append0(o);}
public virtual ValueFormatException GetValueFormatException(){return _valueFormatError;}
public void DeregisterGuardDutyType(string type){_guardDutyType = type;}
public virtual BorderFormatting GetBorderFormatting(){return borderFormatting;}
public ATNOptions SetOptions(ATNOptions options){this.options = options;}
public virtual InsightRule Get(int id){return insightRuleCache.Get(id);}
public bool hasPrevious(){return this.hasPrevious();}
public string escaped{get;set;}
public void AddRole(Role role){Cluster.AddRole(role);}
public virtual BulkPublishDetails GetBulkPublishDetails(string appName, string applicationName){return BulkPublishDetails.Get(appName, null);}
public virtual void DeleteFilter(TrafficMirrorFilter filter){DeleteFilter(filter.FilterId);}
public override IList<IToken> GetHiddenTokens(int channel){return base.GetHiddenTokens(channel);}
public virtual void DescribeSecurityGroups(){this._enclosing.DescribeSecurityGroups();}
public Properties Properties(){return new Dictionary<string, string>();}
public bool any(){return false;}
public virtual IList<Ref> GetPickedRefs(){return Sharpen.Collections.UnmodifiableList(GetCherryPickedRefs()));}
public virtual IList<Identity> GetIdentities(){return identities;}
public virtual RouteTableDetail RouteTableDetail(){return TableDetail(RouteTable);}
public override void SeekTo(long position){long toSeek = position;long toSeekTo = position - toSeek;}
public void RestorePhoneNumber(){phone = null;}
public java.nio.IntBuffer newIntBuffer(int array_1_size){return newjava.nio.ReadOnlyIntBuffer(array_1_offset);}
public virtual void ReplaceRouteTableAssociation(RouteTableAssociation other){RouteTableAssociation r = other.RouteTableAssociation;}
public override TreeFilter CreateFilter(TreeFilter other){return other;}
public void Initialize(BundleWriter writer){Initialize(writer);}
public virtual UpdateAccountResponse UpdateAccount(UpdateAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateAccountResponseUnmarshaller.Instance;return Invoke<UpdateAccountResponse>(request, options);}
public PageItemRecord Create(RecordInputStream in1){return new PageItemRecord(in1, in1);}
public virtual IList<Hunk> GetHunks(){return Sharpen.Collections.UnmodifiableList(this._enclosing.hunks);}
public void WriteInt32(int value){_out.WriteInt32(value & 0x00000000FFFFFFFF, 8);}
public int Get(int index){return map[index];}
public Settings GetGlobalSettings(string name){return Sharpen.Extensions.GetValue(this, name, null);}
public virtual void EnterStandby(IToken token){if (token == null){return;}Enter(token.ToString(), true);}
public GetFramedPhotoUrlsRequest endpoint { get; set; }
public Tangent(int number){return _tangent(number);}
public virtual void TrimRule(int index){trimRule(index);}
public virtual void SetDeltaBaseCacheLimit(long value){deltaBaseCacheLimit = value;}
public void DeleteDeploymentConfig(DeploymentConfig deploymentConfig){this.deploymentConfig = deploymentConfig;}
public virtual ScriptDetail GetScriptDetail(){return scriptDetail;}
public void SeekBackwards(long pos){SeekTo(pos, off);}
public virtual NGit.Api.CommitCommand CreateCommitCommand(){return CommitCommand.Create(null, null, null);}
public endCellEval(){endEval();}
public bool hasNext(){return this._enclosing._next!= this._enclosing._end;}
public SearchQuery(SearchQuery query){return query.Boost(minDocs, maxDocs);}
public virtual string ToString(){return GetCanonicalName();}
public SorterConfig(int maxDocs){_maxDocs = maxDocs;}
public bool Equals(ExtendedFormatRecord rec){if (rec.FormatId!= null){return record.FormatId!= null;}return false;}
public virtual IParseTree ParseTree(XmlParser parser){return ParseTree(parser.Finish());}
public override string Threshold(){return "jarowinkler threshold(" + threshold + ")";}
public static Picture CreatePicture(Anchor anchor){return new Picture(anchor);}
public virtual void Complete(){DecisionTaskListener<TaskInstance> listener = null;IsDone = true;}
public void Close(){connection.Close();}
public virtual string get(string key){return getString(key, CultureInfo.InvariantCulture);}
public virtual ICollection<ChannelInfo> GetChannels(){return GetChannels(null);}
public string GetText(IVocabulary vocabulary){return vocabulary.ToString(null, NumberStyles.Integer, vocabulary);}
public ICollection<HsmClientCertificate> GetClientCertificates(){return GetClientCertificateByQuery(new QueryDefault());}
public virtual int endOffset(){return doc.getEndOffset();}
public FilterClassicTokenStream(TokenStream stream){return new FilterClassicTokenStream(stream);}
public virtual string ShortenNoteRefName(){return Sharpen.Runtime.ShortenNoteName(m_noteName);}
public virtual IParseTree.Node GetNextNodeInCanonicalTree(){return this.CanonicalTree.GetNextNodeInCanonicalTree(this);}
public virtual ICollection<E> GetValues(string name){return base.GetValues(name);}
public string DELETE_CODE { get; set; }
public virtual BillingDetail GetBillingDetail(){return billingDetail;}
public virtual string Get(string key){return map[key];}
public virtual void Update(object o){Update(o);}
public virtual IList<SecurityGroupReference> GetSecurityGroupsForSecurityGroup(string id){return allSecurityGroups(id, null);}
public virtual void SetOutput(Stream outputStream){_output = outputStream;}
public virtual void Add(IText text){this._enclosing.Add(text);}
public virtual void SetBreak(bool b){m_break = b;}
public virtual void Reboot(){Sharpen.Reboot(node.GetNode());}
public override HashFunction GetHashFunction(int version){return _enclosing.GetHashFunction(version);}
public virtual LogStreamCollection GetDatabaseLogStreams(){return ((HBaseDatabase)GetDatabaseHandle()).GetLogStreams();}
public Broker { public virtual Broker Create(BrokerConfig config){this.config = config;}
public override void MarkForReading(){delegate1.MarkForReading();}
public virtual void UpdateSmsChannel(UpdateSmsChannelRequest message){this.m_message = message;}
public virtual void SetBaselineTfFactors(int[] bs){_bs = bs;}
public new IntMapper(this, intMappers, capacity){return new IntMapper(this, capacity);}
public virtual int LastSentenceIndex(int start, int end){return indexOf(m_start, end);}
public virtual bool IsWithinBounds(VocabSymbol vocabularySymbol){return _isWithinBounds(vocabularySymbol.Bounds);}
public java.util.MapClass.View getViewOf(java.util.MapClass.Entry<K, V> key, V value){return this._enclosing.getViewOf(key, value);}
public virtual Explain explain(int doc, float freq){return explain(doc, freq);}
public virtual void Evaluate(IToken token){_token = token;}
public virtual IList<string> GetDocumentationVersions(){return documentationVersions;}
public virtual GetCustomerRequest GetCustomerRequest(int customerId){return new GetCustomerRequest(customerId, "GET");}
public ESCHERRecord[] Clear(){_eschers = new ArrayList();}
public HungarianLight stem filter: this will create aHungarian Light stem filter: this will create aHungarian Light stem filter: this.class_ = "hungarian-light-stem-filter";}
public virtual void Disassociate(devServerQosEvent message){throw new System.NotSupportedException("cannot dissociate a multicast domain from a Transit Gateway");}
public virtual string GetName(){return name;}
public FontOptions FontOptions = (_fontOptions) null;
public void Append(FilePath file){this.archive.Append(file);}
public virtual void SetNonLocalizedMessage(string v){m_nonLocalizedMessage = v;}
public virtual void Invite(IList<User> users){Invite(users, null);}
public CellElapsedFormatter(Pattern pattern){return new CellElapsedFormatter(pattern);}
public virtual SegmentVersion GetSegmentVersion(){return SegmentVersion.GetSegmentVersion();}
public virtual bool isOverflow(){return overflow;}
public override void Fill(byte[] b){Fill(b, 0, b.Length);}
public virtual ReceiveCommand.Result GetResult(){return status;}
public virtual VersionUpdate Update(){return VersionUpdate(null);}
public override string ToString(){return "0x" + this.GetType().Name + " " + this.GetValueOf("F");}
public virtual bool ShouldRename(bool rename){m_shouldRename = rename;return true;}
public virtual string CompareTo(object o){return ToString(o);}
public virtual void Start(){Sharpen.Scheduler.Start(this);}
public Interconnect(Node node){this.node = node;}
public override string ToString(){return RuleIndex.ToString() + ActionIndex.ToString();}
public virtual IList<string> GetCIDRs(){return _ipv4.GetCIDRs();}
public override int GetLevel(int distance){return GetCommonAncestorForDistance(distance);}
public virtual MergeChunk.Conflicts GetConflicts(){return conflicting.Copy()? conflicting.Copy() : conflicting.Get(oldPath);}
public static int GetCommonSubsequence(CharsRef other){return GetCommonSubsequence(other.CharsRef, other.CharsIndex);}
public virtual void DeleteBackup(BackupEntry backupEntry){Delete(backupEntry.Path, backupEntry.Options);}
public void DeleteTerminationCredentials(Amazon.GuardDuty.VoiceConnector requester){var options = new InvokeOptions();options.RequestMarshaller = DeleteTerminationCredentialsMarshaller.Instance;options.ResponseUnmarshaller = DeleteTerminationCredentialsResponseUnmarshaller.Instance;returned.Dispose(requester);}
public string pattern(s){return "this pattern(" + s + ")";}
public virtual Term GetTerm(){return term;}
public virtual byte[] Decode(byte[] bytes, int offset, int length){for (int i = offset; i < length; i++){byte b = Decode(bytes[i], 16);if (b!= null){int b1 = Decode(bytes, i + offset, length);int b2 = Decode(bytes, i + offset, length);int b3 = Decode(bytes, i + offset, length);for (int i = i + length; i < b3; i++){b3 = Decode(bytes, i + offset, length);}}return b3;}
public virtual void DeleteDBParameterGroup(string name){DeleteParameterGroupName(name);}
public override IList<Worker> GetWorkers(string type){return base.GetWorkers(type);}
public virtual void DeleteEndpoints(List<Endpoint> endpoints){for (int i = 0; i < endpoints.Count; i++){DeleteEndpoint(endpoints[i]);}}
public virtual natGatewayData GetNatGateways(){return _natGateways;}
public virtual int CalcMaxHeaderSize(BlockHeaderBlock block){return CalcMaxHeaderSize(block.fst, block.maxHeaderSize);}
public ImageScanner(byte[] data){_is = data;}
public virtual object get(){return this._enclosing.get(this.property_1);}
public virtual NGit.Mount.MountTarget Create(MountTarget target){return new NGit.Mount.MountTarget(this, target);}
public override bool IsInstance(object o){return o is DutchStemmer;}
public QueryAuthenticationRequest(QueryString query){_query = query;}
public virtual PollForActivityTaskResponse PollForActivityTask(PollForActivityTaskRequest request){var options = new InvokeOptions();options.RequestMarshaller = PollForActivityTaskRequestMarshaller.Instance;options.ResponseUnmarshaller = PollForActivityTaskResponseUnmarshaller.Instance;return Invoke<PollForActivityTaskResponse>(request, options);}
public virtual void copyObjectId(object id){copyObjectId(id.GetObject());}
public virtual DescribeDBParametersRequest DescribeDBParameters(string parameterGroupName){return new DescribeDBParametersRequest(parameterGroupName, null);}
public void DeleteEndpoint(int epID){DeleteEndpoint(epID, true);}
public virtual Search.Query GetQuery(string field){return null;}
public virtual IToken GetToken(){return tokens[pos];}
public virtual void SyncNames(ICollection<string> names){SyncNames(names);}
public virtual void DeleteLoadBalancer(int loadBalancerId){DeleteLoadBalancer(loadBalancerId, true);}
public virtual void Update(string existingModel){this.existingModel = existingModel;}
public virtual DescribeDomainResponse DescribeDomain(DescribeDomainRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDomainRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDomainResponseUnmarshaller.Instance;return Invoke<DescribeDomainResponse>(request, options);}
public virtual ReceiveFilter[] GetReceiptFilters(){return receiptFilters;}
public virtual IList<string> GetParts(){return parts;}
public AutoMLJob(string name, string description, IProgressMonitor monitor, IProgressMonitor monitor, IProgressMonitor monitor){return new AutoMLJob(name, description, monitor, InterruptMode.SingleShot, monitor);}
public virtual void SynchronizeMergeThreads(MergeThread[] m_mergeThreads){SynchronizeMergeThreads(m_mergeThreads, m_currentThread);}
public NameRecord Clone(NameRecord nameRecord){return nameRecord;}
public virtual ScalingPolicies DescribeScalingPolicies(){return scalingPolicies;}
public virtual void Subtract(int x, int y){if (x < 0){return;}else{SetInterval(x, y - x);}SetInterval(y, 0);}
public virtual void write(java.io.OutputStream outputStream){throw new System.NotImplementedException();}
public short Get(ICharSequence value){return (get(value) == null? -1 : value.Get(0)));}
public virtual string get(string key){return getString(key, CultureInfo.InvariantCulture);}
public virtual DescribeEndpointConnectionsResponse DescribeEndpointConnections(){return DescribeEndpointConnections(null, null, null);}
public virtual void decrement(object o){if (!o){throw new InvalidOperationException("o");}this._enclosing.decrementRefCount();}
public virtual DescribeImagesResponse DescribeImages(){return DescribeImages(null, null, null);}
public virtual string GetObjectId(){return objectId;}
public virtual void SendBonus(bonus @object){if (@object.MemberwiseOverride){@object.SetMemberwiseOverride(true, "memberwiseOverride")}else{@object.SetMemberwiseOverride(false, "memberwiseOverride")}
public virtual LaunchConfiguration CreateLaunchConfiguration(){return new LaunchConfiguration{CreateIfMissing=true,UpdateOnCreate = true,}
public override void put(long value){throw new System.NotImplementedException();}
public ExpandedDouble(long bits, int exponent){return new ExpandedDouble(bits, exponent);}
public virtual void listAdd(E e){object[] newElements = new object[elements.Length + 1];System.Array.Copy(elements, 0, newElements, 0, elements.Length);elements = newElements;}
public virtual void Reset(NameFinder other){Reset(other);}
public override bool ShouldExpire(){return sessionExpirationTime!= 0;}
public virtual void SetSelectExpression(string expr){m_select = expr;}
public virtual SegmentInfos GetSegments(){return SegmentInfos.GetSegments(this.CurrentDirectory, this.CurrentSegmentIndex);}
public virtual bool IsComparerThan(IRevision other){return CompareTo(other.Revision, this);}
public virtual void SetSort(string field){this.m_sort = field;}
public SearchFacesContext startSearch(SearchFacesContext startSearch){return _beginSearch(startSearch, 0, _startIndex, _endIndex);}
public virtual void Rebuild(Workspaces existing){RebuildInternal(existing);}
public virtual bool isRegistered(byte b){return base.isRegistered(b);}
public override void Serialize(byte[] b, int offset){if (m_offset == 0){m_offset = 0;}UnsafeWrite(b, offset + _position, m_buf, m_offset + _size);}
public virtual string Dequote(string s){return "'" + str+ "'";}
public virtual EncryptionProfile Get(string name){return null;}
public virtual void SetTimeout(int timeout){m_timeout = timeout;}
public override java.nio.IntBuffer duplicate(){return duplicate(this);}
public UpdateCacheParameterGroupRequest UpdateCacheParameterGroupRequest();return UpdateCacheParameterGroupRequest(null, "cacheParameterGroupName", "parameterNameValues");}
public static void DetachStaticIpAddress(string staticIpAddress){if (staticIpAddress!= null){unregister(staticIpAddress);}}
public override bool Equals(object o){if (o is DictionaryEntry){return base.Equals(o.getKey()) && base.Equals(o.getValue());}return false;}
public virtual IList<AssessmentTarget> GetAssessmentTargetsForApp(string app){return Sharpen.Collections.UnmodifiableList(app.GetAssessmentTargets()));}
public virtual CreateClusterResponse CreateCluster(CreateClusterRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateClusterRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateClusterResponseUnmarshaller.Instance;return Invoke<CreateClusterResponse>(request, options);}
public IP address { get; private set; }
public virtual void SendEmail(){_sender.SendEmail();}
public virtual DashboardsList GetDashboards(){return dashboardsList;}
public void CopyTo(IList<IPostage> areas){CopyTo(areas, 0, areas.Length);}
public bool case_sensitive = true; return false;}
public virtual void Modify(Brain db){this._enclosing.Modify(db);}
public virtual int index(int start){return index(start, start);}
public virtual int GetDeltaSearchWindowSize(){return deltaSearchWindowSize;}
public virtual MutableObjectId GetObjectId(){return entry.objectId;}
public network interface permission { add_net_interface_permission(name_1)}
public void RemoveBuiltinPrintArea(int index){RemoveBuiltinPrintArea(index);}
public java.lang.StringBuffer reverse(){return reverse((java.lang.StringBuffer)this._enclosing);}
public virtual RefGroup GetRefGroup(int ptg){return (_rc4.RefGroup)(((TermGroup)_rc4.RefGroup)_rc4.RefGroup).FirstChild;}
public virtual bool Equals(SegmentInfoAndLevels other){return SegmentInfosComparer.Equals(other.SegmentInfoAndLevels);}
public virtual string ToString(){return GetType().FullName;}
public virtual SubmoduleUpdateCommand CreateSubmoduleUpdateCommand(){return submoduleUpdate();}
public override void SetDirectory(string dir){base.SetDirectory(dir);}
public virtual void ensureCapacity(int capacity_1){ensure(capacity_1);}
public void DeleteParameterGroup(IParameterGroupName group){for (int i = 0; i < group.ParameterGroups.Count; i++){DeleteParameterGroupName(group[i]);}}
public virtual void SetTag(string key, string value){m_tag = key;}
public string GetAccessSecret(){return secret;}
public virtual List<Room> GetRooms(List<Room> criteria){var request = new ListRoomsRequest();return Room.ListRooms(criteria, _swaggerVersion, request);}
public virtual IPoint Get(int index){return points[index];}
public override string ToString(){return this.GetType().Name + "()";}
public override void SetCommitTaskParameters(string @params){base.SetCommitTaskParameters(@params);}
public virtual IStackElement Get(int index){return (IStackElement)stack[index];}
public ArabicNormalizationFilter Create(TokenStream input){return Create(input);}
public virtual IList<Breakpoint> GetBreakpoints(){return _breakpoints;}
public virtual string GetCanonicalName(){return GetCanonicalName();}
public virtual void SetNewHeads(IList<Head> heads){_newHeads = heads;}
public void SetCellContent(ICell content){_cellContent = content;}
public virtual solution{return new solution{user = this, group = this.group, };}
public override bool Equals(object o){if (o is java.nio.IntBuffer){return java.nio.IntBuffer.isInstance(o)){return java.nio.IntBuffer.isInstance(o);}return false;}
public virtual void DisassociateIPAddressBlock(IPAddressBlock block){_disassociateIPAddressBlock(block);}
public bool Equals(Value value){return _value == value;}
public settings file{openAPI.CreateOrUpdateFileSettings(file_1_filename, file_1_filename, settings);}
public virtual void printDouble(double v){print(v);}
public override void Parse(RecordInputStream in1){Parse(in1, in1.Current);}
public void WriteByte(int b){writeByte(b & 0xff);}
public virtual void DeleteInterconnect(Interconnect interconnect){_interconnect = null;}
public virtual int size(){return elements.Length;}
public virtual E get(int index){return _array[index];}
public virtual IRuleInvocationStack GetRuleInvocationStack(){return ruleInvocationStack;}
public java.util.regex.Matcher value = (_regexMatcher)->start();this.expected = value;}
public virtual string GetPrivateAsciiString(){return GetPrivateUnicodeString(false);}
public virtual void Delete (){_configuration = null;}
public DeleteDomainRequest(string domainName){_domainName = domainName;}
public virtual string ToString(){return GetEnumerator().Name;}
public override void write(java.io.Writer out1){out1.write(this.GetType().GetTypeInfo().FullName);}
public TreeFromTokens(IList<IToken> tokens){return new TreeFromTokens(tokens);}
public virtual java.util.Vector2d set(char[] elements, int start, int end){return set(elements, start, end);}
public virtual int GetHashCode(char c){return hash(c, 0, c.Length);}
public int ReadIndex(Record record){return index;}
public void RemoveRevisionNumberProperty(){_revNumber = null;}
public virtual UserInfo CurrentUser(UserInfo request){var options = new InvokeOptions();options.RequestMarshaller = CurrentUserRequestMarshaller.Instance;options.ResponseUnmarshaller = UserInfoUnmarshaller.Instance;return Invoke<UserInfo>(request, options);}
public virtual IList<BuildLog> GetLogs(int build){return build.GetLogs(null, true);}
public Extractor(IWorkbook workbook): base(workbook){this.workbook = workbook;this.indexInterval = 0;this.isHighWatermark = true;this.isLowWatermark = false;this.isHighWatermark = true;this.isHighWatermark = false;this.isHighWatermark = false;this.isHighWatermark = false;this.isLowWatermark = false;this.isHighWatermark = false;this.isHighWatermark = false;this.isHighWatermarkIsBlipIsBlipIsBlipIsBlipIsAway = false;this.isHighWatermark = false;this.isHighWatermark = false;this.isHighWatermark = false;this.isHighWatermark = false;this.isHighWatermark = false;this.isHighWatermark = false;this.isHighWatermark = false;this.isHighWatermark = false;this.isHighWatermark = false;this.isHighWatermark = true;this.isHighWatermarkIsBlipIsBlipIsBlipIsBlipIsAway = true;this.isHighWatermarkInvariant = false;this.isHighWatermarkInvariant = false;this.isHighWatermarkInvariant = true
public virtual ICollection<User> GetUsers(string username){return Users.GetUsers(username, null);}
public virtual void AddOutput(IOutput output){this._enclosing.AddOutput(output);}
public override string SuggestFileExtension(){return extname();}
public virtual DescribeUserStackAssociationsResponse DescribeUserStackAssociations(DescribeUserStackAssociationsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeUserStackAssociationsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeUserStackAssociationsResponseUnmarshaller.Instance;return Invoke<DescribeUserStackAssociationsResponse>(request, options);}
public override void CopyValueTo(MutableValueTo) object){base.CopyValueTo(object);}
public virtual void setValueAt(int index, V value){object[] newValues = new object[values.Length + 1];System.Array.Copy(values, index, newValues, 0, values.Length);}
public VpcLink(string vpcLinkType){return new VpcLink(vpcLinkType, vpcLinkType);}
public virtual double Atanh(double number){return Atan(number, 2);}
public override MutableValueGetResult GetDuplicate(MutableValueGetResult other){return other.GetDuplicate(other);}
public virtual void DetachVolume(FileDataInput in1){DetachVolume(in1);}
public virtual Builder<Fragment> newBuilder(IContentProvider<Fragment> contentProvider){return newBuilder(contentProvider);}
public void Add(RecordStream in1){Add(in1.GetRecord(in1.FieldIndex));}
public virtual string GetGroupName(){return Name;}
public virtual ModifyReplicationGroupResponse ModifyReplicationGroup(ModifyReplicationGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyReplicationGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyReplicationGroupResponseUnmarshaller.Instance;return Invoke<ModifyReplicationGroupResponse>(request, options);}
public virtual float GetSaturation(Filter b){return b.GetSaturation(c.filter, b.startBearing, b.endBearing);}
public virtual string list_get_next(){return list_get_first().key;}
public void Reset(E point){java.util.Iterator.Current current = point;}
public virtual byte[] GetBytes(){return _buf;}
public virtual java.util.MapClass.Entry<K, V>(){return this._enclosing.entries;}
public virtual void SetPrefix(string prefix){m_prefix = prefix;}
public virtual string GetActionDetail(){return this.GetActionDetail();}
public virtual IList<Step> GetSteps(){return steps;}
public virtual FieldLevelEncryptionProfileConfig GetFieldLevelEncryptionProfileConfig(){return null;}
public string domain and item names.are the same.  public string domainanditemnames(domainname, itemName) {domainname = domainName;itemname = itemName;}
public IndexedUDFFinderInstance(ExtendedDataAccess extendedDataAccess){return (IndexedUDFFinderInstance)Activator.CreateInstance(extendedDataAccess);}
public java.nio.ByteBuffer wrap(byte[] b){return new java.nio.ByteBuffer(wrap(b));}
public virtual void SetDataSource(DataSource dataSource){this.dataSource = dataSource;}
public virtual DescribeDeploymentsResponse DescribeDeployments(){return DescribeDeployments(null, null);}
public ValueEval GetExpressionAt(int sourceRow, int sourceColumn){return GetExpressionAt(sourceRow, sourceColumn);}
public virtual InsertInstanceResponse InsertInstance(InsertInstanceRequest request){return Invoke<InsertInstanceResponse>(request, null);}
public virtual string GetState().GetState().GetStateName(); return GetState().GetStateName();}
public override java.nio.LongBuffer wrapAsLongBuffer(java.nio.ByteBufferAdapter buf, int capacity, boolean wrap ){return new java.nio.LongBuffer(remaining(), backingArray, offset + _position, wrap);}
public override GreekStemFilterFactory Create(FSTParameters parameters){if (parameters == null){throw new ArgumentNullException("parameters cannot be null");}return base.Create(parameters);}
public void WriteU32(int v){WriteU32(v, _position, v.Length); }
public int deleteCharAt(int pos){return array.deleteCharAt(pos);}
public override bool IsValid(){return base.IsValid();}
public void SetFormatAndBitsPerValue(FormatAndBitsPerValue value){this.Format = value.Format;this.BitsPerValue = value.BitsPerValue;}
public virtual ICharError GetCharacterError(int index){return _lexer.GetError(index);}
public virtual Filter[] GetTrafficMirrorFilters(){return new Filter[]{getTrafficMirrorFilterList(this);}
public virtual void Update(MLModel existingModel){this.existingModel = existingModel;}
public String ToString(){return _cell.ToString();}
public ExpPtg(Ptg obj){ExpPtg _exp = new ExpPtg(obj.Ptg);return _exp;}
public virtual UploadDocumentsResponse UploadDocuments(UploadDocumentsRequest request){var options = new InvokeOptions();options.RequestMarshaller = UploadDocumentsRequestMarshaller.Instance;options.ResponseUnmarshaller = UploadDocumentsResponseUnmarshaller.Instance;return Invoke<UploadDocumentsResponse>(request, options);}
public TextComparer(IComparer<char> comparer){m_comparer = comparer;}
public virtual Inflater GetInflater(){return this;}
public virtual string ToString(IFormatProvider provider){return GetCanonicalName(provider);}
public CompositeReaderContext ( XmlReaderContext context){return (CompositeReaderContext)context.CopyTo(null, _configuration, 0, _configuration.Length);}
public string type { get; set; }
public InternetGatewayGateway(GatewayConfiguration configuration){this.configuration = configuration;}
public IrishLowercaseFilter Create(TokenStream input){return new IrishLowercaseFilter(m_luceneMatchVersion, input);}
public void RemoveAttributes(string findingsId){RemoveAttributes(findingsId, true);}
public virtual string SlopName(int slopIndex){return name;}
public override void Write(object o){WriteFloat(o);}
public virtual void ConsumeNext(){consume(true);}
public ApostropheFilterFactory(){return new ApostropheFilterFactory(this);}
public virtual void write(string b){write(b? "true" : "false");}
public Sheet ExternSheetIndexCheck(SheetIndex sheetIndex){CheckIndex(sheetIndex);return _externSheetIndexCheck(sheetIndex);}
public virtual void Grow(int size){for (int i = size; i < size; i++){System.Array.Copy(array, i, array.Length, _array.Length, _array.Length - i);_array.Length = i + 1;}}
public virtual void AssociatePhoneNumber(string phoneNumber){this.phoneNumber = phoneNumber;}
public virtual JourneyExecutionMetrics GetJourneyExecutionMetrics(){return metrics;}
public virtual bool Exists(int id){return Exists(id, true);}
public virtual NGit.Api.Agent ConfigureAgent(AgentConfig agentConfig){this.agentConfig = agentConfig;}
public virtual void ApplyPendingMaintenanceAction(IResource resource){ApplyAction(resource, "maintenance");}
public virtual Identity GetIdentity(){return identity;}
public override void SeekToNextTerm(IndexTerm term){SeekTo(term.Ordinal);}
public virtual Search.Query MakeSearchQuery(string field){return "search(\"" + field + "\")";}
public virtual void ThrowException(){throw new System.NotImplementedException();}
public virtual List<Rule> Get(string ruleId){return list(ruleId.Values).AsList(Rule.Value.Instance);}
public override void write(bool b){throw new System.NotImplementedException();}
public virtual bool IsPeered(Vpc vpc){return vpc.IsPeered;}
public virtual GetOutcomesResponse GetOutcomes(GetOutcomesRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetOutcomesRequestMarshaller.Instance;options.ResponseUnmarshaller = GetOutcomesResponseUnmarshaller.Instance;return Invoke<GetOutcomesResponse>(request, options);}
public void RemoveShape(Shape shape){patriarch.RemoveShape(shape);}
public recommender configuration { get; private set; }
public virtual void SetExpectedOldObjectId(ObjectId expectedOldObjectId){this.expectedOldObjectId = expectedOldObjectId;}
public void flush(){_writer.flush();}
public override JapaneseBaseFormFilterFactory CreateFilterFactory(IParameterRegistry parameters){return base.CreateFilterFactory(parameters);}
public virtual void DeletePeeringAttachment(string peeringId){transmitGateway.DeletePeeringAttachment(peeringId);}
public override bool contains(object o){return this._enclosing.containsKey(o);}
public virtual ModifyGlobalReplicationGroupResponse ModifyGlobalReplicationGroup(ModifyGlobalReplicationGroupResponse groupResponse){return ModifyGlobalReplicationGroup(groupResponse.ReplicationGroup, groupResponse.ModifyReplicationGroups, groupResponse.ModifyReplicationGroupsAndUpdatePosition);}
public virtual bool Equals(LexerChannelAction action){return action == null? false : action.Equals(this);}
public virtual void SetPath(string path){this.m_path = path;}
public virtual RevFilter[] CreateRevFilters(IList<RevFilter> list){return new ArrayList<RevFilter>(list.ToArray());}
public override int GetLevel(int distance){return GetCommonAncestorForDistance(distance);}
public override java.nio.CharBuffer getCharBuffer(){return _buf;}
public virtual bool SkipRequested(int count){skip = count;}
public virtual TermQuery SetTerm(TermQuery other){return other;}
public virtual bool Follows(TextFragment fragment){return this.Follows(fragment.Fragment) || this.isRoot;}
public bool Contains(object o){return _iterable.Contains(o);}
public virtual FilePath GetFile(){return file;}
public virtual void SwitchTo(IToken state){SwitchTo(state.GetLexicalState());}
public void WriteByte(int b){throw new System.NotImplementedException();}
public virtual void remove(){lock (this._enclosing){int oldSize = this._enclosing._size;this._enclosing.remove(this);this._enclosing._size = oldSize;this._enclosing.notifyDataSetRemoved();this._enclosing.notifyDataSetRemoved();this.declosing._size = oldSize;this.declosing._size = oldSize;}}
public virtual int GetDepth(){return this.depth;}
public virtual void remove(object o){remove(o);}
public override java.nio.DoubleBuffer duplicate(){return new java.nio.DoubleBuffer(this._enclosing);}
public virtual bool indeterminate(byte b){return indeterminate(b);}
public virtual string ToString(){return GetCanonicalName();}
public virtual LabelDetectionOperation GetOperationInformation(){return operation;}
public virtual void Enable(bool enable){if (enable){return;}if (false){return;}IdentityDgimService.enable(enable);}
public override void Set(E value){this._enclosing.Set(value);}
public TokenOffsetPayloadTokenFilterFactory(){return new TokenOffsetPayloadTokenFilterFactory(this);}
public virtual int GetValue(int index){return m_values[index];}
public virtual string ToString(){return PerfReport.ToString() + " version " + Version;}
public override float value(){return base.value();}
public FilterInstance(FilterInstance filterInstance){return filterInstance;}
public placement group(pgs){return _placementGroup(pgs, 0, 0);}
public java.lang.StringBuffer insert(char c){insert(c, 0, c.Length);return this;}
public virtual void SetFilter(ICharStream input){SetFilter(input);}
public int[] Get(string name){int[] values = _builder.Values;for (int i = 0; i < _builder.Count; i++){if (i == _builder.Values[i].Value){values[i] = _builder.Get(name, out _value) ;}}return values;}
public SpanishLightStemFilterFactory(){return new SpanishLightStemFilterFactory(this);}
public virtual bool IsNewFragment(ICharSequence text){return this.text.Length == 0;}
public virtual void remove(object o){iterator.remove(o);end++;}
public SearchRepoRequest(SearchRepoRequest request){var options = new InvokeOptions();options.RequestMarshaller = SearchRepoRequestMarshaller.Instance;options.ResponseUnmarshaller = SearchRepoRequestUnmarshaller.Instance;return Invoke<SearchRepoRequest>(request, options);}
public bool Contains(EntryName name){return Exists(name);}
public IEnumerator<K> KeysInMap(K key){return outerInstance.GetKeysInMap(key);}
public override void put(byte b){if (m_len >= m_buf.remaining()){throw new OutOfMemoryException("Buffer full");}m_len += b.remaining();}
public TextOffset and Length of Phonetic Textto be set.
public virtual void pop(){remove(this.tail);}
public virtual void insert(char c){insert(c, 0, c.Length);}
public int GetExternalSheetIndex(String sheetName){int index = _externalSheets.Get(sheetName);return index;}
public virtual ListGroupsResponse ListGroups(string username){return ListGroups(username, null, 0, 0);}
public void close(){throw new System.NotImplementedException();}
public virtual void remove(object o){remove(o);}
public virtual void SetNeedNewObjectIdIds(bool b){needNewObjectIdIds = b;}
public SubnetGroups GetSubnetGroups(){return _subnetGroupList;}
public virtual string attachedLabel(Label label){return label.ToString();}
public Rule Rule(List<FormattingRule> rules){return AddRule(rules);}
public virtual void SetFragmentSize(int size){m_fragmentSize = size;}
public virtual GetBrokerResponse GetBroker(GetBrokerRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetBrokerRequestMarshaller.Instance;options.ResponseUnmarshaller = GetBrokerResponseUnmarshaller.Instance;return Invoke<GetBrokerResponse>(request, options);}
public void seek(long pos){long filePointer = filePointer;filePointer = filePointer;}
public virtual int indexOf(string str, int index){return indexOf(str, 0, index);}
public virtual int NumDataNodes(){return _nodeCount;}
public virtual char[] getChars(){return new char[getChars()].Values;}
public virtual void Disassociate(RouteTable table){Disassociate( table.RouteTableRecord, table);}
public virtual UpdatePushTemplateResponse UpdatePushTemplate(int id){return UpdatePushTemplate(id, null);}
public virtual IList<EventBid> GetEventBids(){return eventBids;}
public virtual CodePointCharStream Create(string str){return Create(str, 0, str.Length);}
public virtual Query Build(IQuery other){return other;}
public virtual void DeleteStage(){DeleteStage(null);}
public Formula GetFormula(){return this;}
public virtual IList<Fleet> GetFleets(){return fleets;}
public override string ToString(){return this.GetType().Name + "()";}
public override string ToString(){return base.ToString() + "[]";}
public virtual void Invoke(E e){throw new InvalidOperationException(e.Message, e);}
public DeleteCollectionRequest(): base("/collections", "POST"){return pathOnSuccess;}
public void ReadByte(){_rc4.SkipTwoBytes();}
public virtual IPolicyOperations Policy { get; private set; }
public virtual void UpdateGameServerGroup(UpdateGameServerGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateGameServerGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateGameServerGroupResponseUnmarshaller.Instance;return;}
public virtual string trimEnd(){return trimEnd();}
public CacheSecurityGroup(string name){_name = name;}
public override java.nio.ByteBuffer encode(string @string){return base64.encode(string, "utf-8")}
public virtual IList<TaskSet> GetTaskSets(){return taskSetAllocator.ListTaskSets(){taskSetAllocator.ListUninitializedCalls(taskSet);}
public virtual int RowCount(IRowRecord row){return _rc4.XOrRecord.GetCellCount(row, 0);}
public virtual void EndOfErrorCondition(ITokenException token){ReportError(token.ErrorMessage, token);}
public virtual void Start(){start();end();}
public virtual CreateVolumeRequest CreateVolume(string availabilityZone, string snapshotId){return CreateVolume(availabilityZone, snapshotId, null);}
public override string ToString(){return GetDescription();}
public java.util.Date fromdouble(double value){return fromDateTime(value, timeZone);}
public virtual bool Equals(FileObject file){return file.GetLastModified() == file.GetLastModified() && file.GetName() == file.GetName();}
public default (int) {defaultTimeout = DEFAULT_TIMEOUT_MS;}
public virtual void SetInstancePlacement(InstancePlacement other){instancePlacement = other.InstancePlacement;}
public virtual NGit.Text.RichTextString Create(ICharSequence text, IPosition start, IPosition end){return new NGit.Text.RichTextString(text, start, end);}
public virtual void CreateInstancesFromSnapshot(ISnapshot snapshot){CreateInstances(snapshot.Instances, snapshot.Index);}
public virtual void DeleteChangeSet(DiffSet set){this.set = set;}
public string groupName { get; set; }
public BM-25 similarity function { get; private set; }
public virtual GetQueueUrlRequest GetQueueUrlRequest(){return new GetQueueUrlRequest(getQueueName());}
public virtual IList<EventSource> GetEventTrackers(){return eventTrackers;}
public virtual bool hasChanged(object o){return this._enclosing._size!= o.getSize();}
public trial(Trial trial){return trial;}
public virtual string NewPath(){return path;}
public String GetLastSheetName(ISheetIndex sheetIndex){return GetSheetName(sheetIndex);}
public void DeleteImagePermissions(byte[] permissions){ReadImagePermissions(permissions);}
public override ObjectId CreateObjectId(string id){return new ObjectId(id);}
public virtual NGit.Api.DirectConnectGatewayAssociation CreateAssociation(DirectConnectGateway gateway, DirectConnectGateway existingGateway){return (new DirectConnectGatewayAssociation(gateway, existingGateway));}
public virtual NGit.Collections.Collection CreateCollection(NGit.Collections.Classic.ParentOf parent){return (_collection = new NGit.Collections.Classic.ParentOf(parent));}
public override void Read(Record record){_in.Read(record);_end = record.Length;}
public void AddUtf8(string s){_end += s;}
public virtual Position GetPosition(int position){return position;}
public string nameFor(int r, int t){return string.Format(JGitText.Get().unresolvedNameFor[r], t);}
public virtual NGit.BatchRef.ReceiveCommand AddReceiveCommand(NGit.BatchRef.ReceiveCommand command){commands.Add(command);return this;}
public virtual void IncrementReplicationFactor(int replicationFactor){m_replicationFactor = replicationFactor;}
public override void Update(EncryptedKey publicKey){this.publicKey = publicKey;}
public int FindColor(PaletteColor paletteColor){int index = paletteColor.IndexOf(paletteColor);paletteColor = paletteColor;return paletteColor;}
public virtual int GetOrdinary(int docID){int v = GetDocumentID(docID);if (v == -1){return -1;}return v.GetOrdinary(docID);}
public virtual void IncrementRefCount(int refCount){count += 1;}
public virtual bool equals(object o){return this == o;}
public static string GetDefaultKmsKeyId(){return default(string)GatewayKey.GetDefaultKmsKeyId();}
public virtual SignalingChannelEndpoint GetInfo(){return info;}
public virtual void SetType(Type type){this._enclosing.Type = type;}
public override void put(byte b){throw new System.NotImplementedException();}
public void CopyUpdatedCells(HSSFWorkbook workbook, HSSFCellRecord cell){CopyUpdatedCells(workbook, cell);}
public void Flip(int length_1){buffer.Flip(length_1);}
public void SetValue(Object newValue){object property = value;if (property!= null){property.SetValue(newValue);}}
public virtual string GetRuleSummary(){return this.ruleSummary;}
public virtual TypeFilter CreateTypeFilter(TypeFilter typeFilter){return typeFilter;}
public virtual DescribeNotificationConfigurationsResponse DescribeNotificationConfigurations(DescribeNotificationConfigurationsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeNotificationConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeNotificationConfigurationsResponseUnmarshaller.Instance;return Invoke<DescribeNotificationConfigurationsResponse>(request, options);}
public virtual void write(java.io.OutputStream outputStream){throw new System.NotImplementedException();}
public virtual void DetectKeyPhrases(int index, String[] text){this.text = text;this.pos = index;this.detectingKeyPhrases = true;this.text.SetIndex(true);this.text.SetIndex(true);this.text.SetIndex(false);this.text.SetIndex(true);this.text.SetIndex(false);this.text.SetIndex(true);this.text.SetIndex(false);}
public virtual void SetOffsets(int[] offsets){m_offsets = offsets;}
public virtual void SetRetentionInDays(int value){retentionDays = value;}
public virtual void AddParentId(int parentId){if (parentId == 0){throw new System.ArgumentException("parent id cannot be zero");}if (parentId == 0){throw new System.ArgumentException("parent id cannot be negative");}array.Add(parentId, this.parentId);}
public virtual IXmlDocument Load(Stream input){return Load(input, 0, input.Length);}
public override int GetLevel(int distance){return GetCommonAncestorForDistance(distance);}
public override void Seek(int term){term = term << 3;}
public SimpleQQParser(){return this;}
public virtual byte[] Alloc(int size){if (_size == 0){return m_buf;}return (byte[])_size.Clone();}
public override WAH8DocIdSet Build(){if (this.wordNum!= -1){AddWord(wordNum, (byte)word);}return base.Build();}
public virtual ModifyFleetResponse ModifyFleet(ModifyFleetRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyFleetRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyFleetResponseUnmarshaller.Instance;return Invoke<ModifyFleetResponse>(request, options);}
public virtual GetGatewayResponse GetGateway(GetGatewayRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetGatewayRequestMarshaller.Instance;options.ResponseUnmarshaller = GetGatewayResponseUnmarshaller.Instance;return Invoke<GetGatewayResponse>(request, options);}
public virtual void Untag(string source, int flags){Untag(source, flags);}
public virtual void trim(){map.sizeChanged(false);}
public virtual NGit.Api.ForwardBinaryHunk GetForwardBinaryHunk(){return this;}
public virtual FreeRefFunction FreeRefFunction(String name){return _freeRefFunction(name);}
public virtual AuthorizerInformation GetAuthorizerInformation(){return authorizerInformation;}
public override bool IsInstance(object o){return base.IsInstance(o);}
public virtual string GetPopMode(){return mode;}
public virtual void Update(MLEvaluationContext context){this._enclosing.Update(context.Evaluate(context.currentSFSContext.expression));}
public void SetShort(short value){this._enclosing.SetShort(value);}
public virtual Path getparent(){return parent;}
public int GetFormattingRunIndex(){return index;}
public string Get(string key){return values[get(key)];}
public override void Read(Record record){int skip = 0;while (skip < _regCount){_regCount.ReadInt(record, this);skip++;_reg = _reg.ReadInt(record, this);}
public void Replace(Route route){m_routes.Replace(route.RouteKey, route.RouteValue);}
public virtual void Deregister(){Deregister(null);}
public virtual void AddTransition(Transition t){transitions.Add(t);}
public SynonymMap(FST input){this.input = input;this.output = output;}
public virtual NGit.Trie Create(Trie root){return new NGit.Trie(root);}
public override string ToString(){return base.ToString() + ":" + base.GetHashCode();}
public virtual void DeleteVPNGateway(Gateway gateway){GatewayResource.Delete(gateway);}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(this.GetType().Name);out1.WriteByte(_order);}
public virtual char read(char c){throw new System.NotImplementedException();}
public virtual GetLedgerResponse GetLedger(GetLedgerRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetLedgerRequestMarshaller.Instance;options.ResponseUnmarshaller = GetLedgerResponseUnmarshaller.Instance;return Invoke<GetLedgerResponse>(request, options);}
public virtual int32s decode(int 64){return decode(64, true)? 1 : 0;}
public virtual void PurchaseScheduledInstances(List<ScheduledInstance> scheduledInstances){_scheduledInstances = scheduledInstances;}
public virtual void CopyTo(Value source, Value destination){CopyTo(source, destination);}
public virtual IList<IParseTree> GetDescendants(IParseTree tree){return GetDescendants(tree.root, tree);}
public void Serialize(IStream stream){_writer.Serialize(stream, 0, stream.Length);_reader.Commit();}
public Amazon GuardDutyDetector{public AmazonGuardDutyProtocol detector = new AmazonGuardDutyProtocol(this);return detector;}
public override string ToString(){return this.GetType().Name + " table " + this.table.GetDisplayNames();}
public virtual AddInstanceGroupsToAccountFunction call(string @name){var args = new InvokeOptions();args.Fn = AddInstanceGroupsToAccountFunction.Instance;args.Region = Region;return Invoke<InstanceGroupsToAccountFunction>(this, args);}
public virtual void Delete(){_classifier = null;}
public virtual void Update terminationProtectionSettings(App app){UpdateAppTerminationSettings(app, null);}
public override TreeFilter Clone(){return this;}
public virtual void unread(char b){if (buf.Length == 0){throw new System.IO.IOException("Buffer is full");}buf[pos++] = b;pos--;}
public virtual void Delete(FilePath folder){Delete(folder.FullName, true);}
public virtual string GetText(IToken token){return GetTokenString(token);}
public override int GetVersion(){return _version;}
public virtual string GetTranslation(int index){return null;}
public virtual void Build(){base.Build();}
public virtual bool IsSymbolic(IToken token){return _token.IsSym();}
public virtual long Decode(long value){return BitConverter.Int64BitsToDouble(value);}
public virtual string get(char b){return buf.get(b, b.pos, b.len);}
public void SetImageIdMinCount(int minCount){this.imageId = minCount;this.maxCount = maxCount;}
public virtual int GetHashCode(){return _hkey.GetHashCode();}
public virtual void SetOutputStream(Stream outputStream){_out = outputStream;}
public override void close(){_is = false;}
public EscherDggRecord GetRef(){return _escherDggRecord;}
public virtual Stemmer GetStem(string str){return StemmerUtil.Stem(str, m_luceneMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_luceneMatchVersion, m_matchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_matchGroups, m_matchGroups, m_matchGroups, m_matchGroupsToMatchGroups, m
public void SetParameters(IDictionary<string, string> parameters){this.m_parameters = parameters;}
public virtual void AssociateFleetWithApp(Fleet fleet){this.fleet = fleet;}
public override TreeFilter Clone(){return this;}
public Formula String(IFormulaWorkbook existingWorkbook, IList<PTG> ptgs){return String.Format(JGitText.Get().formulaString, existingWorkbook);}
public virtual Fleets Describe(){return _list.GetChildren();}
public override String ToString(){StringBuilder sb = new StringBuilder(64);sb.Append(this.GetType().Name);sb.Append(", ").Append(this.Formula.Value);sb.Append("]");return sb.ToString();}
public NewAlbum(Cloud Photo, PhotoType albumType){return new NewAlbum(this, albumType);}
public IList<Image> GetCompatibleImages(){return supportedImages();}
public string StructureToString(){return "Structure " + Structure;}
public bool Get(int index){return _bitMap[index];}
public override void Start(){base.Start();}
public java.nio.BufferPool_begin(m_startIndex, m_endIndex);}
public Batch(int n){if (n == 0){return Batch(null, 0);}Batch(n, 0);}
public virtual void AddFieldsToDocument(ICollection<string> fields){foreach (string name in fields){AddFieldToDocument(fields[name]);}}
public InitCommand(){return (new InitCommand(this));}
public virtual bool contains(object o){return this._enclosing.containsKey(o);}
public int GetFontIndex(Font font){return font.Index;}
public virtual void SetField1(int v){field_1_value = v;}
public NPOI.SS.UserModel.IChildRecord GetChildRecord(int id){return _childRecords[id];}
public virtual DescribeDomainResponse DescribeDomain(DescribeDomainRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDomainRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDomainResponseUnmarshaller.Instance;return Invoke<DescribeDomainResponse>(request, options);}
public virtual HealthCheckResponse GetHealthCheck(HealthCheckRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetHealthCheckRequestMarshaller.Instance;options.ResponseUnmarshaller = GetHealthCheckResponseUnmarshaller.Instance;return Invoke<HealthCheckResponse>(request, options);}
public java.net.URI newURI(string parameters){throw new System.NotImplementedException();}
public virtual BooleanQuery Build(){return this;}
public void DrawArc(IShape shape, int arcCount, IShape shape2, IShape shape3, IShape shape4){Arc arc = (Arc)shape;Ease m = shape;To(arc, m, 0, arcCount, 0.5f, arcCount, 0.5f, arcCount, 0.5f, arcCount, 0.5f, arcCount, 0.5f, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount, arcCount
public virtual void Insert(string str, int offset, char[] buffer, int length){if (offset < 0){throw new System.IndexOutOfRangeException("offset " + offset + " is out of bounds");}buffer[offset] = str;offset += str.Length;}
public virtual Contributor Insights Describe(StreamingContext context){return _enclosing.Describe(context.GetRightPos()) || _enclosing.Describe(context.GetLeftPos()) || _enclosing.Describe(context.GetRightPos()) || _enclosing.Describe(context.GetBottomPos()) || _enclosing.Describe(context.GetTop(), true));}
public virtual void put(object o){if (!(o is java.util.Hashtable<K, V>)){throw new System.NotImplementedException();}if (this.size == this.limit){throw new java.util.Hashtable<object, object>();}this[o] = this.get(o);}
public virtual void SetTagger(Tagger tagger){tagger = tagger;}
public void Initialize() {shapeGroup = new HSSFShapeGroup(this);}
public DefaultKeyValuePair(FileStream file){return default_key_pair;}
public IEnumerator<V> GetEnumerator(){return this._enclosing.GetEnumerator();}
public override void Read(Record record){_in.Read(recalcIdRecord);}
public override string ToString(){return Convert.ToString(this, CultureInfo.InvariantCulture);}
public Ptg(Ptg input){return Create(input);}
public virtual bool Validate(){return parser!= null;}
public virtual int Hash(char[] array){return Sharpen.Util.GetHash(array, 0, array.Length);}
public virtual string GetConsoleOutput(){return _console.GetOutput();}
public virtual IList<IToken> GetHiddenTokensToRight(IList<IToken> tokens){return GetHiddenTokensToRight(tokens);}
public virtual void Add(object o){Add(o);}}
public virtual IPSet Information(IPSet set){return information;}
public virtual bool contains(object o){return this._enclosing.contains(o);}
public NGit.Treewalk.QueryTermDescr NotQueryTermDescr: IQueryTermDescr{IsBranch = (IsBranch == true)? "TRUE" : "FALSE";}
public virtual int count(void) {lock (@lock){return c.count();}}
public string Like(object o){return (((lt)? "&lt;" : "&gt;") + o +")";}
public virtual string GetErrorEval(){return GetErrorEval(GetErrorEvalContext());}
public new Normalizer2CharacterFilterFactory(){return new Normalizer2CharacterFilterFactory(this);}
public virtual void Update(DiffEntry){Update(null);}
public virtual void Delete(){this._enclosing.Delete(this.c2n.ObjectId);}
public virtual void SetObjectId(ObjectId id){field_1_objectId = id;}
public virtual DBParameters GetDBParameters(){return DBParameters.Like(this)? this._enclosing.GetParameters() : null;}
public virtual IList<IParseTree> GetParseTrees(Label label){return allParseTrees;}
public override bool IsInternalDateFormat(){return false;}
public BRAIRecordFormatterBase.SetDateFormat(culture);return this;}
public virtual ReceiveCommand.StackDriftOperationResponse ReceiveCommand(StackDriftOperationResponse * resp) {return Response.StackDriftOperationResponse_1(resp.ToString());}
public void ModifyOptionGroup(OptionGroup existingOptionGroup){this.optionGroup = existingOptionGroup;}
public ListPartsRequest(ListPartsRequestParameters parameters){var request = new ListPartsRequest(parameters);request.SetDefaultRequestMarshaller(DefaultRequestMarshaller.Instance);request.SetDefaultResponseUnmarshaller(DefaultResponseUnmarshaller.Instance);return request;}
public virtual void SetDeleteRequestParameters(string requestParameters){_deleteRequestParameters = requestParameters;}
public virtual void append(char c){append0(c);}
public string GetAccessKeyId(){return _accessKeyId;}
public bool reuseObjects(){return _reuseObjects;}
public webhook_delete_request_parameters(string field_1_name){return {_method = "DELETE", _path = field_1_name, };}
public VoiceConnectorGroup CreateVoiceConnectorGroup(VoiceConnectorGroup other){return other;}
public virtual int nextDocId(IndexInput in_the_positions) || 1;
public new file system from backup. (Note: this creates a new file system from a backup). (Note: this creates a new file system from a backup). (Note: this creates a new file system from a backup). (Note: this is a new file system)
public virtual void SetAnalyzerParameters(AnalyzerParameters parameters){this.m_analyzer = parameters;}
public taxonomy_size_t(int value){taxonomy_size = value;}
public virtual void Invite(InviteMemberContext members){foreach (InviteMemberContext member in members){Invite(member);}}
public virtual IList<E> GetRoots(){return Sharpen.Collections.UnmodifiableList(roots);}
public void Clear(){_buf.Clear();}
public virtual void SetInstanceIds(int instanceIds){_instanceIds = instanceIds;}
public virtual bool contains(object o){return map.containsKey(o);}
public virtual string GetPrivateKey(){return publicKey;}
public virtual IList<char> StemmedChars(word word){return StemmedChars(word.Text, word.Length, 0);}
public ZonalPlacementOptions availabilityZone { get; set; }
public virtual BlameGenerator New(Repository repository, string path){return new BlameGenerator(repository, path, null, null);}
public virtual IList<Revision> GetRevisions(string appName){return Sharpen.Collections.UnmodifiableList(list(Sharpen.Collections.UnmodifiableList(appName))) {}
public virtual inflection.InflectionForm GetInflectionForm(int doc){int pos = _position;string inflection = GetInflectionForm(doc, start, end);return inflection;}
public CalcMode GetCalcMode(){return CalcMode;}
public java.util.regex.MatchResult newMatch(){return newMatch();}
public virtual void SyntaxError(string message){Listeners.NotifySyntaxError(message, 0, message);}
public int k_1(int k_1){return _tree.GetLargestValue(k_1);}
public Policy(int id, IList<Statement> statements){return new Policy(id, statements);}
public virtual bool ShouldUpdate(UpdateRequest request){var options = new InvokeOptions();options.RequestMarshaller = InvokeOptionsMarshaller.Instance;options.ResponseUnmarshaller = ResponseUnmarshaller.Instance;return Invoke<UpdateRequest>(request, options);}
public virtual void Begin(ITask task){Begin(task);}
public virtual GetCrossAccountAccessRoleResponse GetCrossAccountAccessRole(GetCrossAccountAccessRoleRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetCrossAccountAccessRoleRequestMarshaller.Instance;options.ResponseUnmarshaller = GetCrossAccountAccessRoleResponseUnmarshaller.Instance;return Invoke<GetCrossAccountAccessRoleResponse>(request, options);}
public AuthorizationRequest CreateAuthorizationRequest(string namespace){var request = new AuthorizationRequest();request.Namespace = namespace;return request;}
public BigInteger Rounds(BigInteger number, int bits){return Rounds(number, 0, bits);}
public override ICollection<string> GetValues(string field){return base.GetValues(field);}
public override void Read(RecordInputStream in1){_in1.Read(formula1);_in1.Read(formula2);}
public virtual void RecordVersion(Searcher searcher){this.m_searcher = searcher;this.m_version = searcher.RecordVersion();}
public virtual IList<Server> GetGameServers(){return GetGameServersInternal(null);}
public override String ToString(){StringBuilder sb = new StringBuilder(64);sb.Append(this.GetType().Name);sb.Append(", ").Append(this.Formula.Value);sb.Append("]");return sb.ToString();}
public override string GetFilterPattern(){return pattern;}
public bool fill(bool[] array, int value, int arrayIndex, int arrayIndex, int arrayIndex, int arrayIndex, int arrayIndex, int arrayIndex, int arrayIndex, int arrayIndex, int arrayIndex, int valuesIndex, int valuesIndex, int valuesIndex, int valuesIndex, int valuesIndex, int valuesIndex, int valuesIndex, int valuesIndex, valuesIndex, valuesIndex, valuesIndex, valuesIndex, valuesIndex, valuesIndex, valuesIndex, valuesIndex, valuesIndex, valuesIndex, valuesIndex, valuesIndex, valuesIndex);return valuesIndex;}
public virtual void Unsuspend(){user.Unsuspend();}
public virtual java.nio.CharSequenceBuffer subSequence(java.nio.CharBuffer @object){return new java.nio.ReadWriteCharArraySequence(this._enclosing);}
public void Write(PtgFunction function){_out = null;_size = function.GetSize();}
public IndexOutput(OutputName name, IOContext ioc) : base(name, ioc){this.name = name;this.ioc = ioc;this.ioc = ioc;}
public void ReadHeader(RecordInput in1){_in1.ReadShort();_rc4.SkipTwoBytes();_rc4.StartRecord(in1);_rc4.EndRecord(in1);_rc4.RecordEnd();}
public virtual UpdateIntegrationResponse UpdateIntegrationResponse(UpdateIntegrationResponse _response){return _response;}
public virtual void appendDouble(double value){appendInternal(value);}
public override byte order(){return data.order();}
public virtual void SetException(string t){m_exceptions.AddItem(t);}
public NameRecord GetBuiltInNameRecord(int code, int sheet){return _builtInNames[code];}
public override void Read(IndexRecord record){_in.Read(record);_size = record.Size;}
public virtual IPAddress Advertise(InetAddress address){return IPAddress.Parse(address, IP_MAX_ADDRESS_LEN);}
public virtual int getFlags(){return _flagData;}
public virtual bool IsKnown(Type type){return type.GetTypeInfo().IsIndexed;}
public formula string(IList<FormulaAttribute> operands){return _formula.generate(operands);}
public override byte ReadByte(){return delegate1.ReadByte();}
public virtual void printLine(string line){print(line, 0, line.Length);}
public override int ReadShort(){return delegate1.ReadShort();}
public NPOI.SS.UserModel.IDataValidation Create(HSSFDataValidation dataValidation){return new HSSFDataValidation(dataValidation);}
public virtual bool Validate(ConstraintSet constraintSet){return false;}
public override int GetLevel(int distance){return _le.GetLevel(distance);}
public void InsertCell(ICell cell){_cells.Insert(0, cell);}
public virtual void compact(){_le.compact();}
public int row_last_col = 0;public int last_col = 0;{for (int i = 0; i < dummyRecords.Length; i++){if (i == 0){last_col = i + 1;break;}}}
public virtual int GetTokenScore(){return score;}
public override void Set(string value){throw new System.NotImplementedException();}
public override void Flush(){buffer.Flush();}
public virtual List<VaultReference> GetVaults(){return vaults;}
public EvaluationTracker(){this.cache = new EvaluationCache(this);}
public virtual bool equals(byte[] array1, byte[] array2, byte[] array3, byte[] array4, int[] array5, int... array6){return equals(array1, array2, array3,... array6, 0, array6.Length);}
public bool Get(int index){return _bitMap[index];}
public virtual IndustryListTypeEnumerator GetIndustryListTypeEnumerator(){return _industryList.GetEnumerator();}
public Sheet GetSheet(String sheetName){int index = _sheetNames.GetIndex(sheetName);return _sheetIndexes[index];}
public virtual bool charArraysEqual(char[] array, int arrayIndex){return charArraysEqual(array, 0, arrayIndex);}
public void Read(Record record){_in.Read(record);_size = record.Size;}
public void RemoveResourceRequestPermission(ResourceRequestPermission request){_request = request.Unmarshaller.GetRequest(RequestType.GET_REQUEST);_resourcePermission = null;}
public DFA Clears the DFA.
public override KeyValuePair Get(string key){return this.Get(key, key.Length - 1);}
public virtual void Insert(object o, IList<object> arg0, IList<object> arg1, IList<object> arg2, IList<object>> arg3, IList<object>> arg4, IList<object>> arg5,... arg6){if (arg6 is IList<object> arg6 = arg7.Insert(arg6.Index, arg6.Arguments, 0, 3)){foreach (object o in arg6.Arguments){Insert(o, arg6.Element1);}}}
public virtual string ToString(){return GetCanonicalName();}
public virtual void grow(int count){for (int i = 0; i < count; i++){grow(count);}}
public virtual IEvaluationJob GetEvaluationJob(IEvaluationJob other){return other.GetEvaluationJob(other);}
public virtual DescribeLaunchTemplateVersionsResponse DescribeLaunchTemplateVersions(DescribeLaunchTemplateVersionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLaunchTemplateVersionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLaunchTemplateVersionsResponseUnmarshaller.Instance;return Invoke<DescribeLaunchTemplateVersionsResponse>(request, options);}
public CompositeReaderContext CreateReaderContext(XmlReader reader){return (CompositeReaderContext)CreateReader(reader, 0, 0);}
public ObjectLoader OpenObjectLoader(DiffEntry diffEntry){return ObjectLoader.Open(diffEntry.NewContext, diffEntry.NewObjectId, diffEntry.NewDiffEntry);}
public virtual string subsequence(string str){return split(str, str.Length - 1);}
public virtual IList<LLLDecision> GetLLLDecisions(){return _lll.getDecisions();}
public virtual SaveTaskForSubmittingDomainRealNameVerificationByIdentityCredentialRequest CreateTaskForSubmittingDomainRealNameVerificationByIdentityCredentialRequest(IdentityCredentialRequest request){var options = new InvokeOptions();options.RequestMarshaller = SaveTaskForSubmittingDomainRealNameVerificationByIdentityCredentialRequestMarshaller.Instance;options.ResponseUnmarshaller = SaveTaskForSubmittingDomainRealNameVerificationByIdentityCredentialRequestUnmarshaller.Instance;return Invoke<SaveTaskForSubmittingDomainRealNameVerificationByIdentityCredentialRequest>(request, options);}
public IPv4Pool[] GetPoolList(){return GetPoolList(null, null);}
public virtual RefGroup GetRefGroup(int ptg){return (_rc4.RefGroup)(((TermGroup)_rc4.RefGroup)_rc4.RefGroup).FirstChild;}
public virtual FrameRecord Create(RecordInputStream in1){return new FrameRecord(in1, in1.FieldIndex, in1.ReadShort(), in1.ReadShort());}
public BRAIRecordSink_t set_numerator_and_denominator(BRAIRecordSink_t numerator_and_denominator){this.numerator_ = numerator_and_denominator;}
public GetSubscriptionResponse GetSubscription(GetSubscriptionRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetSubscriptionRequestMarshaller.Instance;options.ResponseUnmarshaller = GetSubscriptionResponseUnmarshaller.Instance;return Invoke<GetSubscriptionResponse>(request, options);}
public override java.nio.FloatBuffer get(){return _backingArray.get(backingArray.index());}
public virtual IList<FacetAttribute> GetFacetAttributes(FacetFacet facet){return facet.GetAttributes();}
public virtual string GetResultPath(){return path;}
public ShingleFilterFactory(params object[] args){_args = args;}
public override bool IsPunctuationChar(char ch){return false;}
public virtual NGit.Api.DiffCommand SetPathFilter(string pathFilter){this.pathFilter = pathFilter;return this;}
public virtual MatchAllDocsQuery Build(IQueryNode query){return null;}
public void Merge(RecordInputStream in1){Merge(in1.Record, in1.CurrentRecord, in1.CurrentColumn, in1.CurrentRow, in1.CurrentColumn, in1.CurrentRow, in1.CurrentColumn, in1.CurrentRow, in1.CurrentColumn, in1.CurrentRow, in1.CurrentColumn, in1.CurrentRow, in1.CurrentColumn, in1.CurrentRow, in1.CurrentColumn, in1.CurrentColumn, in1.CurrentColumn, in1.CurrentColumn, in1.CurrentColumn, in1.CurrentColumn, in1.CurrentRow, in1.CurrentColumn, in1.CurrentRow, in1.CurrentColumn, in1.CurrentRow, in1.CurrentColumn, in1.CurrentRow, in1.CurrentColumn, in1.CurrentRow, in1.CurrentColumn, in1.CurrentColumn, in1.CurrentColumn, in1.CurrentColumn, in1.CurrentColumn, in1.CurrentColumn, in1.CurrentColumn, in1.CurrentColumn, in1.CurrentColumn, in1.CurrentColumn, in1.CurrentColumn, in1.Current
public char[] set(char[] array){return set(array, 0, array.Length);}
public virtual bool Equals(Ref @ref){return @ref.Equals(this.@ref) && @ref.GetName() == this.@ref.GetName());}
public override bool Done(){return true;}
public override java.nio.DoubleBuffer duplicate(){return duplicate(this._enclosing);}
public virtual bool Equals(WeightedPhraseInfo other){return Equals(other, null);}
public virtual bool IsLegalReplacement(byte[] b){return _le.IsLegalReplacement(b);}
public MonitoringScheduleInstance CreateOrUpdateMonitoringSchedule(MonitoringScheduleInstance scheduleInstance){return monitoringScheduleInstance;}
public virtual SendBounceRequestResponse SendBounceRequest(SendBounceRequest request){return Invoke<SendBounceRequestResponse>(request, DEFAULT_TIMEOUT);}
public override object Get(int index){return this._enclosing.Get(index);}
public virtual IList<RoutingProfile> GetRoutingProfiles(){return routingProfiles;}
public override ICollection<String> GetFunctions(){return supportedFunctions;}
public ICUTransformFilter Create(ITokenStream input){return Create(input, 0, input.Length);}
public virtual int GetMaximumBytesPerCharacter(){return _string.GetMaximumBytesPerCharacter() + 1;}
public override string ToString(){return "0x" + (long)toHexString(fromString());}
public virtual ParameterGroup CopyParameterGroup(ParameterGroup group){return new ParameterGroup(this, group.Parameters, group.Clusters, group.ClustersIndex);}
public virtual RequestSpotFleetResponse RequestSpotFleet(RequestSpotFleetRequest request){var options = new InvokeOptions();options.RequestMarshaller = RequestSpotFleetRequestMarshaller.Instance;options.ResponseUnmarshaller = RequestSpotFleetResponseUnmarshaller.Instance;return Invoke<RequestSpotFleetResponse>(request, options);}
public override bool HasMoreData(){return base.HasMoreData();}
public override string ToString(){return "0";}
public virtual SkillGroup CreateSkillGroup(SkillsGroup materials){return CreateInternalSkillGroup(materials);}
public virtual void PromptForPassphrase(){_prompt = true;}
public virtual void BatchUpdate(BatchUpdateRequest request){var options = new InvokeOptions();options.RequestMarshaller = BatchUpdateRequestMarshaller.Instance;options.ResponseUnmarshaller = BatchUpdateResponseUnmarshaller.Instance;return;}
public virtual ExportJobDetail GetExportJobDetail(){return _exportJobDetail;}
public virtual ListProfilesResponse ListProfiles(ListProfilesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListProfilesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListProfilesResponseUnmarshaller.Instance;return Invoke<ListProfilesResponse>(request, options);}
public virtual long GetStartOffset(){return file.GetOffset();}
public void Write(int b){Write0(b? 0 : 1);}
public virtual PublishingDestinationDetail GetPublishingDestinationDetail(){return _publishingDestinationDetail;}
public override void FillFields(byte[] data, int offset, int length){for (int i = offset; i < length; i++){FillField(data, i);}}
public void WriteSid(Output os){out.WriteShort(sid);}
public Data Label Extension Record(s){return ReadDataLabelExtensionRecord(null, reader, 0, 0);}
public virtual string GetLanguage(){return language;}
public virtual void Stem(int start, int end){if (start < start && end > start){regionName = start.Name;startOffset = start.Offset;endOffset = end.Offset;regionName = regionName.Stem(start, end);regionName = regionName.Stem(end, end);}
public virtual string GetCategoriesFilePath(){return categoriesFilePath;}
public override TreeFilter Clone(){return this;}
public java.util.Iterator<E> entries(){return _list.iterator(this);}
public virtual string GetUserName(){return userName;}
public void Restore(){this._enclosing.Restore();}
public DFA State(DecisionState decisionState){return new DFA(decisionState);}
public void DeleteResolverEndpoint(string endpointID){DeleteResolverEndpoint(endpointID);}
public Set<string> GetSchemes(){return Sharpen.Collections.EmptySet<string>();}
public virtual IList<RefSpec> GetRefSpecs(){return Sharpen.Collections.UnmodifiableList(ref_specs);}
public override TreeFilter Clone(){return this;}
public virtual bool contains(object o){return contains(o);}
public virtual void Grow(int rows){Grow(rows);}
public virtual IList<LuceneSubQuery> GetTerms(){return subTerms.GetTerms();}
public virtual float GetAvgQualityStats(){return GetAvgQualityStats()/(m_len + 1);}
public void Downsizes(SaturationSet set){Downsizes(set.MaxSat, set.MaxSat);}
public virtual void ReadDropData(int index){_input.ReadDropData(index);}
public FilterInstance(TokenStream input){return new FilterInstance(input);}
public Role(string roleName){_roleName = roleName;}
public override String ToFormulaString(){return "";}
public virtual void Skip(int skip){Skip(skip);}
public virtual void Start(){start = true;end = false;}
public string getPath(){return path;}
public virtual NGit.Api.SubmoduleSyncCommand Initialize(){return this;}
public virtual NGit.Api.Bot CreateBot(NGit.Api.BotConfig botConfig){return CreateBot(botConfig, null);}
public FontRecord GetFontRecord(int index){return fontRecords[index];}
public override KeywordMarkerFilterFactory Create(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9, int arg10, int arg11, int arg12, int arg13, int arg13, int arg12, int arg13, int arg13, int arg14, int arg15, int arg16, int if16, if32, if32, if32, if32, if32, if32, if32, if32, if32, if32, if32, if32, if32, if32, if64, if64, long. Format(CultureInfo.InvariantCulture, "keyword"), arg12, arg13, arg14, arg15, "keyword")){return new KeywordMarkerFilterFactory(arg12, arg15, arg16, arg16, arg16, arg17, arg18, arg18, arg18, arg19, arg19, arg19, arg19, arg19, arg19, arg19, arg19, arg20]){return null;}return null;}
public virtual void AddUtf8EncodedString(string cs){a.Add(cs);}
public virtual NGit.Api.UserModel CreateInstance(string name){this.name = name;}
public virtual void Reset(int start){m_start = start;}
public virtual int read(byte b){throw new System.NotImplementedException();}
public string Format(OutputBytesRef @out){return Format(m_bytes, 0, m_bytes.Length);}
public override int GetResultTreeId(){return this.treeId;}
public override StemFilter Create(int capacity){return new EnglishMinimalStemFilterFactory(capacity);}
public virtual void remove(object o){if (!(o is java.util.SettableArrayList<V>.SettableArrayList<V>.SettableArrayList<V>.SettableArrayList<V>.SettableArrayList<V>.SettableArrayList<V>.SettableArrayList<V>.SettableArrayList<V>.SettableArrayList<V>.SettableArrayList<V>.SettableArrayList<V>.SettableArrayList<V>.SettableArrayList<V>.SettableArrayList<V> cset = accessed(params)){flags = cset.without(o);}}
public Sheet GetSheetName(int index){return _externSheetIndex.GetSheetName(index);}
public virtual UpdateTrafficPolicyResponse UpdateTrafficPolicy(UpdateTrafficPolicyResponse result){return UpdateTrafficPolicy(result.TrafficPolicyRecord);}
public virtual ICommitter GetSourceCommitter(int index){return sourceCommitter;}
public override string ToString(){return this.operator.ToString();}
public HyphenationCompoundWordTokenFilterFactory(){return new HyphenationCompoundWordTokenFilterFactory(this);}
public string pattern(){return "pattern(" + pattern + ")";}
public FormulaConstraint(FormulaSpec spec){return new FormulaConstraint(this, spec);}
public virtual void insert(int offset, double value){append0(offset, Constants.DOUBLE_SEPARATOR);}
public virtual IList<Modification> GetModifications(VolumeReference volume){return listObjects(volume.GetModifications(volume));}
public virtual string ToString(){return GetCanonicalName();}
public String ToString(){return _cell.ToString();}
public DBSnapshotIdentifier, DBInstanceIdentifier { get; set; }
public virtual DiffConfig.RenameDetectionType GetRenameDetectionType(){return type;}
public virtual bool RequiresCommit(Statement st){return false;}
public virtual void DeleteBuild(Build build){this.build = null;this.pending = null;}
public RuleRegionAdd(RuleRegion rule){regions.Add(rule);return this;}
public WindowTwoRecords(Stream in1){int field_1_windowTwo = in1.ReadUByte();int field_2_options = in1.ReadUByte();int field_3_options = in1.ReadUByte();int field_4_options = in1.ReadUByte();int field_5_windowTwo = in1.ReadUByte();int field_6_options = in1.ReadUByte();int field_7_options = in1.ReadUShort();if (field_4_windowTwo!= null){field_6_windowTwo = in1.ReadUByte();}if (field_5_windowTwo!= null){field_5_options.FillEmptyValues = in1.ReadByte();}return field_5_options;}
public virtual InterfaceGroup resource{get; internal set; }
public bool EndsWith(string ext){return File.EndsWith(ext, ext);}
public override void streamUnfiltered(java.io.InputStream @in){throw new System.NotImplementedException();}
public virtual void RemoveChild(Record record){_childRecords.Remove(record);}
public virtual InterfaceData { get; private set; }
public void Serialize(ILittleEndianOutput out1){out1.WriteShort(name);out1.WriteShort(_is_aligned? 0x000000FF : 0x000000FF);}
public virtual IList<IRow> GetRow(IRow node){return null;}
public virtual string GetSignatureComposer(){return composer;}
public override long Read(){return delegate1.Read();}
public row, column indices are given. public int getRowAndColumnIndices(OperationEvaluationContext ctx){return _opencounter.EvaluateRowAndColumnIndices(ctx.EvaluateRowAndColumnIndices(ctx.EvaluateRowAndColumnIndices(ctx.EvaluateRowAndColumnIndices(ctx.EvaluateColumnAndIndexCulture), ctx.EvaluateColumnAndIndexCulture), ctx.EvaluateColumnAndIndexContext);}
public virtual void DeleteTags(int docID){DeleteInternal(docID, 0);}
public virtual bool IsMalformed(ref string text){return line >= startOfLine && line < endOfLine;}
public S3OriginDomainName(string domain){_domain = domain;}
public virtual void RestoreClusterFromSnapshot(Cluster snapshot){this.m_dbClusters.Restore(snapshot);}
public virtual void SetTag(string name){this.tag = name;}
public virtual void SetSubmodulePaths(List<string> subModules){foreach (string path in subModules){if (path.Count == 0){AddSubmodulePath(subModules, path);}}}
public CJKWidthFilterFactory(CJKFilterConfig cfcFactory){return cfcFactory;}
public virtual void Revoke(){_writer.Revoke(true);_isA = false;}
public bool Matches(ColumnInfoRecord rec){return rec.Match(this);}
public virtual DescribeRESTAPIResponse DescribeRESTAPI(DescribeRESTAPIRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeRESTAPIRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeRESTAPIResponseUnmarshaller.Instance;return Invoke<DescribeRESTAPIResponse>(request, options);}
public void SetVolumeInfo(VolumeInfo info){m_volumeInfo = info;}
public virtual ID ChangeFormat(string format){return format;}
public virtual GetApiKeyResponse GetApiKey(GetApiKeyRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetApiKeyRequestMarshaller.Instance;options.ResponseUnmarshaller = GetApiKeyResponseUnmarshaller.Instance;return Invoke<GetApiKeyResponse>(request, options);}
public override void ReadFields(ILittleEndianInput in1){if (_isNew){_new = ReadNew(_isNew);}if (_isFirst){_first = ReadFirst();_last = ReadFirst();_isLast = ReadLast();_isFirst = _isFirst;}if (_isLast){_last = ReadLast();_isLast = _isLast;}if (_isLast){_last = ReadLast();_isLast = _isLast;}if (_isFirst){_first = ReadFirst();_last = ReadLast;_isLast = _isLast;}if (_isLast){_last = ReadLast();_last = ReadLast();_isLast = _isLast;}if (_isLast){_last = _isLast;}if (_isLast){_last = ReadLast();_isLast = _isLast;}if (_isFirst){_last = ReadLast();_isLast = _isLast;}return;}
public virtual void DeleteAnalysisScheme(){AnalysisScheme osc = new AnalysisScheme(this);osc.DeleteAnalysisScheme(osc.GetDatastore(), fsc.IsGlobal);}
public override int GetResultTreeId(){return this.treeId;}
public virtual void DeleteRoute(string path, string verb){if (path.Contains("/{") || path.Contains("/", path)){return;}Route route = path.Remove("/{");Route.Remove(path, verb);}
public virtual void SetFilePath(string file){_file = file;}
public void ReadHeader(){_rc4.SkipTwoBytes();_rc4.Write(0);_rc4.Write(0);_rc4.Write(0);_rc4.Write(0);_rc4.Write(0);_rc4.Write(0);_rc4.Write(0);_rc4.Write(0);_rc4.Write(0);_rc4.Write(0);_rc4.Write(0);_rc4.Write(0);_rc4.SkipTwoBytes());_rc4.Write(0);_rc4.Write(0);_rc4.Write(0);_rc4.Write(0);_rc4.Write(0);_rc4.Write(0);_rc4.Write(0);_rc4.Write(0);_rc4.Write(0);_rc4.Write(0);_rc4.Write(0);_rc4.Write(0);_rc4.Start());_rc4.Write(0);_rc4.Write(0);_rc4.Start());_rc4.Write(0);_rc4.
public virtual string[] IndexFields(){return indexFields;}
public Accept-Format header(JSON) {return Accept;}
public virtual void UpgradeAllSegmentsToTheLatestVersion(IndexDirectory root){Upgrader.UpdateIndexDirectoryVersions(root);}
public formula string(IList<FormulaAttribute> operands){return _formula.generate(operands);}
public virtual ErrorHandler GetErrorHandler(){return _errorHandler;}
public virtual int index(){return index;}
public virtual PackIndex.ReservedOfferings GetReservedOfferings(){return _reserved.Values;}
public void AddCluster(string name){Clusters.Add(name);}
public void DeleteRoomSkillParameter(string name){if (name == null){throw new ArgumentNullException("name");}roomSkills.Remove(name);}
public override void Read(Stream input){_in = input;}
public virtual void SetClientProperties(){clientProperties = new Hashtable();}
public virtual IList<Shard> GetShards(){return shards;}
public virtual string SetAsValueSource(string value){return Sharpen.StringHelper.SetValue(this, value);}
public virtual bool Equals(MutableValues other){return _values!= null;}
public virtual void end(){list.add(value);}
public virtual string GetDescription(){return GetErrorElement().GetDescription();}
public ThaiTokenizerFactory(){return new ThaiTokenizerFactory(this);}
public row vector(int row, int column){return new _RowVector_276(this, row, column);}
public NGit.Transport.SagaTransport Register(Transport protocol){return this;}
public virtual string GetAttSourceString(){return attSource.GetAttName();}
public void SetTitle(String title){this.title = title;}
public virtual UpdateRouteResponse UpdateRouteResponse(UpdateRouteResponse response){return UpdateRouteResponse(response.routes, response.userData, response.headerNames, response.status, response.customHeaders, response.customContent);}
public virtual VoiceConnector GetOrigination(){return origination;}
public virtual Stemmer GetStem(string str){return StemmerUtil.Stem(str, m_luceneMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_luceneMatchVersion, m_matchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_matchGroups, m_matchGroups, m_matchGroups, m_matchGroupsToMatchGroups, m
public virtual void Cancel(){cancelInstanceAccess(true, true);}
public virtual int CountBitsInLeftHandSideOfTheSecondArray(int wordOffset){int count = 0;for (int i = 0; i < _sizeOfarr1.Length; i++){int index = _sizeOfarr1.Length;if (i == _sizeOfarr2.Length){count++;}}return count;}
public virtual GatewayResponse GetGatewayResponse(){return gatewayResponse;}
public virtual void DecrementRefCount(RefCountRevision r){r.DecrementRefCount(refCount);}
public bool Get(string field){return Get(field, null);}
public GC(FilePath repository){return GC(repository);}
public virtual AddTagsResponse AddTags(List<Tag> tags){return AddTags(tags, new TagsOptions(tags));}
public override Object Clone(){return this;}
public virtual NGit.Api.FileSystem Update(FileSystem fileSystem){return fileSystem;}
public virtual void Execute(ITerminalCommand command){this.Client.SendCommand(command);}
public virtual PrivateLinkCriticalLink GetPrivateLinkCriticalLink(){return criticalLink;}
public virtual bool IsMarkSupported(){return markSupported;}
public virtual void UpdateGameSessionQueue(UpdateGameSessionQueueRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateGameSessionQueueRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateGameSessionQueueResponseUnmarshaller.Instance;return;}
public virtual string GetText(Term term){return term.Text;}
public void Clear(){_limit = 0;}
public virtual PollForDecisionTaskResponse PollForDecisionTask(PollForDecisionTaskRequest request){var options = new InvokeOptions();options.RequestMarshaller = PollForDecisionTaskRequestMarshaller.Instance;options.ResponseUnmarshaller = PollForDecisionTaskResponseUnmarshaller.Instance;return Invoke<PollForDecisionTaskResponse>(request, options);}
public void ReadByte(){_rc4.SkipTwoBytes();}
public virtual string ToString(){return GetCanonicalName();}
public virtual int GetLinesNum(){return lines.Count;}
public virtual bool IsEnabled(){return enabled;}
public virtual DescribeAppSummariesResponse DescribeAppSummaries(DescribeAppSummariesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeAppSummariesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeAppSummariesResponseUnmarshaller.Instance;return Invoke<DescribeAppSummariesResponse>(request, options);}
public virtual void Stop(){m_lastRun = m_curRun;}
public virtual void EncodersCalled(int doc, string name, int start, int end){lastDocID = doc;start = start;end = end;}
public field - level encryption profile{}
public java.util.Enumeration<E> elements(){return _list.elements();}
public override void Read(Record record){_in.ReadDouble();_dec.Read(record);}
public void Serialize(ILittleEndianOutput out1){out1.Write(this.GetType().Name);}
public virtual UpdateHostedZoneCommentResponse UpdateHostedZoneComment(UpdateHostedZoneCommentResponse response){return UpdateHostedZoneComment(response.HostedZoneId, response.Comment);}
public Deleted3DPxg(Deleted3DPxgContext context){_context = context.CloneExpanded();_deleting3dpxg = context.NewDeleted3DPxg(context.GetExpanded();}
public int get(object key){return get(key, out int value) || 0;}
public virtual NGit.Api.SandboxChannelResponse GetSandboxChannelResponse(){return sandboxChannelResponse;}
public POIFSFileSystem { get; private set; }
public virtual DedicatedCapacity GetDedicatedCapacityResponse GetDedicatedCapacity(List<DedicatedCapacityRequest> options){return GetDedicatedCapacityResponse(options, null);}
public virtual int size(){return this._enclosing._size;}
public IProperty Get(int id){return _objectProperties[id];}
public virtual UpdateTrialComponent UpdateTriangleComponent(UpdateTrialComponent other){UpdateTrialComponent other2 = (UpdateTrialComponent)other;UpdateTrialGroupMemberships(other2);}
public virtual CreateGuardDutyAssessmentTemplateResponse CreateGuardDutyAssessmentTemplate(CreateGuardDutyAssessmentTemplateRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateGuardDutyAssessmentTemplateRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateGuardDutyAssessmentTemplateResponseUnmarshaller.Instance;return Invoke<CreateGuardDutyAssessmentTemplateResponse>(request, options);}
public virtual bool Equals(LexerModeAction other){return action == null? false : action.Equals(this);}
public override Search.Query GetSearchQuery(string field){if (string.IsNullOrEmpty(field)){throw new ArgumentNullException("field");}Search.Query factory = null;foreach (Search.Query factory in field.factories){if (factory.IsWeighted(field)){return factory.CreateSearchQuery(field, null);}}return null;}
public virtual NGit.Api.SubmoduleSyncCommand SubmoduleSyncCommand(string name){return new NGit.Api.SubmoduleSyncCommand(name);}
public virtual IList<ProvisionedCapacity> GetProvisionedCapacity(){return _provisionedCapacity;}
public virtual string GetState().GetState().GetStateName(); return GetState().GetStateName();}
public override short read(short b){throw new System.NotImplementedException();}
public virtual ModifyInstanceAttributeResponse ModifyInstanceAttribute(ModifyInstanceAttributeRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyInstanceAttributeRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyInstanceAttributeResponseUnmarshaller.Instance;return Invoke<ModifyInstanceAttributeResponse>(request, options);}
public FeatSmartTagInitialization(){this.initAttributes();}
public virtual void DeleteTrafficMirrorFilterRule(){DeleteTrafficMirrorFilterRule(null);}
public virtual void Delete(Distribution distribution){_deleting = distribution;}
public void RemoveValues(int row, int column){RemoveValues(row, column);}
public virtual int detectStackSetDrift(int index){return detectStackSet(index);}
public override byte[] Encode(string s){return base.Encode(s, 0, s.Length);}
public virtual void SetType(int type){Type = type;Source = source;}
public virtual TreeFilter Clone(){return this;}
public virtual string ReadName(byte[] buffer, int offset, int length){return _in.ReadName(buffer, offset, length);}
public virtual int GetColumn(){return line.GetColumn();}
public virtual NGit.Api.AddCommand AddCommand(ICommand command){return this;}
public int valueAt(int index){return array[index];}
public virtual void SetIdentityFormat(IdentityFormat format){_identityFormat = format;}
public virtual void SetMaxDocumentFreq(float maxFreq){maxFreq = maxFreq * 100;}
public virtual string getCharset(){return _charset;}
public virtual IList<Problem> GetReportedToAmazonGuardDuty(IList<Problem> problems){return problems;}
public java.util.Set<string> rangeQueries = set(string.EmptyAsTokenizer(), true);return rangeQueries;}
public virtual int GetId(Parser recognizer){return this.id;}
public virtual GroupInfo GetGroups(){return Groups;}
public virtual IList<Pipeline> GetPipelines(){return Sharpen.Collections.UnmodifiableList(pipelines).Values;}
public override void write(string @string){write(m_buf, 0, m_len);}
public SynonymFilter(TokenStream tokenStream, SynonymMap synonymMap){return new SynonymFilter(tokenStream, synonymsMap);}
public virtual FieldQuery FieldQuery(FieldQuery query){return query;}
public virtual DescribeVpcsResponse DescribeVpcs(DescribeVpcsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeVpcsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeVpcsResponseUnmarshaller.Instance;return Invoke<DescribeVpcsResponse>(request, options);}
public virtual CreateTrafficMirrorSessionResponse CreateTrafficMirrorSession(CreateTrafficMirrorSessionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateTrafficMirrorSessionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateTrafficMirrorSessionResponseUnmarshaller.Instance;return Invoke<CreateTrafficMirrorSessionResponse>(request, options);}
public virtual string ToString(){return GetType().FullName;}
public virtual void SetMaintenanceSettings(string maintenanceSettings){this.m_maintenanceSettings = maintenanceSettings;}
public virtual void ReadDocumentation(){IndexInput field = _textInput.IndexInput;ReadDocumentation(field, null);}
public void UpdateImagePermissions(byte[] data){if (data!= null){UpdateImagePermissions(data);}}
public virtual IList<HumanLoop> GetHumanLoops(){return _hangup.GetHumanLoops();}
public virtual void SetPushTags(string pushTags){_pushTags = pushTags;}
public void ClearFormulaCache(){FormulaCache.CFAggregate(filereader);}
public void CreateOrUpdateOutcome(Outcome outcome){if (outcome == null){throw new ArgumentNullException("outcome cannot be null");}if (outcome.outcomeType == voidOutcomeType.INVALID){throw new ArgumentException("outcome type cannot be changed. (null outcome type is not supported. (null outcome type is a required property of outcome type. actual. number is a required property of outcome type. actual. number is a required property of outcome type. actual. number is a number.");}outcome.outcomeType = outcome.type;}
public virtual bool Equals(object obj){if (obj == null){return false;}if (obj.GetType()!= this.GetType()){return false;}return true;}
public GrowableWriter(int size){return new GrowableWriter(this, size);}
public virtual NGit.Api.DashboardSetDeliveryModeResponse NGit.Api.DashboardSetDeliveryModeResponse NGit.Api.DashboardSetDeliveryModeResponse NGit.Api.DashboardSetDeliveryModeResponse NGit.Api.DashboardSetDeliveryModeResponse nGit) {return nGit.Api.DashboardSetDeliveryModeResponse(nGit);}
public virtual void DeleteVPNConnectionRoute(string route){_routeMap[route] = null;}
public virtual bool IsId(string id){return Id(id);}
public virtual void ReplaceSuffix(string suffix, string replacement){m_suffix = suffix;m_replacement = replacement;}
public override string ToString(){return "More" ;}
public override void Serialize(ILittleEndianOutput out1){out1.Write(this.GetType().Name);out1.WriteByte(this.GetType().Name);out1.WriteByte(this.GetType().GetProperty("id"));out1.WriteShort(this.GetHashCode());}
public virtual UpdateEmailAddressResponse UpdateEmailAddress(UpdateEmailAddressRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateEmailAddressRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateEmailAddressResponseUnmarshaller.Instance;return Invoke<UpdateEmailAddressResponse>(request, options);}
public virtual bool atEnd(int end){return end == -1;}
public virtual void remove(E e){map[e.key] = e.value;}
public override void Serialize(byte[] data, int offset, int length){Serialize(data, 0, length);}
public TreeFilter(IList<string> args){foreach (string s in args){if (s.Length > 0){AddTermFilter(s);}}return new OrTreeFilter(this);}
public override void CreateInstance(){base.CreateInstance();}
public bool canHandle(URI uri){return canHandle(uri.ToASCIIString());}
public void SetExternalWorkbookNumber(int value){_externalWorkbookNumber = value;}
public virtual int value(){return index++;}
public Credential GetCredential(){return credential;}
public virtual TreewalkTrie Reduce(IntFunction reduceFunction){return Reduce(this, reduceFunction);}
public virtual void Stop(){Uninstall(null, null);}
public virtual List<Application> GetApplications(){return applications;}
public virtual POS translation(string pos){return POS(pos, string.Compare(pos, string.CompareTo(pos)));}
public PredictionContext GetPredictionContext(){return _predictionContexts.Get(this.predictionContext.id);}
public virtual ParseException NewParseException(string message, int start, int end){return ParseException(message, start, end);}
public virtual void ApplyDelta(object o){base.ApplyDelta(o);}
public virtual Ref GetRef(){return this;}
public virtual string Convert(ICharSequence text, int start, int end){return ConvertToCharSequence(text, start, end);}
public virtual void _init(){base._init();}
public void DeleteSandboxChannel(int channel){DeleteSandboxChannelRequest(channel);}
public override void GetCredentialMetadata(){return credentialMetadata;}
public override void putDouble(double value){if (value!= 0){throw new System.NotImplementedException();}buffer[offset + _position++] = double.Parse(value, CultureInfo.InvariantCulture);}
public virtual java.util.List<E> copy(){return list.copy()? list.clone() : this;}
public virtual JourneyResponse Journey(string key, JourneyResponse * resp) {return 200;}
public virtual void Start(){start = true;end = false;}
public override byte ReadByte(){return delegate1.ReadByte();}
public Subnet(VpcId vpcId, CIDR block){var subnet = new Subnet(vpcId, cidr);if (subnet.VpcId!= null){subnet.VpcId = vpcId.Value;subnet.CidrBlock = cidr.Value;}else{subnet = new Subnet(subnetId, block);}subnets.Add(subnet);return subnet;}
public virtual UpdateTableResponse UpdateTable(UpdateTableRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateTableRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateTableResponseUnmarshaller.Instance;return Invoke<UpdateTableResponse>(request, options);}
public virtual BatchPutAttributeResponse BatchPutAttribute(BatchPutAttributeResponse resp){throw new NGit.Errors.NotSupportedException("Batch put attribute requires an app reference and must be set before making this call.");}
public virtual bool IsBelow(int value){return base.IsBelow(value);}
public CompositeReaderContext Build(BytesRef bytesRef, int bufferSize){return (CompositeReaderContext)Build(bytesRef, bufferSize, 0);}
public virtual void copyInto(object[] array1, int array2, int array3, int array4, int array5, int array6, int array7, int array8, int array9, int arrayA, int arrayA, int arrayA, int arrayA, int arrayB){copyInto(array1, 0, array2, 0, array5,... array6, : array7, : array8, : array8_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object_or_object
public virtual string ToString(){return GetCanonicalName();}
public override void MarkAsRead(long length){if (length == 0){throw new InvalidOperationException("Length is zero");}markReaderIndex(length);}
public SSTRecord Create(Record record){return (SSTRecord)Create(record.RecordId, record.Value);}
public virtual Sharpen.Iterator Clone(){return (Sharpen.Iterator)this.iterator.Clone();}
public bool HasSamePropertiesAs(FontRecord other){if (this.FontRecord!= other.FontRecord){return false;}}return true;}
public virtual RevBlob Lookup(int id){return Get(id, null);}
public virtual bool contains(object o){return map.containsKey(o);}
public bool get(string key){return _string[key];}
public override java.nio.RefAreaRef areaAt(int row, int column){return override.areaAt(row, column);}
public virtual ListTagsResponse ListTags(SourceStream stream){return ListTags(stream.GetTags());}
public virtual Transition[] GetTransitions(){return transitions;}
public override String GetFormat(){StringBuilder buffer = new StringBuilder();buffer.Append("[GetFormat()]\n");buffer.Append("[/GetFormat()]\n");return buffer.ToString();}
public virtual void setValue(object value){lock (this){base.setValue(value);}}
public void Append(Record record){Append(record.ToString());}
public MoPenFindGroupRequest(string findId, int start, int end){return new MoPenFindGroupRequest(findId, start, end);}
public array of position objects {get, set, etc. }
public virtual StreamDetail GetStreamDetail(int streamIndex){return streamIndex.GetStreamDetail(streamIndex);}
public virtual void Grow(byte[] b){int n = b.Length;do{Buffer.BlockCopy(b, 0, b, 0, n);n += n;}}
public virtual SrndQuery Parse(string query){var options = new InvokeOptions();options.Query = query;return Options.AsSrndQuery(this, parser.Invoke(null, options));}
public virtual string ToString(IEncoding enc){return Encoding.GetString(enc);}
public virtual void NotifyAnnouncement(AmazonGuardDutyDelegate client){client.NotifyAnnouncement(GetRequest(), null, null);}
public virtual string GetResultPath(){return path;}
public override string GetDatabase(){return "1";}
public virtual void SetParentIds(int[] parentIds){_parentIds = parentIds;}
public MissingResourceException(string message, string class_and_resource_name){_detail = message;}
public SetAlbumCoverRequest(AlbumCoverRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetAlbumCoverRequestMarshaller.Instance;options.ResponseUnmarshaller = SetAlbumCoverResponseUnmarshaller.Instance;return Invoke<SetAlbumCoverRequest>(request, options);}
public virtual char get_conversion_character(){return _conversion_character;}
public virtual string ToString(IFormatProvider provider){return "PackWriter.State[" + this.phase + ", memory=" + this.bytesUsed + "]";}
public int size(){return this._enclosing._size;}
public virtual void setValueAt(int index, V value){object[] newValues = new object[values.Length + 1];System.Array.Copy(values, 0, newValues, 0, values.Length);}
public virtual void SetWaitTime(int value){waitTime = value;}
public virtual TransferDomainResponse TransferDomain(DomainRequest request){var options = new InvokeOptions();options.RequestMarshaller = TransferDomainRequestMarshaller.Instance;options.ResponseUnmarshaller = TransferDomainResponseUnmarshaller.Instance;return Invoke<TransferDomainResponse>(request, options);}
public virtual bool Equals(Terms terms, int start, int end){return begin < end? true : false;}
public override string ToString(CultureInfo culture){return culture.ToString(CultureInfo.InvariantCulture);}
public PostServiceQueues(string endpoint){_endpoint = endpoint;}
public virtual void SetStartPoint(Point start){m_start = start;}
public virtual void SetPerformance(object value){perf = value;}
public virtual DeleteMessageResponse DeleteMessage(DeleteMessageRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteMessageRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteMessageResponseUnmarshaller.Instance;return Invoke<DeleteMessageResponse>(request, options);}
public virtual char prev(char c){return ch;}
public string value { get; set; }
public virtual int next(){return docIDs.GetIndex(docIDs.GetIndex()) + 1;}
public override string key(string key){return key(key, CultureInfo.InvariantCulture);}
public virtual InternetGateway[] GetEgressOnlyInternetGateways(){return null;}
public virtual int offsetGap(int field, int offset){return offset;}
public virtual IParseTree Evaluate(IParseTree tree){return Evaluate(tree.Root, null, null);}
public virtual bool equals(java.nio.DoubleBuffer b){return buf == b.backingArray? true : false;}
public virtual void SetRevision(int value){this.value = value;}
public virtual bool IsUnicodeString(ICharSequence text){return _isUnicodeString(text, 0, text.Length);}
public void CopyTo(java.nio.Buffer targetBuffer){java.nio.Buffer buffer = targetBuffer;}
public static java.text.BreakIterator newInstance(java.text.LocaleInfo locale){return new java.text.BreakIterator(locale);}
public virtual ListenerList GetGlobalListenerList(){return globalList.listeners;}
public GalicianMinimalStemFilter(){return new GalicianMinimalStemFilter(this);}
public ValueEval GetExpressionAt(int sourceRow, int sourceColumn){return GetExpressionAt(sourceRow, sourceColumn);}
public PatternFormatting Create(PatternFormatting patternFormatting){return new HSSFPatternFormatting(patternFormatting);}
public virtual void SetStemmer(Stemmer stemmer){this.stemmer = stemmer;}
public NLPNERTaggerOp Create(TaggerModel model){return (NLPNERTaggerOp)Create(model);}
public virtual bool Equals(MutableValueDouble other){return _value == other._value;}
public override void Initialize(TermsWriter writer){base.Initialize(writer);}
public void Read(RecordInputStream in1){_in1.Read(this, recordInputStream);_size = in1.ReadUShort();_isNew = in1.ReadUShort();_isIndex = in1.ReadUShort();}
public virtual object GetTarget(){return this._enclosing.GetTarget();}
public virtual RepositoryPolicy GetRepositoryPolicyResponse GetRepositoryPolicy(string name){var options = new InvokeOptions();options.Name = name;options.Namespace = name;options.UseValue = isUseValue;return GetRepositoryPolicyResponse(null, options);}
public virtual ListMovingAddressesResponse ListMovingAddresses(ListMovingAddressesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListMovingAddressesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListMovingAddressesResponseUnmarshaller.Instance;return Invoke<ListMovingAddressesResponse>(request, options);}
public virtual void DeleteSkillAuthorization(Skills.SkillAuthorization authorization){_skillAuthorization = authorization;}
public override void OnBatchPredictionSuccess(BatchPredictionSuccessEventArgs e){return;}
public override V set(string cs){return this._enclosing.set(cs);}
public virtual void SetAsCurrent(){this.state = ObjectState.Current;}
public virtual long Decode(long value){return BitConverter.Int64BitsToDouble(value);}
public virtual void SetKind(int token_kind){this.Kind = token_kind;this.Image = token_image;}
public virtual void Add(T task){tasks.Add(task);}
public virtual void ReimportAPI(string file){_importAPI(file);}
public virtual void append(int b){append0(b? "true" : "false");}
public virtual void Delete(DeleteApplicationRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteApplicationRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteApplicationResponseUnmarshaller.Instance;return;}
public DiffOptions SetDiffOptions(){diffOptions = new DiffOptions();}
public DeleteVaultNotificationsRequest(string vaultName){return new DeleteVaultNotificationsRequest(vaultName, null);}
public override string ToString(){return "no-merge-result";}
public override int WriteShort(){return delegate1.WriteShort();}
public override MutableValueDouble Clone(){return this;}
public override void ReadExactly(long[] array, int offset, longCount){ReadFully(array, offset, longCount);}
public virtual bool IsRemote(){return true;}
public void Clear(){this._enclosing.Clear();}
public virtual void AddParents(ICommit commit){AddParent(commit);}
public virtual int get_position_increment_gap(int field_1){return _le.get_position_increment_gap(field_1);}
public override void ReadDoubleArray(long arrayOffset, double[] doubles){ReadDoubleArray(arrayOffset, doubles);}
public virtual IList<SignalingChannel> GetSignalingChannels(){return null;}
public virtual bool IsSymbolic(IToken token){return _token.IsSym();}
public virtual void DeleteInstanceLifecycleConfiguration(string appInstanceName){DeleteInstanceLifecycleConfiguration(appInstanceName, null);}
public virtual string FormatSimpleValue(){return FormatSimpleValue(null);}
public virtual IList<Queue> GetQueues(){return gameSession.queues;}
public virtual void CreateDirectory(File dir){CreateDirectory(dir);}
public week number(Monday, Tuesday, Friday, Thursday, Friday, Friday, Sunday, Friday, Friday, Sunday, Friday, Sunday, Friday, Sunday, Friday); return week_number;}
public virtual Score GetScoreAt(int index){return scores[index];}
public virtual CreateNetworkProfileResponse CreateNetworkProfile(CreateNetworkProfileRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateNetworkProfileRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateNetworkProfileResponseUnmarshaller.Instance;return Invoke<CreateNetworkProfileResponse>(request, options);}
public virtual ActivatePhotosRequestParams SetRequestParams(RequestParams requestParams){return requestParams;}
public override Filter CreateCharFilter(TextReader text){return CreateCharFilter(text, 0, text.Length, text.Length, text.Length, 0, 0);}
public override TokenStream Create(TokenStream input){return new CaptureSearchResult(input, 0, input.Length);}
public virtual void Migrate(HollowMigrateCommand command){this.Command = command;this.Workspace = null;this.WorkspaceName = null;this.NewWorkspaceName = null;this.NewWorkspaceInstance = null;this.NewWorkspaceInstance = null;this.NewWorkspaceInstance = null;}
public virtual DescribeVPCEndpointResponse DescribeVPCEndpoint(){return DescribeVPCEndpoint(null, null, null);}
public virtual void append(char c){array.append(c);}
public virtual ModifyCertificatesResponse ModifyCertificates(ModifyCertificatesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyCertificatesRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyCertificatesResponseUnmarshaller.Instance;return Invoke<ModifyCertificatesResponse>(request, options);}
public Orientation get(int value){return values[value];}
public void DeleteClientCertificate(X509Certificate certificate){ClientCertificate c = (X509Certificate)certificate.GetClientCertificate();c.Delete() ;}
public override void Serialize(ILittleEndianOutput out1){out1.Write(this.GetType().Name);out1.WriteByte(this.GetType().Name);out1.WriteByte(this.GetType().GetProperty("id"));out1.WriteShort(this.GetHashCode());}
public DirectoryInfo GetOLE2(){return OLE2_DIR;}
public SetIntervalAttribute(ICharSequence value){this.value = value;}
public virtual NGit.Api.SubCommand GetNotesCommand(){return GetNotesCommand();}
public void Draw(IShape shape){Draw(shape);}
public override string ToString(){return GetShape().Name;}
public override bool Equals(object o){if (o == this){return true;}return false;}
public virtual void Submit(Attachment attachment){this.attachment = attachment;}
public virtual string ToString(){return GetCanonicalName();}
public virtual void Reset(Parser parser){m_state = STATE_INIT;}
public virtual SearchPhrase SearchPhrase(){return phrase;}
public virtual void DeleteCustomerGatewayById(int customerGatewayId){DeleteCustomerGateway((CustomerGateway)customerGatewayId);}
public override void size(){buffer.size = size;}
public virtual void Grow(int size){for (int i = size; i < size; i++){System.Array.Copy(array, i, array, i.ArrayOffset + i, array.Length - i);i.Length = i.Length;}}
public void Remove(int rangeIndex){RemoveRange(rangeIndex);}
public GeoLocations GetGeoLocations(){return GeoLocations.ByGeoLocationsMethod((IEnumerable<GeoLocation>)geoLocations).Values;}
public virtual Suggester Build(IInputIterator input){return Build(input, 0, input.Count);}
public override TextReader GetReader(){return new BinaryReader(this);}
public virtual int size(){return this._enclosing._size;}
public virtual void SetNoteReference(Note reference){this.m_noteReference = reference;}
public virtual CreateApplicationRequestResponse CreateApplicationRequest(string applicationName){var request = new InvokeOptions();request.ApplicationName = applicationName;return Invoke<CreateApplicationRequestResponse>(request, null, null);}
public virtual void compact(){_le.compact();}
public override long get(){return byteBuffer.get() == 0;}
public ParseTreePattern(){return new ParseTreePatternAnonymousClassHelper(this);}
public virtual DescribeSubnetsResponse DescribeSubnets(){return DescribeSubnets(null, null);}
public virtual QueryExecutionDetail QueryExecutionDetail(){return QueryExecutionDetail;}
public FormulaSet(AH8Record record, int row, column, and data): AH8Record(record, 0, 0, 0); return this;}
public ArabicNormalizationFilterFactory(ArabicNormalizationFilterFactory factory){return factory;}
public virtual RouteTable[] GetRouteTables(){return null;}
public virtual string Get(int index){return mValues[index];}
public override void Skip(int skip){Skip(skip);}
public virtual CreateClusterSubnetGroupResponse CreateClusterSubnetGroup(CreateClusterSubnetGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateClusterSubnetGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateClusterSubnetGroupResponseUnmarshaller.Instance;return Invoke<CreateClusterSubnetGroupResponse>(request, options);}
public virtual AlarmHistory GetAlarmHistory(){return alarmHistory;}
public void WriteByte(byte b){if (m_len >= m_buf.Length){Resize(m_len + 1);}m_buf[m_len++] = b;}
public virtual NormalizedUnicodeMap Build(){return map.Clone();}
public SeriesTextRecord Read(RecordInputStream in1){return ReadSeriesTextRecord(in1, in1.CurrentColumn, in1.CurrentRow, in1.CurrentColumn, in1.CurrentRow, in1.CurrentColumn, in1.CurrentRow, in1.CurrentColumn, in1.CurrentRow, in1.CurrentColumn, in1.CurrentRow, in1.CurrentColumn, in1.CurrentRow, in1.CurrentColumn, in1.CurrentColumn, in1.CurrentColumn, in1.CurrentRow, in1.CurrentColumn, in1.CurrentColumn, in1.CurrentRow, in1.CurrentColumn, in1.CurrentRow, in1.CurrentColumn, in1.CurrentColumn, in1.CurrentRow, in1.CurrentColumn, in1.CurrentColumn, in1.CurrentRowRelativeToCurrentRow, in1.CurrentRowRelativeToCurrentRow, in1.CurrentRowRelativeToCurrentRow, in1.CurrentRowRelativeToCurrentRow, in1.CurrentRowRelativeToCurrentRow, in1.CurrentRowRelativeToCurrentRow, in1.CurrentRowRelativeToCurrentRow, in1.CurrentRowRelativeToCurrent
public override int GetSupportedFormattingCount(){return _numberOfFormats;}
public virtual bool isEmpty(string str){return isEmpty(str, 0, str.Length);}
public FeedbackAttribute(string emailIdentity, bool confirmed){var options = new InvokeOptions();options.RequestMarshaller = FeedbackAttributeMarshaller.Instance;options.ResponseUnmarshaller = FeedbackAttributeUnmarshaller.Instance;return Invoke<FeedbackAttribute>(emailIdentity, options);}
public virtual string[] DataSecondaryCategories { get; set; }
public virtual UpdateCustomVerificationEmailTemplateResponse UpdateCustomVerificationEmailTemplate(UpdateCustomVerificationEmailTemplateResponse customVerificationEmailTemplateResponse){return UpdateCustomVerificationEmailTemplate(customVerificationEmailTemplateResponse.Template);}
public virtual FilePath GetCurrentFile(){return current.GetFile();}
public TimeSpec Create(TimeSpec type){return new TimeSpec(type, pos, len, factor);}
public virtual void SetInstanceIds(int instanceIds){_instanceIds = instanceIds;}
public virtual void SetFilepattern(string pattern){m_filepattern = pattern;}
public override bool IsBinary(byte[] b){return base.IsBinary(b);}
public virtual void SetReservedInstances(int reservedInstances){_reservedInstances = reservedInstances;}
public override void Skip(int count){SkipBytes(count);}
public SeriesTextRecord CreateSeriesTextRecord(short seriesIndex,intor index,FontRecord fontRecord){return CreateSeriesTextRecord(seriesIndex, 0, seriesIndex, field_1_fontRecord, true, true, true, false);}
public virtual bool IsKanjiCharacter(char c){if (c is CharacterReference){CheckKanjiCharacter(c);return true;}}
public virtual Permissions GetPermissions(string name){return interfaceType.GetPermissions(name);}
public override void clear(){map = null;}
public void SetText(IText text){this.m_text = text;}
public string GetEmbedURL(string appName){return GetEmbedURL(appName, true);}
public void Set(T value){this._enclosing.Set(value);}
public virtual VerifyDomainIdentityResponse VerifyDomainIdentity(DomainIdentity identity){return VerifyDomainIdentity(identity);}
public virtual NetworkInterfaceGroupAssociations GetVirtualInterfaceGroupAssociations(){return null;}
public virtual int line(int index){return source.lines[index];}
public void DeleteBatchPrediction(int id){if (id == -1){throw new ArgumentException("id");}m_batches.Remove(id);}
public override string ToString(){return "January 1, 1970 UTC" ;}
public void Clear(){_formatter.Clear();}
public virtual CheckoutResult Checkout(CheckoutRequest request){var options = new InvokeOptions();options.RequestMarshaller = CheckoutRequestMarshaller.Instance;options.ResponseUnmarshaller = CheckoutResponseUnmarshaller.Instance;return Invoke<CheckoutResult>(request, options);}
public TokenManager(ICharStream input){this.input = input;this.state = LuceneLexerState.INITIAL;this.index = 0;this.offset = 0;this.type = 0;this.val = 0;this.pos = 0;this.type1 = 0;this.type2 = 0;this.type3 = 0;this.type4 = 0;this.type5 = 0;this.type5 = 0;}
public virtual void VisitTerminal(ITerminalNode node){Visit(node);}
public override NumberEval Evaluate(int row, int column){return new NumberEval(valueAt(row, column));}
public void ReadFields(RecordInput in1){ReadValues(in1);}
public virtual void Write(byte b){if (m_len >= m_buf.Length){_buf.Append(m_len);}m_len += b.Length;}
public virtual bool IsAdjacentBefore(ColumnInfoRecord other){return other.IsAdjacentBefore(this);}
public virtual void ConsumeNext(){consume(true);}
public virtual string GetQuery(){return "true";}
public virtual ConfigurationProfile Get(string name){return null;}
public EscherRecord UnmarshalBinaryFromStream(byte[] data, int offset, int length){int blen = Marshal.Read(data, offset);if (blen == 0){blen = Bytes.ToRawInt32(blen, offset + _position);_position = blen;}return this;}
public FPGA image(FPGA format){resource = create_FPGA_image(format);return new FPGAImage(this);}
public virtual Token Create(TokenKind kind, Image image){return Create(kind, image, 0, 0);}
public override void write(int b){if (_size == 0){throw new System.IO.IOException("No data written.");}else{write(b, 0, _size);}}
public void DeleteDirectoryConfiguration(DirectoryConfiguration config){Delete(config.DirectoryConfiguration, true);}
public virtual bool Equals(Edit other){return _edit == other;}
public override void reset(){buf = new byte[0];}
public virtual void SetListOfChanges(IList<Change> listOfChanges){base.SetListOfChanges(listOfChanges);}
public override string ToString(){return Term.Utf8ToString();}
public virtual bool Equals(DocumentDescriptor other){return base.Equals(other);}
public virtual void SetInterval(int set){transitionInterval = set;}
public SeriesChartGroupIndexRecordInputStream(Stream is){_is = stream.ReadRecord();}
public virtual Hashtable GetAttributes(object o){return (o as Hashtable)? o.GetAttributes() : null;}
public override FileMode GetFileMode(IndexIterator it){return indexIterator.GetFileMode(it);}
public AmazonChimeVoiceConnectorLoggingConfiguration{return new AmazonChimeVoiceConnectorLoggingConfiguration{LogConfig = new AmazonChimeVoiceConnectorLoggingConfiguration{Directory = VoiceDirectory,}
public bool CellValue(CellValueRecordInterface cellValueRecord){return _cellValueRecord;}
public GeoLocation { get; set; }
public override void Read(RecordInput in1){if (in1.ReadByte()!= 0){throw new System.IO.IOException("bad record format");}if (in1.ReadShort()){int f_pos = in1.ReadShort();int l_buf = in1.ReadShort();int h_buf.Position(f_pos);if (_pos < _limit){_pos = _limit;_buf.Position(l_buf.Position());}}
public override bool Equals(Object factory){return this.Equals(factory);}
public virtual CreateVPCAssociationAuthorizationResponse CreateVPCAssociationAuthorization(CreateVPCAssociationAuthorizationRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateVPCAssociationAuthorizationRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateVPCAssociationAuthorizationResponseUnmarshaller.Instance;return Invoke<CreateVPCAssociationAuthorizationResponse>(request, options);}
public virtual CommonToken Create(CommonToken oldToken){return oldToken;}
public override void Validate(){base.Validate();}
public virtual void append(object o){append0(o);}
public virtual Filter[] GetFilters(){return filters;}
public ListenerRegistration AddAllListener(ListenerRegistration list, RecordType[] recordTypes){return AddAllListener(list, recordTypes, 0, recordTypes.Length);}
public virtual int indexOf(E e){return indexOf(e.object, e.index);}
public authorizer.AuthorizationAttribute Set(string authorizerName, string value){_authorizer = value;}
public void Reset(){pattern = null;}
public virtual void ModifyDBSubnetGroup(DBSubnetGroupName dbSubnetGroupName){ ModifyDBSubnetGroupName(dbSubnetGroupName);}
public virtual string ToString(){return GetCanonicalName();}
public virtual void RevokeIPAddr(string address){throw new System.NotSupportedException("IP address is not supported.");}
public virtual void SetInstanceGroupsToBeModified(int instanceGroupsToBeModified){instanceGroupsToBeModified = instanceGroupsToBeModified;}
public virtual void readFully(byte[] buffer, int length){throw new System.NotImplementedException();}
public virtual IList<EmailAddress> GetVerifiedEmailAddresses(){return GetEmailAddresses(null, null, null);}
public virtual void println(){flush();}
public virtual void SetLoadBalancerName(string balancerName){this.loadBalancerName = balancerName;this.healthCheck = new HealthCheck(loadBalancerName);}
public virtual Terminology Information(OntologyType type){return _terminology;}
public virtual string GetGrammar().Name{get; set; }
public virtual GroupHead[] GetGroupHeads(){return GetGroupHeads(null);}
public DateTime GetDateInExcel(){return date;}
public virtual string GetRepresentation(){return Vocabulary.ToString(null, null, null);}
public string GetPolygonString(){return polygonAsString;}
public virtual string GetQuery(){return "true";}
public virtual IndexCommit Find(string committerName){return Find(committerName, true);}
public virtual NGit.Api.DiffEntry deviceUpdate(DiffEntry device){return deviceUpdate(device);}
public virtual Sessions Describe(){return sessions;}
public virtual BatchUpdateResponse BatchUpdate(BatchUpdateRequest request){var options = new BatchUpdateOptions();options.RequestMarshaller = BatchUpdateRequestMarshaller.Instance;options.ResponseUnmarshaller = BatchUpdateResponseUnmarshaller.Instance;return Invoke<BatchUpdateResponse>(request, options);}
public virtual NGit.Api.PublicKey CreatePublicKey(byte[] publicKeyData, int publicKeyDataLength){return key;}
public virtual string GetSourceCommit(){return sourceCommit;}
public virtual IList<Collection> GetCollections(){return _collections;}
public void ReadErrorCheck(Record record, int errorCheckIndex){_isErrorCheck = true;_isLastPos = record.GetErrorCheckIndex();_isOffset = false;_isOffsetFully = false;_isOffsetFully = false;}
public string GetQuery(){return string.Empty;}
public virtual void detach(object o){detachInternal(o);}
public void DeleteAvailabilityZone(Zone availabilityZone){_availabilityZones.Remove(availabilityZone);}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_protect);}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(this.GetType().Name);out1.WriteByte(_order);}
public virtual bool Equals(AnyObjectId other){return Equals(other, null);}
public virtual void RestoreTable(Table table){_schema = table.Schema;}
public virtual string GetAuthorizationToken(string appName){return sharedInstance.GetAuthorizationToken(appName);}
public override void Serialize(byte[] b, int offset){if (m_offset == 0){m_offset = 0;}Serialize(b, offset + _position, m_buf, m_offset + _size, m_buf.Length);}
public virtual java.lang.StringBuffer insert(object o){return insert(o, 0, o.Length);}
public virtual int GetLen(E e){return e.Length;}
public virtual SnapshotInstanceResponse SnapshotInstance(SnapshotInstanceResponse result){return SnapshotInstance(result);}
public override bool Matches(IParseTree tree){return false;}
public virtual bool isEmpty(){return list.isEmpty();}
public void SetParameters(IDictionary<string, string> parameters){this.m_parameters = parameters;}
public virtual void Clear(){_limit = 0;}
public string DFAToString(IVocabulary vocabulary){return DFAToString(vocabulary);}
public virtual int NumPendingDecisions(){return _decisionCount;}
public ICell GetCell(int row, int column){return GetCell(row, column);}
public virtual void Finish(){this._enclosing.Finish();}
public virtual NGit.Api.ReceiveCommand GetReceiveCommand(){return protocol.GetReceiveCommand(openAPIVersion, useBuffering=false);}
public virtual ModifySpotFleetResponse ModifySpotFleet(ModifySpotFleetRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifySpotFleetRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifySpotFleetResponseUnmarshaller.Instance;return Invoke<ModifySpotFleetResponse>(request, options);}
public virtual int get_low_irq_value(){return _low_irq_value;}
public override void Put(long b){if (m_len >= m_buf.Length){Resize(m_len + 1);}m_len += 1;}
public FinnishLight stem filter(){return new FinnishLight stemFilter(this);}
public virtual void start(Match group_1){matchgroup_1_start = group_1;}
public virtual SpeechSynthesisTaskDetail GetSpeechSynthesisTaskDetail(){return null;}
public override int GetByte(){return delegate1.GetByte();}
public virtual E next(){return this.nextEntry();}
public virtual string ToString(){return GetCanonicalName();}
public override bool Equals(object o){if (o == this){return true;}return false;}
public virtual bool contains(object o){return list.contains(o);}
public virtual DeleteVpnConnectionRequestResponse DeleteVpnConnectionRequest(DeleteVpnConnectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteVpnConnectionRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteVpnConnectionRequestResponseUnmarshaller.Instance;return Invoke<DeleteVpnConnectionRequestResponse>(request, options);}
public empty_tree_iterator(){return new _EmptyTreeIterator_54(this);}
public virtual void PruneAll(void){UnpackedObjectList(null);}
public new vpc(){this.type = typeof(Vpc);}
public override string Sign(string str, int enc, Encoding enc){return Sign(str, enc, 0, str.Length);}
public virtual int getReferences(){return _rc4.resources.get(Constants.ASSET_REFCOUNT_FIELD);}
public override bool Equals(ValueEval other){return this.GetType().Equals(other.GetType())) && this.GetType().Equals(other.GetType()));}
public virtual bool IsDuplicate(T value){return value == null;}
public virtual string ToString(){return GetType().FullName;}
public SimpleShape(IShape shape){return shape;}
public void RemoveThumbnailProperty(){ObjectStreamProperty s = _objectStream.GetProperty(THUMBNAIL_PROP);s.Remove(s.Key);s.RemoveProperty(s.Key);}
public PutMetricFilterRequest Request{PutMetricFilterRequest request;return new PutMetricFilterRequest(Request, LogGroupNameFilter, MetricFilterPattern, MetricTransformations);}
public virtual TransformJobDetail GetTransformJobDetail(){return _transformJobDetail;}
public virtual void AddPoint(Point point){result.Add(point);}
public override bool Equals(object o){return listEquals(o);}
public virtual DeviceCollection GetDevice(string device){return listDevices(device, null, device.number, device.vendor, device.serial, device.vendorType);}
public virtual void Update(UpdateRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateResponseUnmarshaller.Instance;return;}
public override void copyInt32s(int arrayIndex, int32s from, to, int32s to) {copyInt32s(arrayIndex, arrayIndex, _order);_order = arrayIndex;}}
public void DeleteRoom(string roomName){_rooms[roomName] = null;}
public virtual void Delete(){_writer.Delete(Constants.NewSnapshot(this));}
public virtual string SetUpstreamObjectId(string @objectId){@objectId = 1;}
public void DisableEbsEncryption(EBSEncryptionConfig config){DisablesAmazonEC2EBSEncryption(config.UseAwsEbsBackend);}
public virtual int GetStartLine(){return line;}
public override void Serialize(byte[] b, int offset){if (m_offset == 0){m_offset = 0;}UnsafeWrite(b, offset + _position, m_buf, m_offset + _size);}
public virtual string GetAuthorOf(byte[] b){return FindObjectOf(b, 0);}
public virtual string GetStatus(){return server.GetStatus();}
public virtual void readLine(){System.Console.Error.WriteLine("[ERROR]\n");}
public virtual string decode(byte[] bytes){return decode(bytes, 0, bytes.Length);}
public override short get(){return _buf.getShort();}
public virtual void RestoreDBInstance(DBInstance dbInstance){this._enclosing.Restore(dbInstance);}
public virtual V remove(K key){object[] values = map.Remove(key);if (values == null){return remove(key, values);}values.Length = 0;map[key] = null;return remove(keys, values);}
public java.nio.ByteBuffer slice(java.nio.ByteBuffer offset,_limit) {return byteBuffer.slice(offset, _limit);}
public virtual void SetMinShingleSize(int minShingleSize){this.m_minimumShingleSize = minShingleSize;}
public ImageAttribute GetImageAttribute(){return image;}
public virtual IList<LocalGateway> GetLocalGateways(){return localGateways;}
public virtual DescribeDBSubnetGroupsResponse DescribeDBSubnetGroups(DescribeDBSubnetGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDBSubnetGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDBSubnetGroupsResponseUnmarshaller.Instance;return Invoke<DescribeDBSubnetGroupsResponse>(request, options);}
public virtual SynonymQuery Build(SearchTermQuery term){return term;}
public void Read(RecordInputStream in1){_in1.Read(SclRecordReader._recType);}
public virtual NGit.Api.PushCommand AddRefCommand(string doc){_push = doc;return this;}
public virtual bool ContainsChart(){return true;}
public SetFallbackAlgorithmFunction(String fallbackAlgorithm){fallbackAlgorithm = fallbackAlgorithm;}
public void SetOrder(SheetRecord sheet, int position){this.order = position;}
public override void Retry(bool retryOnFailure){if (retryOnFailure){throw new RecoverableLockException(RecoverableLockException.REJECTED_LOCK_FILE);}else{retryOnFailure = true;}}
public virtual void Purchase(int capacity){if (_limit > 0){_limit = capacity;_capacity = _limit;}}
public virtual ICharStream GetChars(ICharStream input){int index = input.GetIndex();while (index < _limit){int ch;if (_string.IsNullOrEmpty(_string.GetPrefix() + index)){return _string.GetPrefix() + input.getChars();}}return _string.GetPrefix() + input.getChars();}
public virtual void Commit(){_writer.Commit();}
public override stem filter factory(StemFilter factory){return new ArabicStemFilterFactory(factory);}
public virtual HighFrequencyTerm Create(byte[] text, int start, int end){Debug.Assert(start >= 0, "start=" + text, "end=" + end);return new HighFrequencyTerm(text, start, end);}
public virtual string Label(Label node){return null;}
public virtual int GetOpenWorkflowExecutionsCount(){return _workflowInstance.GetNumOpenWorkflowExecutionsCount();}
public virtual void DisassociateMembership(Membership membership){_membership = membership;}
public virtual BuildConfig GetConfig(){return config;}
public override void put(long value){throw new System.NotImplementedException();}
public virtual ListExclusionsResponse ListExclusions(string appName){var exclusions = new ListExclusions(appName);return exclusions.AsList(new ExclusionsPreviewFilter());}
public virtual RecreateStackResourceDriftEvent Detect(StackResourceDriftEvent event){return new RecreateStackResourceDriftEvent(this, event);}
public virtual IList<string> GetModified(){return Sharpen.Collections.UnmodifiableList(diff.GetModified()){}
public override long Read(PackFileInput in1){return _in1.Read(in1.Write());}
public virtual UpdateVoiceTemplateResponse UpdateVoiceTemplate(UpdateVoiceTemplateRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateVoiceTemplateRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateVoiceTemplateResponseUnmarshaller.Instance;return Invoke<UpdateVoiceTemplateResponse>(request, options);}
public virtual double get(string key){return properties[key];}
public virtual void SetLoadBalancerPolicies(LoadBalancerPolicy[] policies){_loadBalancerPolicies = policies;}
public void Stop(){HumanLoop p = GetLoop(refId);p.Stop();}
public override int RecordSize(int blockCount){return _ulr.BlockSizes[blockCount];}
public virtual void SetEnableFastSnapshotRestore();{enable(false);}
public virtual void DisassociateContactFromAddressBook(UnregisteredContactFromAddressBook contact){this.disassociateContactFromAddressBook(contact);}
public formula string(IList<FormulaAttribute> operands){return _formula.generate(operands);}
public virtual SortRevisionsResponse SortRevisions(SortRevisionsResponse sort){return sort.AsSort(revisions => revisions.Count);}
public virtual bool IsCurrentRevisionUpdated(ReplicationSession session){return session.IsBundledWith(session.GetReplicationSession());}
public override int GetLevel(int distance){return GetCommonAncestorForDistance(distance);}
public string pathWithAuthority(string authorityName, int authorityIndex){return pathWithAuthority(authorityName, 0);}
public Scorer(Query query){_query = query;}
public virtual string GetDescription(){return GetErrorString();}
public virtual void SetDelegationNames(string[] nameServers){_delegator = new DelegationSet(nameServers);}
public void Delete(){}
public override ICollection<E> GetChildren(){return scorer.GetChildren();}
public virtual IList<ConfigurationProfile> GetConfigurationProfiles(){return configurationProfiles;}
public virtual void remove(object o){lock (this._enclosing){int oldSize = this._enclosing._size;this._enclosing.remove(o);this._enclosing._size = oldSize;this._enclosing.notifyDataSetRemoved();this._enclosing.notifyDataSetRemoved();this.declosing._size = oldSize;this.declosing._size = oldSize;this.declosing._size = oldSize;this.declosing._size = oldSize;}}
public override inflection type(int id){return base.getInflectionType(id);}
public virtual void SetStartPoint(Point start){m_start = start;}
public virtual void write(java.io.OutputStream outputStream){throw new System.NotImplementedException();}
public virtual IntervalSet GetLook(ATN state){return GetIntervalSet(state);}
public virtual void DeleteGlobalReplicationGroup(ReplicationGroup group){DeleteInternal(group.Name, group.IsGlobalReplicationGroup, group.IsExternalReplicationGroup, group.IsExternalReplicationGroup, group.IsExternalReplicationGroupData, group.IsExternalReplicationGroupData, group.IsExternalReplicationGroupData, group.IsExternalReplicationGroupData, group.IsExternalReplicationGroupData, group.IsExternalReplicationGroupData, group.IsExternalReplicationGroupData, group.IsReplicationGroupRecord, group.Header, group.Footer, group.FooterOffset, group.FooterOffset, group.FooterOffset, group.FooterOffset, group.FooterOffset, group.FooterOffset, group.FooterOffset, group.FooterOffset, group.FooterOffset, group.FooterOffset, group.FooterOffset, group.FooterOffset, group.FooterOffset, group.FooterOffset, group.FooterOffset, group.FooterOffset, group.FooterOffset, group.FooterOffset, group.FooterOffset, group.FooterOffset, group.FooterOffset, group.FooterOffset, group.FooterOffset, group.FooterOffset, group.FooterOffset, group.FooterOffset, group.FooterOffset,
public virtual IList<FileHeader> GetFiles(){return directory.GetFiles();}
public virtual int[] elements(){return _list.elements();}
public char? Get(string name){if (m_argMap.TryGetValue(name, out char value) || value == null){return null;}return m_argMap[name];}
public int GetFirstSheetIndex(XSSFWorkbook externalBook){return GetIndex(externalBook, 0);}
public virtual HostedZoneDetail GetHostedZoneDetail(){return hostedZones;}
public virtual IList<WorkGroup> GetWorkGroups(){return workGroups;}
public virtual IList<int> GetValues(){return intervals.GetValues(Interval.ALL_INTEGERS_CHAR);}
public void setVisibility(int visibility){is.visibility = visibility;}
public void SetValue(Object newValue){object temp;if (this.objectValue == null){throw new ArgumentNullException("objectValue is null");}this.objectValue = newValue;}
public ParserSet up(){this.parser = new Parser(this);this.precedence = true;this.m_precedence = true;this.m_precedence = true;this.m_precedence = true;this.m_precedence_limit = 10;this.m_parser.enablePositionIncrements = true;this.m_precedence_limit = 10;this.m_precedence_limit = 10;this.m_compiled.setParser(this);}
public virtual FlowDefinition GetFlowDefinition(){return current.flowDefinition;}
public virtual bool Equals(object o){return base.Equals(o);}
public override HIT[] GetReviewableHITs(){return base.GetReviewableHITs();}
public CacheParameterGroupRequest(string cacheParameterGroupName, string[] parameters){return new CacheParameterGroupRequest(cacheParameterGroupName, parameters);}
public CacheParameterGroup(IDictionary<string, List<string>> parameters){return new CacheParameterGroup(parameters);}
public virtual UpdateConferenceProviderResponse UpdateConferenceProvider(UpdateConferenceProviderResponse response){return UpdateConferenceProvider(response.GetConferenceProvider());}
public float height { get; set; }
public FilterInstanceFilter CreateFilter(Pattern pattern){return new FilterInstance(pattern, this);}
public int get_significant_decimal_digits_last_digit(byte b){return (b >> (significant_decimal_digits_size() - 1)) & 0x00FF);}
public override void SetValue(int newValue){object.CopyValue(backingArray, offset + _position, newValue);}
public virtual void Delete(IEvaluation e){Delete(e.Evaluation, e.CurrentPosition);}
public IntervalSet(int intervals){_intervals = intervals;}
public virtual object Clone(){return (object)this.GetType().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo()));}
public override void Serialize(byte[] b, int position, int length){Serialize(b, 0, length);}
public virtual void open(java.io.OutputStream outputStream){throw new System.NotImplementedException();}
public void EnablePropagationOfVPCRoutes(bool enable){_propagation = enable;}
public string nameAt(int index){return names[index];}
public override byte ReadByte(){return delegate1.ReadByte();}
public Workspace WriteAccess(Workspace workspace){return _workspace.WriteAccess();}
public virtual void putDouble(double b){throw new System.NotImplementedException();}
public string GetStreamingSessionUrl(string sessionId){return sessionUrl;}
public icuTokenizerConfig(){this.useTokenizerConfig = true;}
public java.util.SortedSet<E> elements(){return this.sortedSet(java.util.TreeMap.Relation.COMPARE_BY_UNORDERED_VALUE);}
public int size(){return this._enclosing._size;}
public virtual int GetRKNumberAt(long offset){return outerInstance.GetRKNumberAt(offset);}
public virtual DescribeClustersResponse DescribeClusters(){return DescribeClusters(null, null);}
public virtual BreakEvent CreateBreakEvent(BreakEvent e){return new BreakEvent(this, e);}
public virtual DeleteInternetGatewayResponse DeleteInternetGateway(DeleteInternetGatewayRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteInternetGatewayRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteInternetGatewayResponseUnmarshaller.Instance;return Invoke<DeleteInternetGatewayResponse>(request, options);}
public virtual void set_input(string @string){set_input(@string);}
public override bool Equals(object o){if (o == this){return true;}return false;}
public virtual void Test(ITemplate template){Debug.Assert(template!= null);if (test(template.GetTag())){throw new InvalidOperationException("Template does not have a valid tag in it");}if (test(template.GetTag()));}
public virtual void RuleEnter(IToken token){this.token = token;this.pos = token.End;this.rule = rule;}
public string value { get; set; }
public virtual GetElebrityInfoResponse GetElebrityInfo(GetAppAttributesRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetAppAttributesRequestMarshaller.Instance;options.ResponseUnmarshaller = GetAppInformationResponseUnmarshaller.Instance;return Invoke<GetElebrityInfoResponse>(request, options);}
public IPAddress GetPublicKey(){return release.GetPublicKey();}
public RecordReader(RecordReader in1){this.in1 = in1;this.out1 = in1;this.in2 = in1;this.in3 = in1;this.in3 = in1;this.in4 = in1;this.in5 = in1;this.in5 = in1;}
public override string ToString(){return "0x" + (long)toHexString(fromString());}
public override bool Equals(object o){if (o is java.util.MapClass.Entry<K, V>){return this._enclosing.Equals(o);}return false;}
public string pattern(s){return string.Format(JGitText.Get().regexp, this);}
public virtual bool Contains(char sequence){return map.Contains(sequence);}
public override string ToString(){return this.GetType().Name + "()";}
public virtual IList<BlacklistedReport> GetReports(){return blacklistReports;}
public virtual ProcessingJobDetail GetProcessingJobDetail(){return processingJobs.Get(this.Partition);}
public virtual string get(string key){return getString(key, CultureInfo.InvariantCulture);}
public Lucene.Net.Util.Lucene.DictionaryType Create(XmlReader reader, string field, int size){return Create(reader, field, size, this);}
public override FuzzySet GetMaxDoc(){return _maxDoc;}
public override bool isOutsideBounds(){return false;}
public virtual string GetRefLogIdent(){return referenceLog;}
public virtual string getValue(object o){return base.getValue(o);}
public virtual void ReadArray(float[] array, int offset, int count){for (int i = offset; i < count; i++){array[i] = buffer.ReadFloat(offset + i);}}
public CloudFrontOriginAccessIdentityRequest(OriginAccessIdentityConfig config){return CloudFrontOriginAccessIdentityRequest(config.OriginAccessIdentityConfig, CloudFrontOriginAccessIdentityStrategy.Default);}
public Record Create(Stream in1){return new Record(this, in1);}
public virtual void Compact(E element){Compact(element.childNodes, 0, element.childCount, element.parentNode, null, null);}
public override java.nio.DoubleBuffer compact(java.nio.DoubleBuffer buf){return new java.nio.DoubleBuffer(buf);}
public String ToString(){return HSSFErrorConstants.GetText(hssF_1);}
public virtual IList<Agent> GetAssociatedAgents(){return assessmentRuns.GetAssociatedAgents();}
public java.net.URI validateURI(string value){throw new System.NotImplementedException();}
public virtual void Explain(int nDocs){Explain(nDocs);}
public APNSSandboxChannel Update(APNSSandboxChannelResponse msg){return Update(msg, "sandboxed")}
public override bool Set(int index, bool value){return this._enclosing.Set(index, value);}
public Cache Security Group(string name, string description){return CreateCacheSecurityGroup(name, description, null, null);}
public virtual void AttachInterface(object o){AttachInterface(o);}
public EscherRecord Find(int id){EscherRecord rec = _registry.FindOne(id);if (rec!= null) return rec.EscherRecordId;return null}
public virtual string ToString(){return GetType().FullName;}
public bool isEmpty(){return map.isEmpty();}
public virtual void AddTwoTaskStats(TaskStats stats){AddTwoTaskStats(stats.GetTask(), stats.GetTaskCount());}
public override void readShorts(short[] array, int offset, int count){java.util.Arrays.checkOffsetAndCount(array, offset, count);}
public RecalcIdRecord(){this.recalcIdRecord = new RecalcIdRecord();}
public virtual string ToString(){return GetType().FullName;}
public override FieldsProducer GetFieldsProducer(SegmentReadState state){return new FieldsProducer(this, state);}
public virtual void LifecycleHookDeleted(LifecycleHook deleted){_lifecycleHooks.Remove(deleted);}
public virtual CodeRepository Update(CodeRepository repo){return repo;}
public virtual bool Equals(WinklerDistance other){return other.WinklerDistanceDistance!= null? Equals(this, other.WinklerDistance) : false;}
public virtual void Delete(){this._enclosing.Delete(null);}
public virtual bool Expired(Session session){return session.IsExpired();}
public virtual void DeleteConfigurationSet(ConfigurationSet configSet){this.configurationSet = configSet;}
public virtual IList<TypeSignature> GetTypes(){return _type_signatures;}
public ObjectId CreateObjectId(int id){return CreateObjectId(id, null, null, null);}
public virtual GetIndustryInfoResponse GetIndustryInfo(GetIndustryInfoRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetIndustryInfoRequestMarshaller.Instance;options.ResponseUnmarshaller = GetIndustryInfoResponseUnmarshaller.Instance;return Invoke<GetIndustryInfoResponse>(request, options);}
public override byte[] Encode(long value){return base.Encode(value, 0, value.Length);}
public virtual CreateVolumeResponse CreateVolume(CreateVolumeRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateVolumeRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateVolumeResponseUnmarshaller.Instance;return Invoke<CreateVolumeResponse>(request, options);}
public override void putShort(short value){throw new System.NotImplementedException();}
public virtual Environment Info(){return EnvironmentInfo.Current;}
public void SubRecordsAdd(Record record){Add(record);}
public ExcelDate GetExcelDate(ExcelCalendar calendar){return getExcelCalendarStartDate(calendar);}
public virtual int next(){return this.nextEntry().nextIndex;}
public virtual UpdateEndpointResponse UpdateEndpoint(UpdateEndpointRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateEndpointRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateEndpointResponseUnmarshaller.Instance;return Invoke<UpdateEndpointResponse>(request, options);}
public virtual bool isEmpty(){return list.isEmpty();}
public virtual NGit.Api.DiffCommand SetPathFilter(string pathFilter){this.pathFilter = pathFilter;return this;}
public QueryParserConfiguration Build(IQueryParserConfiguration builder){return builder.SetFacet(Facet.Optional, new QueryParserConfiguration(this));}
public override void write(byte b){throw new System.NotImplementedException();}
public GeoLocations GetGeoLocations(){return GeoLocations.ByGeoLocationsMethod((IEnumerable<GeoLocation>)geoLocations).Values;}
public virtual void reset(){current.reset();}
public virtual DescribeOptions DescribeOptions(){return DescribeOptions();}
public ResolverEndpoint(ResolverResolverResolverResolverResolverResolver resolverResolver){return new ResolverEndpoint(this, resolverResolver);}
public int index { get; set; }
public virtual Score GetCurrentScore(){return score;}
public override int GetNextFreeByte(){return _buf.GetNextFreeByte();}
public static int PMT(QuadraticFunction q){return PMT(q.x, q.y, q.z, q.x, q.y, q.z_len, q.z_len_error_check);}
public override ObjectId GetObjectId(string type, string data){return base.GetObjectId(type, data);}
public virtual void RotateClusterPrivateKey(){ClusterPrivateKey key = null;}
public virtual string append(string str){append0(str);return str;}
public void SetGroupName(string groupName){this.groupName = groupName;this.policyName = PolicyNames.Set(policyName, StringComparison.Ordinal);}
public static bool arrays_equal(long[] array, int arrayIndex){return array_index!= 0;}
public virtual object Clone(){return (object)this.GetType().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo()));}
public virtual void AddFieldConfigListener(IFieldConfigListener listener){for (int i = 0; i < m_fieldConfigListeners.Length; i++){m_fieldConfigListeners[i] = listener;}}
public override int getShorts(){return _buf.getShorts();}
public virtual NGit.Api.RemoteCommand NewLSRemoteCommand(){return new NGit.Api.RemoteCommand(this);}
public override string ToString(){return this.key.ToString(CultureInfo.InvariantCulture);}
public override string ToString(){return "PackWriter.State[" + this.phase + ", memory=" + this.bytesUsed + "]";}
public void Disassociate(object @object){_delegate = null;}
public String CreateSafeSheetName(String proposal){return CreateSafeSheetName(proposal);}
public virtual TextBox CreateTextBox(TextAnchor anchor){return CreateTextBox(anchor, 0, anchor.left, anchor.top, anchor.right, anchor.bottom, anchor.right, anchor.bottom, anchor.right, anchor.bottom, anchor.right, anchor.bottom, anchor.right, anchor.top, anchor.right, anchor.bottom, anchor.right, anchor.bottom, anchor.top, anchor.right, anchor.bottom, anchor.left, anchor.right, anchor.right, anchor.bottom, anchor.bottom, anchor.top, anchor.right, anchor.bottom, anchor.bottom, anchor.right, anchor.bottom, anchor.top, anchor.bottom, anchor.right, anchor.bottom, anchor.bottom, anchor.top, anchor.bottom, anchor.top, anchor.bottom, anchor.bottom, anchor.bottom, anchor.top, anchor.bottom, anchor.bottom, anchor.top, anchor.right, anchor.bottom, anchor.top, anchor.bottom, anchor.bottom, anchor.top, anchor.bottom, anchor.bottom, anchor.bottom, anchor.bottom, anchor.top, anchor.top, anchor.top, anchor
public virtual ObjectId GetOldObjectId(){return oldObjectId;}
public virtual void Update(T configuration){base.Update(configuration);}
public void DeleteClientCertificate(X509Certificate certificate){ClientCertificate c = (X509Certificate)certificate;}
public virtual VPNGateway CreateGateway(GatewayType type){this.type = type;}
public virtual int GetOverheadPerValue(){return overhead;}
public int valueAt(int index){return array[index];}
public ClearAllProcessors(){foreach (CodeAnalysis c in processors.Values){ClearProcessor(c);}}
public virtual bool contains(object o){return this._enclosing.containsValue(o);}
public virtual string get(string key){return getString(key, CultureInfo.InvariantCulture);}
public override void put(float value){buffer.put(value);}
public virtual PasswordData GetPasswordData(App app){return passwordData;}
public CoipPoolInfoList(){return CoipPoolInfoList();}
public bool IsInternalDate(){return CellReference.IsInternalDate(CellReference);}
public virtual string GetEngineVersion(){return engines.Get(0).GetVersion();}
public virtual int GetIndex(E e){return list.GetIndex(e);}
public virtual void Cancel(){this.node.Cancel();}
public FinnishLightStemFilterFactory(){return new FinnishLightStemFilterFactory(this);}
public virtual void setNamespaceAware (bool enable ){setNamespaceAware(enable);}
public MergedListMergeSpec(IList<Segment> segments){_segments = segments;}
public virtual void SetType(){this._type = JapaneseTokenizerType.VECTOR;}
public void RegisterRoutes(RouteTable table){for (int i = 0; i < _routes.Count; i++){RegisterRouteTable(table.Get(i));}}
public virtual array<recall point>(){return recall_points;}
public Scorer(Field field, string defaultField){this.defaultField = field;}
public virtual void AddUsedToolPack(Pack pack){packs.Add(pack);}
public virtual SnapshotsDetail GetSnapshotsDetail(){return snapshotsDetail;}
public virtual IVerification Verify(string identity){return Verify(new Participant(identity, 'emailIdentity')));}
public virtual void DeleteClusterParameterGroup(string name){ClusterParameterGroup group = new ClusterParameterGroup(name);group.Delete(this);}
public virtual int size(DiffEntry diffEntry){return diffEntry.size();}
public Vector (byte[] array, int capacity){Array.Copy(array, 0, m_array, m_arrayIndex, m_arrayIndex, m_arrayIndex);}
public void SetAll(Record record){_record = record;}
public override void Subtract(CharsRef other){subtract(other.Chars, other.StartOffset);}
public override int GetType(){return pathType;}
public virtual EReference GetLeaf(EReference other){return other.GetLeaf(other);}
public virtual BigInteger GetFactorial(int n){return m_factorial*n;}
public virtual ParseException generateParseException(string message, ParseException e){throw new System.NotImplementedException();}
public override void OnException(Exception e){base.OnException(e);}
public override string ToString(){return "noOp";}
public LoadBalancerPolicy(string loadBalancerName, string loadBalancerNamePrefix){return new LoadBalancerPolicy(loadBalancerNamePrefix, loadBalancerNamePrefix, loadBalancerNamePrefix, loadBalancerNamePrefix, loadBalancerNamePrefix, loadBalancerNamePrefix, loadBalancerNamePrefix, loadBalancerNamePrefix, loadBalancerNamePrefix, loadBalancerNamePrefix, loadBalancerNamePrefix, loadBalancerNamePrefix, loadBalancerNamePrefix, loadBalancerNamePrefix, loadBalancerNamePrefix, loadBalancerNamePrefix, loadBalancerNamePrefix, loadBalancerNamePrefix, loadBalancerNamePrefix, loadBalancerNamePrefix, loadBalancerNamePrefix, loadBalancerNamePrefix, loadBalancerNamePrefix, loadBalancerNamePrefix);}
public virtual IList<Vote> GetVotes(Proposal proposal){return proposal.GetVotes(null, proposal);}
public Policy Create(string json){return Create(json, PolicyCreationOptions.NoValidation)? Create(json, PolicyCreationOptions.Validation) as Policy : Create(json, PolicyCreationOptions.Validation) as Policy;}
public virtual void SetCommand(string name){this.name = name;}
public virtual void ActivityTaskFailed(TaskError error){_activityTaskFailed = error;}
public virtual GetInternetGatewaysResponse GetInternetGateways(GetInternetGatewaysRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetInternetGatewaysRequestMarshaller.Instance;options.ResponseUnmarshaller = GetInternetGatewaysResponseUnmarshaller.Instance;return Invoke<GetInternetGatewaysResponse>(request, options);}
public virtual SavedPass GetPass(){return pass;}
public virtual void Update(DataSet set){this.data = set;}
public virtual string GetBoostString(){return BoostNames.Get(Boost);}
public virtual object Clone(){return (object)this.GetType().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo().GetTypeInfo()));}
public override bool Equals(object o){if (o == this){return true;}return false;}
public override Sharpen.Iterator<RevFlag> GetIterator(int doc){return new _Iterator_276(this, doc, 0, doc.DocId);}
public virtual void SetSkillsSkillsUsers(int skills){foreach (var user in skills.Users){SetUserSkills(user, skills);}}
public Permissions PermissionsFor(IResource resource){return PermissionsFor(resource.GetName(), resource.GetType(), resource.GetResourcePath());}
public virtual E lastInStack(){return _stack.pop();}
public void Save(){this._writer.Save(this.GetRawContent());}
public virtual void delete(string key){delete(key, Sharpen.Util.ParseKeyValuePair(key));}
public override int GetMaximumNumberOfFilesToRename(){return _maxRenamedFiles;}
public virtual ElevatorEndRecord Clone(){return (ElevatorEndRecord)Clone();}
public virtual IList<Member> CreateMembers(IList<Member> members){return members;}
public CFRecordsAggregate Create(RecordStream recordStream){return Create(recordStream, 0, recordStream.Length);}
public virtual GetClassificationJobResponse GetClassificationJob(GetClassificationJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetClassificationJobRequestMarshaller.Instance;options.ResponseUnmarshaller = GetClassificationJobResponseUnmarshaller.Instance;return Invoke<GetClassificationJobResponse>(request, options);}
public void RemoveTags(string resource, string tagPrefix){_tags = new Dictionary<string, string>();{ _tags = new Dictionary<string, string>();_tags.Remove(resource, tagPrefix);}
public virtual string GetText(int errorCode){return GetErrorText(errorCode);}
public string DFA(int DFAIndex){return _dfaNames[DFAIndex];}
public virtual void setValueAt(int index, V value){object[] newValues = new object[values.Length + 1];System.Array.Copy(values, 0, newValues, 0, values.Length);}
public virtual ClausesList GetClauses(){return clauses;}
public virtual void Cancel(bool cancelled){_limiter = null;_limiter = null;}
public DateTime DateToFormat { get; set; }
public override int Read(byte[] buf, int offset, int count){int end = offset + count;for (int i = offset; i < count; i++){byte b = buf[i];if (b[i] == 0){break;}}return end - pos;}
public virtual MergePolicy SetMergePolicy(MergePolicy @policy){this.m_mergePolicy = @policy;}
public override long TotalBytesUsed(){return base.TotalBytesUsed();}
public virtual Readings ReadWord(){return _reading;}
public virtual ModifyDBClusterRequest ModifyDBCluster(ModifyDBClusterRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyDBClusterRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyDBClusterRequestMarshaller.Instance;return Invoke<ModifyDBClusterRequest>(request, options);}
public IPrintArea GetPrintArea(ISheet sheet){return GetPrintArea(sheet);}
public virtual void Extend(B @base, int capacity){if (capacity > 0){for (int i = capacity; i < capacity; i++){Extend(base, i + 1, capacity);}}}
public virtual void LockDomainTransfer(bool exclusive){lock (domainTransfer){enablesOrDisables(exclusive);}}
public override String GetFontName(){return fontName;}
public virtual Attributes GetAttributes(){return fleetAttributes;}
public virtual string GetRevision(string applicationName){return GetRevision(applicationName, 0);}
public virtual PlacementInformation GetPlacementInformation(){return placementInformation;}
public virtual NGit.Storage.File.Record GetRecord(){return this._enclosing.GetRecord(this.name);}
public virtual string quote(string value){return quote(value);}
public virtual byte[] Decode(byte[] bytes, int offset, int length){for (int i = offset; i < length; i++){byte b = Decode(bytes[i], 16);if (b!= null){int b1 = Decode(bytes, i + offset, length);int b2 = Decode(bytes, i + offset, length);int b3 = Decode(bytes, i + offset, length);for (int i = i + length; i < b3; i++){b3 = Decode(bytes, i + offset, length);}}return b3;}
public virtual TokenSet GetExpectedTokens(){return expectedTokens;}
public void SetPaneInformation(PaneInformation paneInformation){this.paneInformation = paneInformation;}
public virtual void DoubleField(double value){Add(default(double), new DBDoubleField(this));}
public virtual ValueDereferenceResult Dereference(ValueDereferenceResult result){return _delegate.Dereference(result.GetValue());}
public virtual NGit.Storage.File.Record GetRecord(){return this._enclosing.GetRecord(this.name);}
public void SetFieldsData(ICollection<string> fieldsData){_fieldsData = fieldsData;}
public int get_groups_count(){return _address.groups_count;}
public virtual IList<Metric> GetMetrics(){return metrics;}
public virtual void copy(){throw new System.NotImplementedException();}
public string GetPathName(){return Sharpen.Runtime.Substring(this.path, this.start, this.path.Length);}
public override int GetLevel(int distance){return _le.GetLevel(distance);}
public virtual ITemplate GetTemplateInformation(){return _templateInformation;}
public SetPathRequest(string pathRequest){_path = pathRequest;_pathRequest = pathRequest;}
public virtual void Build(){base.Build();}
public virtual DescribeJobResponse DescribeJob(DescribeJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeJobRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeJobRequestUnmarshaller.Instance;return Invoke<DescribeJobResponse>(request, options);}
public bool Contains(int column){return 0 <= column && column < _limit;}
public override void fill(long[] values, int value, int arrayOffset, int arrayOffset, int arrayOffset, int arrayOffset, int arrayOffset, int arrayOffset, int arrayOffset) {fill(values, 0, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset, arrayOffset); }
public virtual UpdateDashboardResponse UpdateDashboard(UpdateDashboardRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateDashboardRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateDashboardResponseUnmarshaller.Instance;return Invoke<UpdateDashboardResponse>(request, options);}
public virtual string key(K key){return key(null, _root, key);}
public virtual void reset(){map = null;}
public virtual DescribeAPIMappingsResponse DescribeAPIMappings(){return DescribeAPIMappings(null, null);}
public virtual void Reboot(){DBInstance.Reboot(null);}
public SimpleFacets(ICollection<Facet> facets){return new SimpleFacets(facets);}
public virtual void modifyInstanceAttribute(){object.RedefineInstanceAttribute(this, "instanceIndex", "instanceIndex");}
public virtual int[] GetIntegerValues(int start, int length){int[] ints = _input.GetIntegerValues(start, start + length);return ints;}
public string getPath(){return "";}
public virtual CompilationJob CreateCompilationJob(string name){return null;}
public void DeleteFieldLevelEncryptionProfile(FieldLevelEncryptionProfile profile){DeleteInternal(profile.GetKey(), profile.GetSecret());}
public virtual void clear(){map.clear();}
public virtual void SetPropagationEnabled(bool enablePropagation){for (int i = 0; i < _transitGateway.numRouteTables; i++){SetPropagationEnabled(i);}}
public virtual IList<CustomerGateway> GetCustomerGateways(){return Sharpen.Util.ListAll<CustomerGateway>(active) as a list;}
public DefaultAcsClient(){return new DefaultAcsClient(this);}
public virtual IList<FileHeader> GetLogFiles(){return DB.GetLogFiles(null, true);}
public virtual string GetReplacementBytes(){return replacement;}
public CompositeReaderContext Create(XmlReader reader, int level){return Create(reader, level);}
public virtual string ToString(){return GetCanonicalName();}
public MessageBatchRequestParameters MessageBatch ( MessageBatch requestParameters){_messageBatch = requestParameters;_messageBatch = requestParameters;}
public virtual void DumpDeadEndConfigs(){DumpDeadEndConfigs(null);}
public TokenFilter Truncates(ICharStream input){return new TruncatesTokenFilter(m_luceneMatchVersion, input);}
public virtual void ExplainIdfError(){ShowIDfError();}
public virtual ProtectRecord Clone(){return new ProtectRecord(this);}
public virtual IRequestValidator GetRequestValidator(){return validator;}
public virtual void DisassociatePhoneNumbers(string phoneNumber){connection = null;}
public virtual IndexReader AcquireIndexReader(int version){return _indexReaders.Get(version);}
public virtual CreateCloudPhotoEventRequest CreateCloudPhotoEventRequest(CloudPhotoEventRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateCloudPhotoEventRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateCloudPhotoEventRequestUnmarshaller.Instance;return Invoke<CreateCloudPhotoEventRequest>(request, options);}
public virtual void Stop(){this.db = null;this.activeInstance = null;this.deactivate();}}
public Filter CreateFilter(IDictionary<string, string> parameters){return new Filter(this, parameters);}
public override int get(){return _buf.get();}
public virtual void ReadRK(Record record){_rc4.SkipTwoBytes();_rc4.StartRecord(record);}
public virtual string end(){return _buf.ToString(CultureInfo.InvariantCulture);}
public virtual string GetErrorText(){return GetErrorText();}
public virtual bool Equals(AnyObjectId other){return base.Equals(other);}
public virtual void SetExternalReference(ExternalReference externalReference){this.externalReference = externalReference;}
public virtual void Update(TemplateTemplate newTemplate){this.NewTemplateInstance = newTemplateInstance;this.NewVersion = newTemplateInstance.Generation;this.Update(newTemplateInstance);}
public override long Length(){return _size;}
public virtual string ToString(){return GetCanonicalName();}
public CellRangeAddress GetCellRangeAddress(int index){return _cells[index];}
public override int GetCompressionLevel(){return _compression;}
public BookBoolRecord readFrom(ObjectInput in1){return ReadBookBoolRecord(in1, in1);}
public namespace_delete_request(NamespaceNamespaceRequest request){var options = new InvokeOptions();options.RequestMarshaller = NamespaceDeleteRequestMarshaller.Instance;options.ResponseUnmarshaller = NamespaceDeleteResponseUnmarshaller.Instance;return Invoke<NamespaceDeleteRequest>(request, options);}
public virtual IdentityPool Info(){return _identityPool;}
public AnalyzerOptions AnalyzerOptions { get; internal set; }
public virtual NGit.Api.Room Update(Room room){return Room(room);}
public virtual void SetTokenNames(string[] tokenNames){this.m_tokenNames = tokenNames;this.m_label = null;}
public virtual long Decode(long value){return BitConverter.Int64BitsToDouble(value);}
public override void close(){this._reader.close();this._enclosing.close();}
public ProgressMonitor(ProgressMonitor other){this.other = other;}
public virtual string getValue(){return mValue;}
public DeleteAlbumsRequest(): base(){return pathNew;}
public override string ToString(){return "Infinity";}
public virtual UpdateFleetResponse UpdateFleet(UpdateFleetRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateFleetRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateFleetResponseUnmarshaller.Instance;return Invoke<UpdateFleetResponse>(request, options);}
public override void SetPrefixGridScanLevel(int level){prefixGridScanning = level;}
public virtual void DeleteExperiment(string experimentId){if (experimentId == null){throw new ArgumentNullException("experimentId cannot be null");}Experiment experiment = Sharpen.Extensions.CreateValue(default(ExperimentID));}
public virtual Cluster GetClusterDetails(){return ClusterDetails.Create(GetClusterName());}
public virtual WorkflowExecutionHistory GetHistory(){return history;}
public virtual RevFilter Filter(ICollection<RevFilter> filters){return new CommitFilter(filters);}
public virtual void SetLambdaAndNormParams(){m_lambda = LambdaFunction.assign(T, LAMBDA_MIN_VALUE);m_normalization = LambdaFunction.assign(T, LAMBDA_MIN_VALUE);}
public bool Equals(MutableValueBool other){return Equals(other);}
public virtual NGit.Api.Connection CreateConnection(string host, int port){return new NGit.Api.Connection(host, port);}
public virtual bool ShouldCache(bool use_caching){return _cache;}
public ThreatIntelSet Update(int threatIntelSetId){return Update(threatIntelSetId, ThreatIntelSet);}
public virtual string Get(string @objectName){return Get(@objectName, true);}
public java.text.Tokenizer toNull(){return null;}
public virtual ICollection<E> GetSet(E @object){return this._enclosing.GetSet(@object);}
public void AddDbcell(Bcell dbcell){cells.Add(dbcell);}
public virtual ModifyInstanceGroupsResponse ModifyInstanceGroups(ModifyInstanceGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyInstanceGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyInstanceGroupsResponseUnmarshaller.Instance;return Invoke<ModifyInstanceGroupsResponse>(request, options);}
public virtual string ToString(){return GetCanonicalName();}
public virtual void SetFormatRun(FormatRun run){formatRun = run;}
public virtual ConsoleWriter GetConsole(){return console;}
public virtual void SetResourceRecordSets(List<ResourceRecordSet> sets){_resourceRecordSets = sets;}
public java.nio.ByteBuffer slice(java.nio.ByteBuffer offset,_limit) {return byteBuffer.slice(offset, _limit);}
public virtual void AssociateUserStacksWithYourAccount(AssociateUserStacksWithYourAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateUserStacksWithYourAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateUserStacksWithYourAccountResponseUnmarshaller.Instance;return;}
public virtual void SetRawData(object rawData){this._enclosing.SetRawData(rawData);}
public ListPhotosRequest(): base(){return new ListPhotosRequest(this);}
public string Id { get; set; }
public virtual IList<DeploymentTarget> GetDeploymentTargets(){return deploymentTargets;}
public virtual void SetType(int type){this.type = type;}
public virtual GetCampaignsResponse GetCampaigns(GetCampaignsRequest request){var campaign = GetCampaigns(request);return GetCampaigns(request, default(GetCampaigns)).Values(campaigns).Values(campaigns).Values(campaigns).Values(campaigns).Values(campaigns).Values(campaigns).Values(campaigns).Values(campaigns).Values(campaigns).Values(campaigns).Values(campaigns).Values(campaigns
public virtual int maximumNumDocsToCache = DEFAULT_MAX_DOCS_TO_CACHE;}
public override bool Equals(object o){if (o == this){return true;}return false;}
public void DeleteVoiceChannel(VoiceChannelResponse payload){VoiceChannelResponse.Delete(payload, 0, 0);}
public ElisionFilterFactory Create(FilterParameters parameters){if (parameters == null){throw new ArgumentNullException("parameters cannot be null");}return new ElisionFilterFactory(parameters);}
public void DeleteDomainNameAndItemId(string domainName, string itemId){_domainName = domainName;_itemName = itemId;}
public virtual int FooterLength(){return _footerLength;}
public virtual ListTagsResponse ListTags(ListTagsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListTagsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListTagsResponseUnmarshaller.Instance;return Invoke<ListTagsResponse>(request, options);}
public override object Decode(byte[] data){return this.Decode(data, 0, data.Length);}
public virtual DeleteGuardDutyRequestValidatorResponse DeleteGuardDutyRequestValidator(DeleteGuardDutyRequestValidatorRequest request){return DeleteGuardDutyRequestValidatorResponse(request);}
public virtual ICollection<TrackingRefUpdate> GetUpdates(){return trackingRefUpdateInstance.GetUpdates();}
public override void SetLexerActionExecutor(LexerActionExecutor lexerActionExecutor){base.SetLexerActionExecutor(lexerActionExecutor);}
public void Delete(Graph graph){Delete(graph, 0, 0);}
public virtual void write(char b){if (m_len >= m_buf.size){throw new System.IO.IOException("Buffer is full");}m_len += b;}
public Filter(string field_1_name){return new FilterName(field_1_name, field_2_options);}
public ZonalPlacementOptions availabilityZone { get; set; }
public virtual IEventBus Get(int id){return _bus.Get(id);}
public virtual Profile GetProfile(string name){return fargateProfiles[name];}
public override string GetSignerVersion(){return SignerVersion.LUCENE_CURRENT;}
public int FindFirstRecordId(Record record){return FindFirstRecordId(record.sid);}
public override java.nio.ByteBuffer duplicate(){return duplicate(this._position, this._order);}
public virtual SpotPriceHistory GetSpotPriceHistory(){return SpotPriceHistory(null);}
public override bool Equals(object o){if (o == this){return true;}this._enclosing.Equals(o);return false;}
public virtual void DeleteVpc(Vpc vpc){DeleteVpc(vpc.VpcId);}
public virtual void ResetCacheParameterGroup(int group_index){_cacheParameterGroup = group_index;}
public ListSubAccountsResponse ListSubAccounts(ListSubAccountsRequest request){return ListSubAccountsResponse(request, null, null);}
public virtual void AddFacet(Facet facet){Facet o = new Facet(this, facet);o.FacetQuery = facet;}
public void PutShort(short value){if (value >= 0){throw new System.IndexOutOfRangeException("Value " + value + " is not supported. (0x" + (value >= 0xFFFF) + "), but was " + value + " before it was written.");}Buffer.PutShort(value);}
public virtual void SetErrorCode(int errorCode){Sharpen.Extensions.SetErrorValue(hb, errorCode);}
public virtual int GetLineCount(){return _buf.GetLineCount();}
public virtual void DecreaseNumberOfReplicas(int maxNumReplicas){incrNumberOfReplicas(maxNumReplicas);}
public virtual LabelingJob GetLabelingJob(LabelingJobName name){return labelingJobs[name];}
public virtual void DeleteConferenceProvider(ConferenceProvider provider){_provider = null;}
public virtual ListNamespacesResponse ListNamespaces(ListNamespacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListNamespacesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListNamespacesResponseUnmarshaller.Instance;return Invoke<ListNamespacesResponse>(request, options);}
public virtual void SetJobParameters(string jobParameters){this.jobParameters = jobParameters;}
public virtual TLSCertificate CreateCertificate(LoadBalancer loadBalancer, LoadBalancerConfiguration loadBalancerConfiguration){return CreateCertificate(loadBalancerConfiguration, null, null, null, null, null, null, null, null);}
public TokenizerSet model){this.m_model = model;}
public override void put(float[] v){if (m_len >= m_buf.remaining()){throw new java.nio.BufferOverflowException();}p.backingArray[m_len++] = v;}
public virtual void Delete(BaseMessage msg){_rc4.DeleteMessage(msg.GetId());}
public string GetFilePath(){return GetFilePath(null);}
public virtual string Prefix(string str){return Prefix(str, 0, str.Length);}
public virtual void SetInstanceIds(int instanceIds){_instanceIds = instanceIds;}
public virtual Attributes list(){return new ArrayList<LoadBalancerAttribute>(loadBalancers.Count);}
public virtual IList<Version> GetVersions(){return solution.GetVersions();}
public override IList<string> GetFiles(){return filenames;}
public string GetText(IVocabulary vocabulary){return vocabulary.ToString(null, NumberStyles.Integer, vocabulary);}
public virtual void ReadOptions(DataInput in1){int field_1_options = in1.ReadUByte();field_2_options = in1.ReadUByte();}
public void write(char b){throw new System.NotImplementedException();}
public void SetSummaryProperty(PropertySet propertySet){_summaryProperty = propertySet;}
public bool Contains(IPoint p){Debug.Assert(p is Tuple2 and p.X == left && p.Y == top);return true;}
public new SimpleQuery(Field, PhrasedQuery string contents, options){return new SimpleQuery(this);}
public override void write(char b){throw new System.NotImplementedException();}
public virtual void SetIndexFieldName(string indexFieldName){m_indexFieldName = indexFieldName;}
public virtual int end(){return list.end();}
public virtual void Run(IBenchmark benchmark){benchmark.Run(null, benchmark);}
public SupBookRecord Create(SupBookRecord record){return record;}
public virtual void Negate(){this.operator = FilterOperator.Negate;this.negateFlags = NegateFlags;}
public ValueEval Evaluate(ValueEval arg0, ValueEval arg1,ValueEval arg2,ValueEval arg3,ValueEval arg4,ValueEval arg5,ValueEval arg6,ValueEval arg7,ValueEval arg7_1, ValueEval arg7_2,... arg7_3){return new _ValueEval_223(arg4, arg5, arg6, arg7_4, arg7_5, arg7_6);}
public java.text.ScannerClass.BreakIterator _breakIterator = null;_breakIterator = _breakIterator;}
public AttributeSource(AttributeSource other){return other;}
public override SignerType GetSignerType(){return type;}
public Scorer(Query query, Field field){_query = query;_field = field;}
public override float get(){return get(this.position(), java.nio.FloatBuffer.DEFAULT_POSITION);}
public override int size(){return this._enclosing._size;}
public virtual void insert(object o, int position, object o1){if (position == _position){inserted = o1;}else{inserted.insert(position, o1);}}
public virtual void Read(byte b){ReadFully(b, 0, b.Length);}
public virtual DescribeBundleTasksResponse DescribeBundleTasks(DescribeBundleTasksRequest request){return DescribeBundleTasks(request, null);}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_formatIndex);}
public virtual void append(char c){append0(c);}
public java.util.HashMap<K, V> getSubMap(java.util.HashMap.KeyRange keyRange){return this._enclosing.subMap(keyRange.Start, keyRange.End, keyRange.PrefixLength, keyRange.Length, keyRange.Length, keyRange.Length, keyRange.Length, keyRange.Length, keyRange.Length, keyRange.Length, keyRange.Offset, keyRange.Length, keyRange.PrefixLength, keyRange.PrefixLength);}
public virtual ModifyClusterSubnetGroupResponse ModifyClusterSubnetGroup(ModifyClusterSubnetGroupNameResponse result);return UpdateClusterSubnetGroup(result);}
public print_cell_comments(int id){return _print_cell_comments[id];}
public virtual SchemaVersion GetAppliedSchemaVersion(){return SchemaVersion.GetAppliedSchemaVersion();}
public virtual void UpdatePhoneConfiguration(string phone){_phone = phone;}
public virtual bool charArraysEqual(char[] array, int arrayIndex){return charArraysEqual(array, 0, arrayIndex);}
public virtual string GetDescription(){return GetDescription() + " (resource: " + _resource + ")";}
public override string ToString(){return Term.Utf8ToString();}
public override string ToString(){return base.ToString();}
public virtual ParseException generateParseException(string message, ParseException e){throw new System.NotImplementedException();}
public virtual void Deactivate(){this._enclosing.Deactivate();}
public virtual void SetCalcmode(int calcmode){field_1_calcmode = calcmode;}
public ExternalBookBlock Reconstruct(RecordStream inStream){return new ExternalBookBlock(inStream, this);}
public FontUnderlineStyle GetFontUnderlineStyle(){return _fontUnderlineStyle;}
public string getPath(){return path;}
public virtual void TrimLeadingSpace(int range){TrimLeadingSpace(range, 0);}
public override void put(long value){if (value >= 0){throw new System.IndexOutOfRangeException("value=" + value + " outOfBounds=" + (long)value.ToString("broken-out"));}else{buffer[offset + writeIndex++] = value;}}
public PatchInput(Stream input){this.m_input = input;this.m_useEditMode = true;this.m_updateOffsets = true;this.m_precedence = true;this.m_precedence = true;this.m_postcedence = true;this.m_precedence = true;this.m_precedence = true;this.m_postcedence = GetPostcedence(input);}
public virtual void UpdateBuildRule(BuildRule rule){this.updateBuildRule(rule.BuildRuleId);}
public virtual string GetText(ICharTerm term){return GetText(term, 0, term.Length);}
public virtual NodeHash New(FST input){FST.Copy(input, 0, m_fst, 0, m_len);return new NodeHash(this, input, m_len);}
public virtual void Attach(TypedBuffer buffer){this._enclosing.Attach(buffer);}
public ShardCountUpdates(int shards){return shards;}
public virtual IList<ResolverEndpoint> GetResolverEndpoints(){return new List<ResolverEndpoint> { this._enclosing.GetResolverEndpoints()}};
public virtual bool Equals(Terms terms, float score){return terms!= null? Equals(Terms, maxTerms) : false;}
public virtual string GetLastCommand(){return GetLastCommand();}
public Sheet Build(SheetRecord sheet){return build(sheet, null, null);}
public void seek(long pos){long filePointer = filePointer;filePointer = filePointer;}
public bool IsBorder(ICharStream input){return this.GetNextLnk()!= -1;}
public formulaName(){return _formulaName;}
public row, column indices are given. public int getRowAndColumnIndices(OperationEvaluationContext ctx){return _opencounter.EvaluateRowAndColumnIndices(ctx.EvaluateRowAndColumnIndices(ctx.EvaluateRowAndColumnIndices(ctx.EvaluateRowAndColumnIndices(ctx.EvaluateColumnAndIndexCulture), ctx.EvaluateColumnAndIndexCulture), ctx.EvaluateColumnAndIndexContext);}
public override object Decode(byte b){return this.Decode(b, 0, b.Length);}
public virtual TrainingJobDetail GetTrainingJobDetail(){return trainingJobs.Get(this.JobId);}
public virtual void Encode(char b){EncodeChar(b, 0, b.Length);}
public virtual NGit.Api.DiffCommand SetRevisionFilter(Filter revisionFilter){this.filter = revisionFilter;return this;}
public bool remove(int index){return remove(index, true);}
public override byte arrayGet(int index){return backingArray.get(index);}
public virtual int start(int start){return start;}
public virtual void SetInstanceID(string instanceID){this.instanceID = instanceID;}
public SupBookRecord CreateExternalReferences(SheetNameRecord sheetName, IList<SheetNameRecord> externalReferences){return CreateExternalReferences(sheetName, externalReferences);}
public Scorer(Query query, Reader reader){_query = query;_reader = reader;}
public void SetActiveTrustedSigners(List<Signer> signerList){_activeTrustedSigners = signerList;}
public virtual Filter Update(Filter existingFilter){filters.AddItem(new Filter(this));return existingFilter;}
public virtual void DeleteSuggester(AmazonGuardDutySuggester suggester){DeleteSuggester(suggester);}
public virtual FleetMetadata GetFleetMetadata(){return fleetMetadata;}
public override bool Equals(object o){if (o is java.util.MapClass.Entry<K, V>){return this._enclosing.Equals(o);}return false;}
public void CloneFrom(ICellStyle other){CloneCellStyle(other);}
public virtual bool contains(object o){return this._enclosing.containsValue(o);}
public Automaton Intersect(Automaton automaton){return Intersect(automaton, this) if this automaton is an intersection of this automaton;}
public virtual SignalingByteChannel CreateSignalingByteChannel(int maxBuffer, int flags) : base(maxBuffer, flags){return new SignalingByteChannel(this, flags);}
public virtual Dictionary<string, List<string>> GetKeyPairs(){return keyPairs;}
public override void SetObjectId(ObjectId note){this.note = note;}
public virtual NGit.Storage.File.Entry<K, V> lookup(object id, string type){lock (mutex){return lookup(id, type);}}
public virtual void AddStepsToJobFlow(IList<Step> steps){for (int i = 0; i < steps.Count; i++){AddStepToJobFlow(steps[i]);}}
public virtual bool Equals(object o){if (!(o is CompareTag)){return false;}CompareTag(o);return true;}
public virtual DescribeGuardDutyRecordsResponse DescribeGuardDutyRecords(){return DescribeGuardDutyRecords(null, null);}
public virtual void IncrementRefCount(int refCount){count += 1;}
public virtual void remove(object o){removeRange(o, o.FirstIndexOf(o)));}
public new CapitalizationFilter(TokenStream stream){return new CapitalizationFilter(stream, dialect);}
public virtual void ReportAmbiguity(DfaState dfa){ReportAmbiguity(dfa.Dfa);}
public NameComment(RecordInputStream in1){_in1.Read(_nameComment);return _nameComment;}
public virtual string GetContent(){return GetMessage(false);}
public void InsertRow(IRow row){InsertRow(row);}
public virtual List<TypeVersion> ListTypeVersions(){return ListTypeVersions(null, null, null);}
public DictionaryInput(Stream input){this.input = input;this.dictionaryClass = typeof(DictionariesInput) as DictionariesInput;}
public virtual int key(int key){return key;}
public virtual void push(E e){if (e is java.util.LinkedList.Entry<E>){push(e);}else{push(e);}}
public virtual void consume(){char ch;do{consume(ch);}}
public virtual TypeRegistration GetTypeRegistration(){return typeRegistration;}
public virtual NGit.Stream CreateStream(StreamConfig config){return new NGit.Stream(config, this);}
public virtual string ToString(){return GetCanonicalName();}
public virtual void write(string @string){throw new System.NotImplementedException();}
public void RemoveAutoScalingPolicy(AutoScalingPolicy policy){resource = null;}
public string Get(string name){return Sharpen.Util.Get(object, properties, name);}
public override void close(){_writer.close();}
public NGit.Storage.References.OleClass createOleClass(Type of(NGit.Storage.References.OleClass.Value)){return OleClass.Create(this, of(NGit.Storage.References.Value));}
public virtual string GetReferencedMode(){return referenceMode;}
public void Reset(byte[] b){Reset(b, 0, b.Length); }
public int index (int ruleIndex){this.ruleIndex = ruleIndex;this.actionIndex = actionIndex;}
public override long Length(){return _size;}
public void Clear(){Password = null;Username = null;}
public virtual void SetForceUpdateFlag(bool b){forceUpdate = b;}
public virtual NGit.Commit FindCommit(string commitId){if (commits.ContainsKey(commitId))return commits[commitId];return null;}
public void ResetCacheParameterGroupName(string parameterGroupName, string parameterGroupNameValues){ResetCacheParameterGroupName(parameterGroupName, parameterGroupNameValues);}
public static bool equal(double[] array, int arrayIndex){return arrayIndex == 0 && arrayIndex == 0;}
public override long Size(){return _size;}
public PatternSyntaxException(string pattern, int index){return new PatternSyntaxException(pattern, index);}
public virtual void Delete(DeleteAttributeContext attributes){for (int i = 0; i < attributes.Length; i++){Attribute e = attributes[i];if (e.GetAttribute() == null){throw new ArgumentNullException("e.attribute" + i + " does not exist");}}}
public virtual void Disconnect(){server.Disconnect();}
public virtual byte[] GetAsByteArray(){return GetAsByteArray();}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(this.HSSFErrorColor);out1.WriteShort(this.IdeFormatCode);}
public TreeFilters(IList<TreeFilter> filters){return new List<TreeFilter>(filters);}
public virtual void DetachInternetGateway(){EgatewayClassic.DetachInternetGateway(this);}
public virtual int64s(int64s(v)){return v}
public override bool Equals(object o){return this.GetEnumerator().Equals(o);}
public virtual IList<string> GetDocumentationParts(){return documentationParts;}
public PrefixSettings(string inventoryPrefix){this.inventoryPrefix = inventoryPrefix;}
public GetOSSImageAccessRequest(): base.RequestParameters){return GetOSSImageAccessRequest();}
public override long Get(){return buf[off + 1];}
public ListEventsRequest(): base("/events", "events", "index", "desc", "openAPI"){return ListEvents(null, "events");}
public virtual void SetRefLogIdent(string ident){@refLogIdent = ident;}
public virtual void Delete(MLModel model){Delete(model.ReferenceSystem.cFGModel);}
public ATNimulator(object instance){_instance = instance;}
public virtual int capacity(){return _limit;}
public virtual void DeleteIntegration(Integration integration){this.Integration = null;this.RemoveOnExit=true;this.Integration = null;}
public ByteBlockPool Create(ByteAccess allocator){return Create(allocator);}
public virtual java.nio.CharRange range(int start, int end){return new java.nio.CharRange(start, end);}
public virtual string Encode(ICharSequence text, int length){return Encode(text, 0, length);}
public virtual IList<Destination> GetSuppressedDestinations(){return suppressedDestinations;}
public override RecordStream CreateRecordStream(RecordStream stream){return new ChartSubstreamRecordAggregate(stream, this);}
public virtual ListPoliciesResponse ListPolicies(int group){return ListPolicies(group, null);}
public virtual IList<StackResource> GetStackResources(){return stackResources;}
public EgressOnlyInternetGatewayGateway(GatewayConfiguration configuration){return this;}
public virtual CreateSnapshotResponse CreateSnapshot(CreateSnapshotRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateSnapshotRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateSnapshotResponseUnmarshaller.Instance;return Invoke<CreateSnapshotResponse>(request, options);}
public DescribeVaultRequest(){return new DescribeVaultRequest(vaultName, accountID);}
public CreateHostedZoneResponse CreateHostedZone(CreateHostedZoneRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateHostedZoneRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateHostedZoneResponseUnmarshaller.Instance;return Invoke<CreateHostedZoneResponse>(request, options);}
public virtual IStartJob StartJob(IDictionary<string, IValue> valueJob){return StartJob(valueJob, null, valueJob.AddDetail(name_as_string()));}
public void capacity(int capacity){list.capacity = capacity;}
public override void SetValue(string newValue){value = newValue;}
public override Expression Get(int row, int column){return GetExpressionForValue(row, column);}
public override string GetSegmentsFilePath(string path){return Sharpen.Runtime.CombinePath(path, GetSegmentsFileName(path));}
public virtual Stemmer GetStem(string str){return StemmerUtil.Stem(str, m_luceneMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_luceneMatchVersion, m_matchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_matchGroups, m_matchGroups, m_matchGroups, m_matchGroupsToMatchGroups, m
public virtual string ToString(){return GetCanonicalName();}
public override bool ShouldRecurse(string path){return path.EndsWith(path, StringComparison.Ordinal) || path.EndsWith(path, StringComparison.Ordinal);}
public virtual void AddCommit(ICommit commit){revertList.AddItem(commit);}
public void Write(PtgRecord rec){_out.Write(rec.PtgRecordId);_ptgRecord = rec;}
public bool matches(string str){return matches(str, 0, str.Length);}
public string value{get; internal set;}
public virtual JourneyDates GetJourneyDates(){return GetJourneyDates(null);}
public virtual ModifySnapshotScheduleResponse ModifySnapshotSchedule(ModifySnapshotScheduleRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifySnapshotScheduleRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifySnapshotScheduleResponseUnmarshaller.Instance;return Invoke<ModifySnapshotScheduleResponse>(request, options);}
public virtual bool Has(string id){return Sharpen.Extensions.TryGetValue(Sharpen.Extensions.GetValue(Sharpen.Extensions.GetValue(Sharpen.Extensions.GetValue(Sharpen.Extensions.ID, id))!= null;}
public virtual void Run(){base.Run();}
public Package CreateModel(XmlElement doc){_doc = doc.AddChild(doc).FirstChild;}
public override void SetRetainBody(){retainBody = true;}
public virtual void ModifyVolumeAttributes(VolumeAttributeSet attributes){for (int i = 0; i < attributes.Length; i++){CreateVolumeAttribute(attributes[i]);}}
public LinkFaceRequest(LinkFaceRequest request){return (request == null)? new LinkFaceRequest(this) : new LinkFaceRequest(request);}
public DBSecurityGroup(string dbSecurityGroupName){return (new DBSecurityGroup(dbSecurityGroupName));}
public RFC2616 date(DateTime date){return getUTCFullYear(date);}
public virtual NGit.EntityResolver GetEntityResolver(){return _entityResolver;}
public bool ShouldPack(int level){return _level <= _levelToPack[level];}
public void Resize(ScaledImage image, ScaledScale) {Resize(image, scale, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, "Scale"), "B"), "B" and "A" are not supported. Use ImageUtils.Resize(image, scale, 1.0f, 1.0f, "B"), "B"), "B"), "B" return;}
public int valueAt(int index){return array[index];}
public virtual UpdateUserInfoResponse UpdateUserInfo(UpdateUserInfoRequest request){return UpdateUserInfo(request.ToQueryString());}
public virtual object GetInstanceAttribute(){return InstanceAttributes.Get(this, AttributeName);}
public virtual IList<ParameterGroup> GetParameterGroups(){return parameterGroupResource.ListParameterGroups();}
public virtual bool hasBeenSet(){return renameDetector!= null;}
public virtual void AuthorizeAccessToSnapshot(){_enterpriseInstance.AuthorizeAccessToSnapshot(null, true);}
public virtual AuthorizeSecurityGroupResponse AuthorizeSecurityGroup(AuthorizeSecurityGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = AuthorizeSecurityGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = AuthorizeSecurityGroupResponseUnmarshaller.Instance;return Invoke<AuthorizeSecurityGroupResponse>(request, options);}
public virtual UpdateInstancesResponse UpdateInstances(UpdateInstancesRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateInstancesRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateInstancesResponseUnmarshaller.Instance;return Invoke<UpdateInstancesResponse>(request, options);}
public virtual int Count(CellsReference cr){return Count(cr.GetReferencedCells());}
public Builder(ASTNode node){this.node = node;this.pos = 0;this.options = createOptions(node.options);}
public virtual string value(){return _objectProperty.GetValue();}
public String GetSheetName(SheetNameRecord sheet){return sheet.GetSheetName(pgNameRecord.SheetName);}
public virtual string Get(string name){return (Get(name, null).ToUpper() ==holderName.ToUpper()? Get(name, null) : Get(name, null).ToLower() == holderName.ToLower()? Get(name, null) : Get(name, null) ==holderName.ToLower() == holderName.ToLower() == holderName.ToLower()? Get(name, null) == null? Get(name, null) : Get(name, null) == holderName.ToLower() == null? Get(name, null) == null? Get(name, null) == null : Get(name, null) == null? Get(holderName.Name, null) == null? Get(holderName.Name, null) == null : Get(holderName.Name, null) == null? Get(holderName.Name, null) == null? Get(holderName.Name, null) == null? Get(holderName.Name, null) == null? Get(holderName.Name, null) == null? Get(holderName.Name.Length : Get(holderName.Name.Length
public Subscription SubscriptionFor(string appName, string password){return Subscription(appName, password, "subscribe(string)")
public virtual DescribeDeploymentResponse DescribeDeployment(DescribeDeploymentRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDeploymentRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDeploymentResponseUnmarshaller.Instance;return Invoke<DescribeDeploymentResponse>(request, options);}
public string ToString(CultureInfo locale){return GetString(locale, true);}
public PartSet(string value){_part = value;}
public virtual HashSet<E> GetRanges(){return ranges.GetRanges();}
public int beginAndEndValues(int beginAndEndValues){return _beginAndEndValues[begin];}
public void Delete(BGPPeer bpe){_backend.Delete(bpe);}
public void DisableVpcCriticalLink(){_vpcCriticalLink = null;}
public virtual string GetName(){return name;}
public virtual void CompleteReplicationGroupMigration(ReplicationGroupMigration request){CompleteReplicationGroupMigration(request);}
public GetEvent request(Parameters parameters){if (parameters == null){parameters = new InvokeOptions();}return new GetEvent(this, parameters);}
public virtual ConfigurationHistory GetConfigurationHistory(){return null;}
public virtual BackTrack[] GetBacktracks(int dbClusters){return backtracks;}
public cellCellChanged(CellCellChangedEventArgs e){throw new InvalidOperationException("cellCellChanged(): cell is null");}
public virtual void appendDebugInfo(string info){appendDebugInfo(info, 0, debug.isDebugEnabled());}
public virtual void DescribeVPNGateways(){VPNGatewayResource[] gateways = _data;}
public virtual AutoScalingTable GetAutoScalingTableDetail(){return _autoscalingTableDetails;}
public virtual void Stem(string s){StemmerUtil.Stem(s, 0, s.Length); s.Length = s.Length;}
public bool isEmpty(){return map.isEmpty();}
public int valueAt(int index){return array[index];}
public override long GetLastModified(){return entry.GetLastModified();}
public virtual void DeleteCustomMetadata(string name){Sharpen.Runtime.Dispose(resources[name]);}
public double? Get(string key){return entries[key];}
public virtual IList<Stream> GetStreams(){return _list.GetStreams();}
public override bool Equals(object o){if (o == this){return true;}return false;}
public escher_child_anchor_record_t set(escher_child_anchor_record_t){this.escher_child_anchor_record_t = escher_child_anchor_record_t;}
public virtual DateTimeRange Evaluate(DateTimeRange range){return new DateTimeRange(range.Start, range.End);}
public bool Contains(object o){return base.Contains(o);}
public virtual void put_float(float v){buffer.put_float(v);}
public virtual E lastEntryInthisMap(E key){return this[hash(key)];}
public virtual NGit.Storage.File.Record GetRecord(){return this._enclosing.GetRecord(this.name);}
public usage plan key(string usageKey, int usageKeyLen){return new _UsagePlanKey(usageKeyLen);}
public virtual void WriteLong(){int b0 = _le.ReadLong();_le.WriteLong(b0);}
public java.util.MapClass.Entry<K, V>(){return this;}
public virtual NGit.Storage.File.Record GetRecord(){return this._enclosing.GetRecord(this.name);}
public virtual string GetEmailAddress(){return email;}
public virtual void Sort(int start, int end){if (start < end){throw new IndexOutOfRangeException(start, end);}int endBy = start + 1;int startToEnd = start - end;int endBy = start + end;for (int i = start; i < endBy; i++){EndOfRange(i, endBy, start + 1, endBy, endBy, endBy, endBy, endBy, endBy)){endBy[i] = endBy[i];}}
public virtual void SetAttributes(string value){itemData = value;}
public virtual string sequenceToString(){return java.util.Arrays.toString(seq);}
public bool isEmpty(){return map.isEmpty();}
public virtual void Delete(int id){c.Delete(id);}
public virtual Dedicated IPs: returns information about your Dedicated IPs; returns information about your Dedicated IPs, including Dedicated IPs, and Dedicated IPs, respectively.  public virtual DedicatedIps Information(ds:List<DedicatedIp> categories){return categories;}
public override Object Clone(){return this;}
public virtual HashSet Get(object o){return this._enclosing.Get(o);}
public override void Update(E value){this._enclosing.Update(value);}
public Rule Rule ( string suffix, string replacement){return new Rule(this, suffix, replacement);}
public virtual string get(string key){return getString(key, CultureInfo.InvariantCulture);}
public virtual IList<Schema> GetSchemas(){return schemaHierarchy;}
public virtual LockMessage GetLockMessage(){return _lockMessage;}
public override string ToString(){return Term.Utf8ToString();}
public virtual void readChars(char[] chars, int start, int length){throw new System.NotImplementedException();}
public override FontFormatting GetFontFormatting(){return fontFormatting;}
public virtual void SetUpstreamCommit(ICommit upstreamCommit){_upstreamCommit = upstreamCommit;}
public virtual DescribeTrafficPolicyRequest GetTrafficPolicyRequest(){return DescribeTrafficPolicyRequest(false, GetToken());}
public override void Validate(){base.Validate();}
public string getMatchAsString(){return string.Empty;}
public virtual IList<TransformJob> GetTransformJobs(){return transformJobs;}
public virtual InterconnectInfo GetInterconnectInfo(){return interconnects;}
public virtual int GetObjectId(){return fieldIndex();}
public virtual ICollection<Tag> GetTags(string repository, string user){return tags;}
public override void SetBinaryFileThreshold(int threshold){this.m_binaryFileThreshold = threshold;}
public virtual void write(java.io.OutputStream outputStream){throw new System.NotImplementedException();}
public bool IsAgeGreaterThan(long age){return age >= maxAge && age < maxAge;}
public ValueEval Evaluate(ValueEval arg0, int arg1, int arg2, int argN, int argD, ValueEval argH,ValueEval argS, ValueEval argH, ValueEval argS, ValueEval argN, int argN, bool argB, bool argB, bool argB, bool argC, bool argD, bool argB){return eval(arg0, arg0, argB, argC, argB, argB);}
public virtual QueryAllGroupsResponse QueryAllGroups(QueryAllGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = QueryAllGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = QueryAllGroupsResponseUnmarshaller.Instance;return Invoke<QueryAllGroupsResponse>(request, options);}
public void DeleteProfile(Profile profile){this._enclosing.DeleteProfile(profile);}
public virtual DescribeAlarmsResponse DescribeAlarms(DescribeAlarmsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeAlarmsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeAlarmsResponseUnmarshaller.Instance;return Invoke<DescribeAlarmsResponse>(request, options);}
public virtual NetworkProfile GetNetworkProfile(){return networkProfile;}
public Record ReadUnalced(RecordInput in1){_in1.Read(this.uncalcedRecord);return _in1.Read(this.uncalcedRecordSize);}
public virtual string[] Parse(ITextLineReader reader, int line){int offset = ParseLine(reader, line);if (offset < 0){return null;}return GetLines(reader, offset + 1, line - offset);}
public virtual void GetIdentityAttributes(IdentityAttribute attribute){for (int i = 0; i < _identityAttributes.Length; i++){GetAttribute(attribute, _identityAttributes[i]);}}
public virtual ModifyVPCEndpointResponse ModifyVPCEndpoint(ModifyVPCEndpointRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyVPCEndpointRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyVPCEndpointResponseUnmarshaller.Instance;return Invoke<ModifyVPCEndpointResponse>(request, options);}
public virtual IList<IReservedNode> GetReservedNodes(){return reservedNodes;}
public virtual string ToString(){return ToUniversalString(this);}
public virtual string GetHost(){return host;}
public virtual void Start(){start = true;}
public virtual string ToString(){return GetCanonicalName();}
public override string ToString(){return this.operator.ToString();}
public virtual DescribeDhcpOptionsResponse DescribeDhcpOptions(DescribeDhcpOptionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDhcpOptionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDhcpOptionsResponseUnmarshaller.Instance;return Invoke<DescribeDhcpOptionsResponse>(request, options);}
public ProgressMonitor(ProgressMonitor other){this.other = other;}
public virtual NGit.Api.VpcPeer establishPeer(string vpcName, string vpcPassword){return peerNameToID(vpcName, vpcPassword, "vpcPassword");}
public virtual Score Score(){return score;}
public virtual void DeleteRoomMembership(string roomName){this.roomName = roomName;}
public virtual void push(int b){push(b == 0? 0 : b.Length);}
public override void Write(OutputStream outputStream){@out.Write(packedData);}
public SetFaceCoverRequest(FaceCoverRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetFaceCoverRequestMarshaller.Instance;options.ResponseUnmarshaller = SetFaceCoverRequestUnmarshaller.Instance;return Invoke<SetFaceCoverRequest>(request, options);}
public virtual string GetSkipWorkTreeAsString(){return string.Empty;}
public virtual void Clear(){bits = IntervalEvaluator.Clear(this);}
public CharsRef Next(CharsRef text){return this.Peek(text.Length);}
public matchgroup(string pattern, int flags){this.pattern = pattern;this.flags = flags;}
public virtual void SetDeltaSearchMemoryLimit(long limit){m_deltaSearchMemoryLimit = limit;}
public virtual UpdateUserResponse UpdateUser(UpdateUserRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateUserRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateUserResponseUnmarshaller.Instance;return Invoke<UpdateUserResponse>(request, options);}
public virtual IPAddress[] GetAddresses(){return list.Addresses;}
public UDFFinder User { get; private set; }
public virtual OrderDetail GetPhoneNumberOrderDetails(){return GetPhoneNumberOrderDetails(null, null, null);}
public NGit.Revwalk.Filter.MaxCountRevFilter(){return new NGit.Revwalk.Filter.MaxCountRevFilter(this);}
public java.nio.ByteBuffer slice(java.nio.ByteBuffer offset,_limit) {return byteBuffer.slice(offset, _limit);}
public virtual CreateApplicationVersionRequest CreateApplicationVersionRequest(string applicationName, string version){return CreateApplicationVersionRequest(applicationName, version, "application/x-www-form-urlencoded");}
public DVRecord Create(Record record){return (Record)Create(record.RecordId, record.RecordData);}
public virtual ReceiveCommand.Status GetCherryPickStatus(){return status;}
public virtual GetSmsTemplateResponse GetSmsTemplate(GetSmsTemplateRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetSmsTemplateRequestMarshaller.Instance;options.ResponseUnmarshaller = GetSmsTemplateResponseUnmarshaller.Instance;return Invoke<GetSmsTemplateResponse>(request, options);}
public virtual UpdateReceiptRuleResponse UpdateReceiptRule(UpdateReceiptRuleResponse ruleResponse){return UpdateResource(ruleResponse.Resource, ruleResponse.ResourceWithSuffix);}
public virtual void SetOffsetLimit(int limit){limit = limit;}
public virtual void Update(string version){Update(version, "Documentation Version: " + DocsAndPositions.StringToVersion(version));}
public NameRecord Get(int index){return records[index];}
public CodeRepository CreateOrUpdate(CodeRepository repo){return repo;}
public virtual int Read(byte b){return buf.ReadUpto(b);}
public virtual bool Equals(Terms terms, float score){return terms!= null? Equals(Terms, maxTerms) : false;}
public MethodDefinition CreateContactMethod(MethodDefinition methodDefinition){return (MethodDefinition)Create(methodDefinition, null, null);}
public virtual LoadBalancersPolicy[] GetLoadBalancerPolicies(){return null;}
public virtual bool isEmpty(){return isEmpty();}
public virtual AccountResponse Account(AccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = AccountRequestMarshaller.Instance;options.ResponseUnmarshaller = AccountResponseUnmarshaller.Instance;return Invoke<AccountResponse>(request, options);}
public string replaceAll(string str, replacement1){return replace(str, replacement1);}
public virtual bool TestDNSAnswer(string text){return dns.Identifies(text, 0, text.Length);}
public virtual void FormatMessage(IMessage message){FormatMessage(message, "conflicting paths");}
public virtual void RemoveComments(){Comments = new CommentList(this);Comments.Add(this);}
public virtual ITaskUI GetTaskUI(){return taskInterface.GetTaskUI();}
public virtual DescribeGuardDutyAddressesResponse DescribeGuardDutyAddresses(){return DescribeGuardDutyAddresses(null, null);}
public override void SetDocValues(int[] values){if (this.docValues!= null){this.docValues.Set(this.docValues, this);this.fieldValues = values;this.needsUpdate = true;this.needsUpdate = false;this.maxScore = values.Length;this.oldDocValues = values;this.newDocValues = values;this.newDocValues = null;this.newDocValues = null;this.needsUpdate = false;}
public override TreeFilter Clone(){return this;}
public virtual void DeleteBranch(){DeleteItem(GetBranch());}
public virtual void Finish(){this._enclosing.Finish();}
public virtual DescribeWorkteamResponse DescribeWorkteam(DescribeWorkteamRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeWorkteamRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeWorkteamResponseUnmarshaller.Instance;return Invoke<DescribeWorkteamResponse>(request, options);}
public void Update(){this._enclosing.Update(null);}
public decimal constraint(CultureInfo culture){return _decimal_constraint_factory.create(culture);}
public virtual int GetPort(){return port;}
public virtual void OnEvent(int type, object data){Subscription e = this;Subscribes(e.target, type);}
public virtual IList<NamedQuery> GetNamedQueries(){return namedQueries;}
public virtual void SetHeader(string head){lines[start] = head;}
public virtual BinaryHunkClassifier Create(BinaryHunkReader reader){return (BinaryHunkClassifier)Create(reader, 0, 0);}
public virtual void SetWriteReferences(IList<WriteReference> writeReferences){_writeReferences = writeReferences;}
public virtual int byteCount(){return byteCount();}
public AmazonS3EncryptionClient Create(EncryptionMaterials materials){return Create(materials, ClientEncryptionMaterials.Default, s3:S3EncryptionMaterials, default(EncryptionMaterials));}
public void IncrementDrawingCount(int count){m_drawings.Increment(count);}
public override void putCharAt(int index){java.util.Arrays.checkOffsetAndCount(offset, length);if (offset + length > buffer.length){throw new java.nio.BufferOverflowException();}buffer[offset + length] = char.ConvertFromUtf32(buffer[offset + length]));}
public virtual IList<DeliveryStream> GetDeliveryStreams(){return deliveryStreamRef.ListDeliveryStreams();}
public Ticket(Token token){this.token = token;this.type = TokenType.Ticket;this.ticket = token;}
public override void write(bool b){throw new System.NotImplementedException();}
public void SetRequireDimCount(bool requireDimCount){this.requireDimCount = requireDimCount;}
public virtual void removeAt(int position){removeAt(position);}
public void AddCell(ICell cell){cells.Add(cell);}
public override void SetDirectory(string dir){base.SetDirectory(dir);}
public virtual void Disable(ATNRule rule){Disables(rule);}
public override string GetText(int row, int column){return GetText(row, column);}
public Sheet GetSheet(String sheetName){int index = _sheetNames.GetIndex(sheetName);return _sheetIndexes[index];}
public override void SetValue(int newValue){object.CopyValue(backingArray, offset + _position, newValue);}
public override E elementAt(int location){return location.element;}
public virtual Version GetDocumentVersion(){return version;}
public virtual void Update(){base.Update();}
public QueryConfigHandler(QueryConfigHandler queryConfigHandler){_queryConfigHandler = queryConfigHandler;}
public virtual void DescribeScheduledActions(){_enterpriseInstance.DescribeScheduledActions();}
public virtual Prediction Prediction(int n){return null;}
public DocumentInputStream CreateDocumentInputStream(Entry entry){return CreateDocumentInputStream(entry.Key, entry.Value);}
public new LocalGatewayRoute(RouteRecord record){this.record = record;}
public virtual IList<LevelEncryptionConfig> GetAppLevelEncryptionConfigs(){return SharedInstanceGroupAccess.ListAppLevelEncryptionConfigs(appName);}
public virtual string ToString(){return GetCanonicalName();}
public override object Clone(){return this;}
public virtual string ToString(){return Term.ToString();}
public virtual NGit.Storage.File.Record GetRecord(){return this._enclosing.GetRecord(this.name);}
public virtual int sort(int start, int end){return cmp(start, end);}
public virtual void SetNumLines(int num){diff = new Undiff(m_luceneMatchVersion, num);}
public TermText(string termText){this.m_termText = termText;}
public virtual NGit.Api.EventStream CreateOrUpdateEventSource(string streamName){return CreateOrUpdateEventSource(streamName, true);}
public InvalidationRequest Create(string message, IMessageHandler errorHandler){var request = new DefaultInvalidationRequest(message, errorHandler);request.MessageHandler = ErrorHandler;return Request;}
public override string ToString(){return this.operator.ToString();}
public IMergedRegion GetMergedRegion(int index){return (_mergedRegions[index]);}
public virtual void Delete(TrackingEvent tracker){this._enclosing.Delete(tracker);}
public virtual DescribeGuardDutyAccessPointsResponse DescribeGuardDutyAccessPoints(DescribeGuardDutyAccessPointsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeGuardDutyAccessPointsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeGuardDutyAccessPointsResponseUnmarshaller.Instance;return Invoke<DescribeGuardDutyAccessPointsResponse>(request, options);}
public int valueAt(int row, int column){return values[row][column];}
public override void Read(Record record){_in.Read(RECORD_REFMODE, record);}
public virtual string GetQuery(){return "true";}
public virtual void SetInterceptFunction(IFunction interceptFunction){m_intercept = interceptFunction;}
public virtual int size(){return this._enclosing._size;}
public override Value Get(long offset){return internal.Get(offset);}
public virtual DescribeStagesResponse DescribeStages(DescribeStagesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeStagesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeStagesResponseUnmarshaller.Instance;return Invoke<DescribeStagesResponse>(request, options);}
public virtual int buildIndex(int start, int end){return buildIndex(start, end);}
public virtual void SetOutput(Stream outputStream){_output = outputStream;}
public virtual void SetValue(int value){list.Add(value);}
public virtual IList<IToken> GetTokens(){return tokenizer.GetTokensForPosition(tokenIndex);}
public override java.nio.LongBuffer newReadWriteLongBuffer(byteBuffer){return newSystem.nio.ReadOnlyLongBuffer(byteBuffer);}
public virtual NGit.Api.Room ResolveRoom(string roomName){return ResolveRoom(roomName, true);}
public virtual ptgs_t[] GetPts(int ptgsIndex){return ptgs_t;}
public QQ names and indexes fields {{ { value = names }; }
public virtual stringDistance Get(string str, int start, int end){return str.Length - start;}
public virtual GetKeysResponse GetKeys(){return getKeys(null, null);}
public virtual string GetQuery(){return "true";}
public virtual EventDestination Create(ConfigurationSet configSet){return Create(configSet, new EventDestinationConfigurationSet(this));}
public void Untag(string resource){Untag(resource, true);}
public float Baseline ({0:0.0}), at the start of the gauge.
public virtual string StripsTags(string str){return StripTags(str, true);}
public virtual JourneyExecutionMetrics GetJourneyExecutionMetrics(){return metrics;}
public string Get(string name){return Sharpen.Util.Get(object, properties, name);}
public string pattern { get; set; }
public virtual NGit.Api.UsersViewBegin GetCloneForWrite(){return (GetCloneForWrite())this;}
public void RemoveCompanyProperty(){_company = null;}
public virtual java.nio.ByteBuffer compact(java.nio.ByteBuffer byteBuffer){return new java.nio.ReadWriteByteBuffer(byteBuffer, 0, byteBuffer.length);}
public virtual FormattingRule GetConditionalFormattingRule(){return _conditionalFormattingRule;}
public virtual void ContinueDeployment(List<DeploymentRecord> list){if (list.Count == 0){throw new InvalidOperationException("List of pre-existing deployments cannot be empty (yet).");}list.Add(0, _preDeployments);}
public virtual OriginAccessIdentities GetOriginAccessIdentities(){return OriginAccessIdentities;}
public virtual bool equals(byte[] b, int start, int end){return equals(b, start, end);}
public virtual void DeclineInvitations(IList<Invitation> invitations){DeclineInvitations(invitations.Values);}
public virtual int size(){return this._enclosing._size;}
public override byte ReadByte(){return delegate1.ReadByte();}
public void DeleteAPNSChannel(APNSChannel channel){Delete(channel.GetHdlChannel());}
public void MoveTo(ICell cell){CellRangeAddress dst = _cellRange.StartOfNewColumn;dst.Column = cell.Column;}
public virtual TreeIterator CreateSubtreeIterator(CacheEntry c){return new TreeIterator(this, c);}
public override void Cancel(){base.Cancel();}
public virtual ILoadBalancerData GetLoadBalancerData(string loadBalancerName){return null;}
public bool get(string key){return _string[key];}
public BlipRecord Set(BlipRecord blipRecord){return blipRecord;}
public virtual bool Equals(AttributeSource other){return Source.Equals(other);}
public virtual string ToString(){return "Unknown";}
public virtual long TotalBytesUsed(){return _totalBytesUsed();}
public virtual IList<Evaluation> GetEvaluations(){return evaluations;}
public override string ToString(){return SpatialArgs.ToString(SpatialArgs.SpaceContext) + ":" + SpatialArgs.ToString(SpatialArgs.SpaceContext) + ":" + SpatialArgs.ToString(SpatialArgs.SpaceContext) + ":" + SpatialArgs.ToString(SpatialArgs.SpaceContext) + ":" + SpatialArgs.ToString(SpatialArgs.SpaceContext) + ":" + SpatialArgs.ToString(SpatialArgs.SpaceContext) + ":" + SpatialArgs.ToString(SpatialArgs.ProjectionContext) + ":" + SpatialArgs.ToString(":" + SpatialArgs.ProjectionContext, false) + ":" + SpatialArgs.ToString(SpatialArgs.ProjectionContext) + ":" + SpatialArgs.ToString(SpatialArgs.ProjectionContext) + ":" + SpatialArgs.ToString(SpatialArgs.ProjectionContext) + ":" + SpatialArgs.ToString(SpatialArgs.ProjectionContext) + ":" + SpatialArgs.ToString(SpatialArgs.ProjectionContext) + ":" + SpatialArgs.ToString(SpatialArgs.ProjectionContext) + ":" + SpatialArgs.ToString(SpatialArgs.ProjectionContext) + ":" + SpatialArgs.ToString(
public virtual void SetParentIds(int parentIds){for (int i = 0; i < parentIds; i++){if (i == 0){return;}}parentIds = parentIds;}
public virtual void AddIndexChangedListener(object o){if (this.lastIndexChange == null){this.lastIndexChange = System.Array.New(this.lastIndexChange.GetType().GetTypeInfo().FullName, this);this.lastIndexChange.addListener(o);}}
public string GetApiVersion(){return version;}
public int GetMinBitsSize(int max){return _buf.GetMinBitsSize(max);}
public MoPenQueryCanvasRequest(CanvasRequest request){var options = new InvokeOptions();options.RequestMarshaller = MoPenQueryCanvasRequestMarshaller.Instance;options.ResponseUnmarshaller = MoPenQueryCanvasRequestUnmarshaller.Instance;return Invoke<MoPenQueryCanvasRequest>(request, options);}
public virtual ICollection<string> GetDomains(){return domains;}
public virtual IList<TableHeader> Get(TableHeader table){return GetAll(table.TableHeader, table.TableOptions, null);}
public virtual bool Include(T tree){return false;}
public virtual void CustomVerificationEmail(string verificationEmail){_customVerificationEmail = verificationEmail;}
public virtual DescribeAPIResponse DescribeAPI(DescribeAPIRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeAPIRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeAPIResponseUnmarshaller.Instance;return Invoke<DescribeAPIResponse>(request, options);}
public IList<VpcPeeringAuthorizations> GetVpcPeeringAuthorizations(string vpcId){return vpcPeeringAuthorizations.Values;}
public override object Clone(){return this;}
public virtual BigInteger GetFactorial(int n){return m_factorial*n;}
public virtual bool Equals(Ref @ref){return @ref.Equals(this.@ref) && @ref.GetName() == this.@ref.GetName());}
public POIFSReaderListener(POIFSReaderListener listener){_readerListener = listener;}
public virtual void reset(){encoder = null;}
public virtual void DetachVpnGatewayFromVPC(string gatewayName){_gatewayName = gatewayName;}
public virtual int read(byte b){throw new System.NotImplementedException();}
public void DeleteCloudWatchLoggingOption(string applicationName){DeleteOption(applicationName, "cloudwatch");}
public virtual void ModifyRevision(int newRevision){Revision = newRevision;}
public virtual void DisassociateSkillFromUser(Skills skill){user.DisassociateSkill(skill);}
public virtual DeleteGuardDutyExpressionResponse DeleteGuardDutyExpression(DeleteGuardDutyExpressionResponse deleteGuardDutyExpressionResponse){return DeleteGuardDutyExpressionResponse(deleteGuardDutyExpressionResponse);}
public DBParameterGroup CreateDBParameterGroup(string name){return (DBParameterGroup)CreateParameterGroupName(name, null);}
public virtual string keyDown(){return esc.keyUp();}
public virtual UpdatePhoneNumberResponse UpdatePhoneNumber(UpdatePhoneNumberRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdatePhoneNumberRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdatePhoneNumberResponseUnmarshaller.Instance;return Invoke<UpdatePhoneNumberResponse>(request, options);}
public void ReleaseMarker(Marker marker){_marker = marker;}
public virtual UpdateTrialResponse UpdateTrial(UpdateTrialRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateTrialRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateTrialResponseUnmarshaller.Instance;return Invoke<UpdateTrialResponse>(request, options);}
public ObjectId CreateObjectId(int id){return CreateObjectId(id, null, null, null);}
public virtual IList<string> GetTags(string word){return GetTags(word, 0, word.Length);}
public virtual char get(int index){lock (@lock){return buf[index];}}
public virtual NGit.Api.EmailChannel UpdateEmailChannel(UpdateEmailChannelRequest ch){return this.Update(ch.GetRawMessage());}
public NewLowerFilter(TokenStream input){return new NewLowerFilter(m_luceneMatchVersion, input);}
public SetMeRequest(SetMeRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetMeRequestMarshaller.Instance;options.ResponseUnmarshaller = SetMeResponseUnmarshaller.Instance;return Invoke<SetMeRequest>(request, options);}
public virtual bool Equals(PrefixQuery query){return query.StartsWith(m_prefix, StringComparison.Ordinal) && query.EndsWith(m_prefix, StringComparison.Ordinal) && query.StartsWith(m_prefix, StringComparison.Ordinal) && query.StartsWith(m_prefix, StringComparison.Ordinal) && query.EndsWith(m_prefix, StringComparison.Ordinal) && query.StartsWith(m_prefix, StringComparison.Ordinal) && query.StartsWith(m_prefix, StringComparison.Ordinal) && query.EndsWith(m_prefix, StringComparison.Ordinal) && query.EndsWith(m_prefix, StringComparison.Ordinal) && query.StartsWith(m_prefix, StringComparison.Ordinal) && query.StartsWith(m_prefix, StringComparison.Ordinal) && query.EndsWith(m_prefix, StringComparison.Ordinal) && query.StartsWith(m_prefix, StringComparison.Ordinal) && query.StartsWith(m_prefix, StringComparison.Ordinal) && query.EndsWith(m_prefix, StringComparison.Ordinal) && query.StartsWith(m_prefix, StringComparison.Ordinal) && query.StartsWith
public virtual V remove(K key){object[] values = map.remove(key);if (values == null){values = default(V);}foreach (V value in values){remove(key, value);}return values[key] = null;}
public virtual CreateDBInstanceRequest CreateDBRequest(string dbName){return (CreateDBRequest)Create(dbName, null, dbName, null);}
public virtual string ToString(){return GetCanonicalName();}
public void AddCellAddressList(CellAddressList list){_list = new CellAddressList(list);_cells.Add(list.FirstOrDefault());}
public void DeleteFacet(Facet facet){this.Remove(facet);}
public virtual VoiceConnectorGroup[] GetVoiceConnectorGroups(){return voiceConnectorGroupState.GetVoiceConnectorGroups();}
public virtual void Call(ITokenSource tokenSource, ICharSequence text, IParseTree lexer){TokenSource start = tokenSource.StartOf(ITokenSource.ANY_CHAR);StartOffset = start.StartOf(ITokenSource.CHAR);EndOffset = start.EndOf(ITokenSource.CHAR);}
public virtual NGit.Api.QueryBuilder AddQueryBuilder(IQueryBuilder builder){AddQueryBuilder(builder);}
public ACL CreateNetworkACL(string network){return CreateNetworkACL(network, 0);}
public void SetAreaReference(SheetReference @ref){_area = @ref;_externSheetIndex = @ref.ExternSheetIndex;}
public void DeleteHostedZone(int id){DeleteHostedZoneIfIdExists(id);}
public virtual SourceInformation GetSourceInformation(){return sourceInformation;}
public virtual void ReadError(int location, string message, System.IO.IOException){ReadError(location, message);}
public virtual IMessage Get(string key, CultureInfo locale){return Get(key, CultureInfo.InvariantCulture);}
public virtual void RestoreDB(void){DBInstance = null;}
public Schema CreateSchema(){return schema;}
public virtual Stage GetStage(){return stage;}
public void SeekNextNonZeroByte(){_reader.SeekToNextNonZeroByte();}
public virtual TagCommand CreateTagCommand(string name){return new TagCommand(name, null);}
public virtual UpdateUsagePlanResponse UpdateUsagePlan(UpdateUsagePlanResponse result){return UpdateUsagePlan(result.UsagePlan);}
public virtual string canonicalize(string str){return Sharpen.Runtime.Canonicalize(str, NGit.Runtime.Canonicalizer.NFC_DONTCLEAN);}
public int Get(B string, int index){return strIndex;}
public virtual void AddMerge(Merge merge){Merges.Add(merge);}
public virtual void remove(object key){remove(key);}
public override void Delete(string id){if (id == null){throw new ArgumentNullException("id");}this.lagId = id;this.useTimeline = false;}
public void DeleteSubscription(SpotDataFeedSubscription subscription){SubscriptionBase subscription = null;try{SubscriptionBase subscription = SpotDataFeedSubscriptions.DeleteSubscription(subscription);}catch (SpotDataFeedException){throw new SpotDataException(SubscriptionReference.Error.SUB_UNREACHABLE_BY_SUBSCRIPTION, "Subscription does not exist")}
public override long ReadLong(){return delegate1.ReadLong();}
public virtual bool ShouldUpdate(Update update){return update.ShouldForce;}
public virtual string getValue(){return mValue;}
public virtual void SetSourcePrefix(string s){m_sourcePrefix = s;}
public virtual E peek(E e){return _e.next;}
public virtual void WriteLong(){int b0 = _le.ReadLong();_le.WriteLong(b0);}
public virtual NGit.Storage.File.Record FindNextRecord(RecordId sid){return this.FindNextRecord(sid);}
public virtual UpdateLambdaTemplateAliasResponse UpdateLambdaTemplateAlias(UpdateLambdaTemplateAliasResponse result){return UpdateLambdaTemplateAlias(result.LambdaTemplateAlias);}
public virtual int previousIndex(){return index;}
public AuthorizeDBSecurityGroupIngressRequest(string dbSecurityGroupName){_dbSecurityGroupName = dbSecurityGroupName;}
public virtual void Run(IList<ScheduledInstance> scheduledInstances){Run(scheduledInstances, 0, scheduledInstances.Count);}
public virtual bool Equals(MutableValueStr other){return Equals(other);}
public AreaEval GetOffsetEval(){return GetOffsetEval(0);}
public virtual string ToString(){return GetCanonicalName();}
public String ToString(){return HSSFErrorConstants.GetText(hssF_1);}
public override void Set(string value){this.value = value;}
public virtual int GetNumberOfOnChannelTokens(){return channelToGetNumberOfOnChannelTokens();}
public virtual void putDouble(double value){if (value == 0){throw new System.ArgumentException("value is a required property and must be set before storing the doubles.", "value");}buffer.putDouble(value);}
public virtual void SetNoteRefsToBeRemoved(int @ref){this.m_noteRefsToBeRemoved = @ref;}
public override string ToString(){return base.ToString() + " " + name;}
public virtual void DeleteCampaign(Campaign campaign){_campaign = campaign;}
public virtual void DisablesFastSnapshotRestores(bool b){enable(b);}
public override void write(byte b){throw new System.NotImplementedException();}
public override List<Algorithms> GetAccessors(){return base.GetAccessors();}
public virtual bool IsWhiteSpace(char ch){return lineIsOnLine(ch);}
public virtual void VerifyLabelIsValid(Label label){Debug.Assert(label!= null);if (label.Length > 0){throw new System.ArgumentException("label cannot be empty");}m_luceneMatchVersion.CheckLabel(label);}
public virtual IList<string> GetFacetNames(){return facetNames;}
public virtual void Skip(int skip){Skip(skip);}
public void close(){_writer.flush();}
public placement group name { get; set; }
public formula error(int type){return _formulaErrors.Get(type);}
public bool Matches(AnyValue Value){return Value == null? true : Value.Equals(Value);}
public override java.nio.DoubleBuffer get(int capacity){return backingArray[offset + _position];}
public formula string(IList<FormulaAttribute> operands){return _formula.generate(operands);}
public virtual E previous(E e){return list.previous(e);}
public int GetLeftId(int id){return docIDs[id];}
public Interval(int start, int end){return Add(start, end);}
public override void SetReadlimit(int readlimit){_mark = readlimit;}
public bool matches(PatternTree pattern){return matches(pattern.GetSubtree());}
public virtual void SetExternalRef(ExternalRef externalRef){this.externalRef = externalRef;}
public virtual int GetWidth(int row, int column){if (value is TwoDEval then the width of the two is returned. If the value is a RefEval then the width of the two is returned. If the value is a Number then the width of the two is returned. If the value is a Number then the width of the two is returned. If the value is a Number then the width of the two is returned. If the value is a Number then the width of the two is returned. If the value is a Number then the width of the two is returned. If the value is a Number then the width of the two is returned. Otherwise the width of the two is 1.0.0.0 is 1.0.0 and the value is a Number then the width of the two is returned. public int GetWidth(int row, int column){return row * column + 1;}
public virtual void write(java.io.OutputStream outputStream){throw new System.NotImplementedException();}
public Bundles Information(){return Bundles;}
public virtual IntegrationResponse GetIntegrationResponses(){return integrationResponses;}
public bool value(){return value;}
public void seek(int value){buffer.position = value;}
public bool UseRomaji){return useRomaji;}
public virtual void Invitation(Invitation invitation){this.invitation = invitation;}
public virtual NGit.Api.Resolver AddResolver(Resolver resolver){return this;}
public virtual void append(char c){append0(c);}
public Distribution(byte[] data){return null;}
public virtual void removeAt(int index){removeAt(index);}
public override void put(float value){throw new System.NotImplementedException();}
public override string ToString(){return "false";}
public virtual void SetPreserveOriginalFlag(bool value){preserveOriginal = value;}
public stack policy for an app.
public virtual DescribeDBInstancesResponse DescribeDBInstances(DescribeDBInstancesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDBInstancesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDBInstancesResponseUnmarshaller.Instance;return Invoke<DescribeDBInstancesResponse>(request, options);}
public virtual Token Create(TokenKind kind, Image image){return Create(kind, image, 0, 0);}
public string Build(IQueryPart query, string field_1, string field_2, int field_3, int field_4, int field_5, int field_6, int field_7_options){return query + " AND " + field_5 + " = " + field_6_options.ToString(CultureInfo.InvariantCulture) + " " + field_7_options.ToString(CultureInfo.InvariantCulture);}
public virtual NGit.Api.GameServer RegisterNewGameServer(NGit.Api.GameServerBuilder builder){return new NGit.Api.GameServer(this, builder);}
public override void write(string @string){write(m_buf, 0, m_len);}
public IRow GetRow(int row){return GetRow(row);}
public virtual void Start(){HangupLoop(0);}
public void SetFlag(int b){SetFlag(b);}
public string substring(int start, int end){return string.Empty;}
public virtual bool Contains(string symbol){return vocab.Contains(symbol);}
public virtual ReceiveCommand.Result GetResult(){return status;}
public virtual void SetId(string id){this.id = id;}
public string ToString(Ngram ngram){return NGramSyntacticLabel(ngram);}
public void RemoveCell(ICell cell){_cells.Remove(cell);}
public virtual string Not(object @object){return Not(@object.GetCanonicalName());}
public void LoadHunspellData(){HunspellRecord[] hunspell = data;}
public SSHSessionFactory(SSLSocketFactory factory){_sslo = factory.GetSession(Constants.PROT_TYPE_ANY);}
public override void WriteHeader(int status, string message){throw new System.NotImplementedException();}
public virtual ICharTermResponse GetFirstChild(ICharTermRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetRequestMarshaller.Instance;options.ResponseUnmarshaller = GetResponseUnmarshaller.Instance;return Invoke<ICharTermResponse>(request, options);}
public virtual float GetTotalTimeInPrediction(){return prediction.GetTotalTimeInPrediction();}
public override string ToHex(int v){return ToHex(v, 2);}
public virtual void Release(Inflater inflater){this._enclosing.Release(inflater);}
public virtual void Enable(EscherBase b){if (m_reallyAddOn){b.Enable(true);}else{m_reallyAddOn = true;}
public virtual void ParseFailedPredicateException(XmlPullParserException e){ParseFailedPredicateException(e.InnerException, e);}
public override void markAsReadLimit(){delegate1.markAsReadLimit();}
public virtual void Add(IText text){this._enclosing.Add(text);}
public virtual int GetLookaheadCount(){return lookaheadCount;}
public virtual LogGroupGroup CreateLogGroup(string logGroupName){return CreateLogGroup(logGroupName, null);}
public virtual void SetSubmodulePaths(List<string> subModules){foreach (string path in subModules){if (path.Count == 0){AddSubmodulePath(subModules, path);}}}
public virtual Settings GetSettings(){return settings;}
public override ObjectId CreateObjectId(byte[] data){return CreateObjectId(data, 0, data.Length);}
public virtual int maximumLenth = 20;public virtual int minLenth = 10;public virtual int maxLenth = 20;public virtual int minRenth = 20;public virtual int maxRenth = 20;return (maxRenth = minLenth)? minRenth : 0;}
public long GetOffset(){return file.GetOffset();}
public override string ToString(){return facetEntry.ToString();}
public virtual Campaign CreateCampaign(Campaign campaign){return campaign;}
public virtual bool underflow(int value){return value < 0;}
public virtual void SetInstanceIds(int instanceIds){_instanceIds = instanceIds;}
public void ClearMMClipCountProperty(){_mmClipCount.Clear();}
public virtual void SetMessage(string m_message){throw new System.NotImplementedException();}
public override bool HasMoreBytes(){return this._enclosing.HasMoreBytes();}
public override E get(E location){return location.get(E);}
public java.net.URI createURI(string str){throw new System.NotImplementedException();}
public virtual Availability Zone CustomZones { get; private set; }
public virtual int index(){return index;}
public override int GetContentLength(){return _content.Length;}
public virtual string[] Decompose(int cmd){return Decompose(cmd, 0, cmd.Length);}
public NameXPtg for the given name and UDFFinder.
public DirectBytesStartArray(int initSize, int counter){m_initSize = initSize;m_counters = counter;}
public virtual IList<Task> GetSynthesisTasks(){return null;}
public virtual void Recycle(List<Block> blocks){Recycle(blocks.ToArray());}
public virtual void Emit(IToken t){Emit(t.Key, t.Value);}
public static bool IsInRange(int value){return value >= MIN_VALUE_INT32;}
public virtual void IncrementReplicationCount(int capacity){m_buf.EnsureCapacity(capacity);}
public virtual SrndQuery Build(){return (SrndQuery)Build(null, 0, 0);}
public IAMPolicyAssignment Create(string role, string roleName, string rolePrefix, string rolePrefixRt){return Create(role, rolePrefix, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixRt, rolePrefixR
public virtual Endpoint Get(string endpoint){return null;}
public virtual void Insert(object o){if (!(o is java.util.MapClass.Entry<K, V>)){throw new System.NotImplementedException();}this._enclosing.Insert(o.getKey(), o.getValue());}
public virtual string GetDiffEntryText(){return GetDiffEntryText(this);}
public virtual CreateGuardDutyAssessmentTargetResponse CreateGuardDutyAssessmentTarget(CreateGuardDutyAssessmentTargetRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateGuardDutyAssessmentTargetRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateGuardDutyAssessmentTargetResponseUnmarshaller.Instance;return Invoke<CreateGuardDutyAssessmentTargetResponse>(request, options);}
public virtual WorkforceDetail GetWorkforceDetail(){return WorkforceDetail;}
public void Replace(byte[] replacement, int length){Replace(replacement, length);}
public string ToString(){return Query(null, null);}
public virtual PGPImportKeyPairResponse PGPImportKeyPair(PGPImportKeyPairRequest request){var options = new InvokeOptions();options.RequestMarshaller = PGPImportKeyPairRequestMarshaller.Instance;options.ResponseUnmarshaller = PGPImportKeyPairResponseUnmarshaller.Instance;return Invoke<PGPImportKeyPairResponse>(request, options);}
public override long Get(int index){return this.Get(index, out long value)? this._enclosing.Get(index) : null;}
public override TreeFilter Clone(){return this;}
public override void SetPassageScorerParams(int passageScorerParams){_passageScorerParams = passageScorerParams;}
public bool Equals(Rectangles other){return rectangles!= null;}
public virtual void Delete(object o){if (!(o is NGramPhraseQuery)){throw new ArgumentException("o is not a NGramPhraseQuery)o;}
public virtual UpdateNodeResponse UpdateNode(UpdateNodeRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateNodeRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateNodeResponseUnmarshaller.Instance;return Invoke<UpdateNodeResponse>(request, options);}
public virtual NGit.GameServerGroup NGit.GameServerGroup(){return this;}
public virtual IComponentConfiguration GetComponentConfiguration(){return this._enclosing.GetComponentConfiguration();}
public virtual void CopyParameterGroup(DBParameterGroupName group){CopyParameterGroupName(group.DBParameterGroupName);}
public string|int|float: Set { "name.max.buffer.file", "name.max.buffer.file", "name.max.buffer.file", "name.max.buffer.file", "name.max.buffer.file", "name.max.buffer.file", "name.max.buffer.file", "name.max.buffer.file", "name.max.buffer.file", "name.max.buffer.file", "name.max.buffer.file", "name.max.buffer.buffer.file", "name.max.buffer.buffering.buffer", "name.max.buffer.buffering.bufferSize", "name.max.buffer.bufferName", "name.max.bufferName", "name.max.bufferName", "name.max.bufferName", "name.max.bufferName", "name.bufferName", "name.bufferName", "name.bufferName", "name.bufferName", "name.bufferName", "name.bufferName", "name.bufferName", "name.bufferName", "name.bufferName", "name.bufferName"
public virtual void SetEnumerator(); {Term[] terms = new Term[_limit];for (int i = 0; i < _limit; i++){SetTerm(terms[i], true);}}
public virtual IList<IParseTreeElement> FindAllNodesInTree(IParseTree tree, int start, int end){return FindAllNodesInTree(tree, start, end);}
public virtual APNS_VoIP_SandboxChannelResponse GetAPNS_VoIP_SandboxChannelResponse(string channel){return GetAPNS_SandboxChannelResponse(channel);}
public link.linkAttributes(){return link.linkAttributes();}
public virtual List<MulticastDomainRecord> GetMulticastDomains(){return GetMulticastDomains() }
public virtual void SetMasterInstanceTypesDetails(MasterInstanceTypesDetails detail){masterInstanceTypes = detail.MasterInstanceTypes;}
public virtual void EndOfTheEvent(object @object){if (@object.GetTag()!= null){_endOfTheEvent(@object);}}
public Size GetImageDimension(){return getImageDimension();}
public void SetComponents(IList<string> components){for (int i = 0; i < components.Count; i++){SetComponent(components[i]);}}
public virtual void write(char b){if (m_len >= m_buf.size){throw new System.IO.IOException("Buffer is full");}m_len += b.remaining();}
public Archives Amazon GuardDuty findings specified by the detector ID.
public void DeleteConfigurationProfile(ConfigurationProfile existingProfile){this.existingProfile = existingProfile;}
public row, column indices are given. public int getRowAndColumnIndices(OperationEvaluationContext ctx){return _opencounter.EvaluateRowAndColumnIndices(ctx.EvaluateRowAndColumnIndices(ctx.EvaluateRowAndColumnIndices(ctx.EvaluateRowAndColumnIndices(ctx.EvaluateColumnAndIndexCulture), ctx.EvaluateColumnAndIndexCulture), ctx.EvaluateColumnAndIndexContext);}
public string ToString(bool b){return path.ToString(b? "true" : "false");}
public Dictionary<string, string> GetResponseValues(ResponseStream stream){return parseResponse(stream, 0, stream.Length);}
public virtual void readFully(byte[] buffer, int count){throw new System.NotImplementedException();}
public virtual void Import(ITerminologyType type){this.Type = type;this.DefaultTerminology = type;this.Imports[type.Name] = type;}
public virtual int GetMaxDepth(){return _maxDepth;}
public virtual bool IsEqualTo(IList other){return list.IsEqualTo(other);}
public DefaultTaxonomyWriterCache(){return _default_writer;}
public void DeleteIdentityPolicy(string identityPolicy){_identityPolicies = new Dictionary<string, List<string>>(identityPolicies.Count);}
public virtual void AttachRouteTable(RouteTable table){RouteTable r = table.RouteTable;}
public ExternSheetRecord[] ExternSheetRecords(){return _externSheetRecords;}
public virtual UpdateKnowledgeRequest urlParams = [];return new InvokeOptions{RequestMarshaller = UpdateKnowledgeRequestMarshaller.Instance;ResponseUnmarshaller = UpdateKnowledgeRequestUnmarshaller.Instance;};}
public override int Size(){return base.Size();}
public IEvaluationName ForName(String name, int sheetIndex){return _evaluationNameForName(name, sheetIndex);}
public virtual PolicyStack Get(int stackIndex){return stackIndex;}
public virtual void SetErrorType(ErrorType type){Sharpen.Extensions.SetErrorType(type, type);}
public override string ToString(){return ColumnFamilyAggregate.Format(this, row);}
public void Reset(string KMSKeyId){_kmsKeyId = KMSKeyId;}
public virtual char first(){return java.text.CharacterIteratorClass.Wrap(this).first();}
public virtual int RamUsageCount(){return _rbacUsageCount;}
public java.text.DateRange set_start_end_range(DateTimeRange end_range){_end_range = end_range.end_range;return this;}
public virtual IList<Type> GetTypes(){return supportedTypes;}
public bool Supports(int bitsPerValue){return _block.Supports(bitsPerValue);}
public virtual void DisassociateIpAddressFromVPC(string vpcName, string vpcIpAddress, int vpcIpAddressLen){disassociateIpAddressFromVPC(vpcName, vpcIpAddress, 0, vpcIpAddressLen);}
public virtual void DeleteMedia(MediaSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegmentSegment
public void Serialize(ILittleEndianOutput out1){out1.Write(this.GetType().Name);}
public string escape(string str, int enableChars, int start, int end){return escape(str, enableChars, end, 0);}
public virtual CancelSpotInstanceRequestsResponse CancelSpotInstanceRequests(List<Request> requestList){return CancelSpotInstanceRequests(requestList, SpotInstanceRequests.Default).ConfigureAwait(false);}
public virtual bool Overlaps(Phrase other){return false;}
public void Write(PtgField field){_out.Write(field.PtgField.Xor(0, field.PtgField.Xor(0, field.PtgField.Xor(0, field.XorLength-1), PtgField.Yor(0, field.YorLength-1), PtgField.Zor());}
public virtual void DeleteDevice(int devID){if (devID == 0){throw new ArgumentException("devID cannot be zero");}if (devID == 0){throw new ArgumentException("devID cannot be zero");}device = idBook.DeleteDevice(devID);if (device == null){throw new ArgumentException("device id cannot be zero");}if (devID == 0){throw new ArgumentException("device id cannot be zero");}device.Delete(true);}
public virtual void OnRefsChanged(RefChangedListener listener){for (int i = 0; i < _listeners.Length; i++){_listeners[i].RefsChanged(this);}}
public virtual void ModifyDBProxyTargetGroup(TargetGroup existingTargetGroup){this.existingTargetGroup = existingTargetGroup;}
public void Delete(Journey j){Delete(j);}
public virtual DescribePoliciesResponse DescribePolicies(DescribePoliciesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribePoliciesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribePoliciesResponseUnmarshaller.Instance;return Invoke<DescribePoliciesResponse>(request, options);}
public virtual UpdateDeploymentResponse UpdateDeployment(UpdateDeploymentRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateDeploymentRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateDeploymentResponseUnmarshaller.Instance;return Invoke<UpdateDeploymentResponse>(request, options);}
public SpanBuilderFactory(ISpanBuilderFactory factory){_spanBuilderFactory = factory;}
public new _Default_WindowCursor_t(this){return new _Default_WindowCursor_t(this);}
public virtual void reset(){current.reset();}
public DescribeEngineDefaultParametersRequest(string cacheParameterName, string cacheParameterGroupName){return DescribeEngineDefaultParametersRequest(cacheParameterName, "default", "cacheParameterGroupName, "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName", "defaultParameterGroupName",
public virtual int get_length(char[] array_1){return array_1.Length;}
public virtual IList<IToken> GetTokens(IFormula formula){return formula.GetTokens(null);}
public String ToString(){return _cell.ToString();}
public override string ToString(){return "0";}
public Trec1MQReader(string name){this.name = name;}
public virtual int size(){return this._enclosing._size;}
public void setValue(T value){throw new System.NotImplementedException();}
public virtual void SetLogPath(string path){m_logPath = path;}
public virtual CultureInfo GetEffectiveLocale(){return _locale;}
public virtual void Grow(int size){for (int i = size; i < size; i++){System.Array.Copy(array, i, array, i.ArrayOffset + i, array.Length - i);i.Length = i.Length;}}
public virtual string replacement(s){return replacement(s.Length);}
public virtual void Update(StackSet set){this.set = set;}
public virtual string GetType().Name{get; internal set; }
public virtual bool Equals(Terms terms, float score){return terms!= null? Equals(Terms, maxTerms) : false;}
public virtual void SetInnerClassAndDetailMessage(string[] innerClasses){base.SetInnerClassAndDetailMessage(outerClasses, "class-name", "detail-message");}
public virtual void clear(){map.clear();}
public HighFreqDictionaryArgs(IDictionary<K, V> dictionary){this.dictionary = dictionary;}
public virtual AutoScalingGroup GetResourceDetails(){return resourceDetails;}
public virtual void SetMaxCodeLenAndInject(int maxCodeLen){this.maxCodeLen = maxCodeLen;this.inject = true;}
public override bool SeekTo(Term term){SeekTo(term);return true;}
public override Object Clone(){return this;}
public virtual int GetLength(VariantType type){return _variantType.Length;}
public override void write(string b){write((int)b, 0, b.Length);}
public ScandinavianFoldingFilter(TokenStream input){return new ScandinavianFoldingFilter(input);}
public MoPenDeleteGroupMemberRequest(): base(){lastDocID = -1;wordNum = -1;word = 0;}
public virtual bool contains(object o){return this._enclosing.containsKey(o);}
public MessageBatchRequestParameters Set(MessageBatchRequestParameters request){_request = request;_batch = request;}
public virtual BooleanQueryNode CreateBooleanQueryNode(IList<IQueryNode> clauses){return CreateBooleanQueryNode(clauses);}
public void Abort(){_iterator.Reset();_isCanceled = true;}
public virtual void SetOutput(Stream outputStream){_output = outputStream;}
public virtual bool ShouldTraverse(BreadthFirstNode node){return true;}
public virtual string Tokenize(string date){return Tokenize(date, CultureInfo.InvariantCulture);}
public default VPC(string name){_name = name;}
public StopFilter from an input token stream.
public override void put(float value){buffer.put(value);}
public virtual FileSystemResources GetResource(string name, List<FileSystemResource> options){return getResource(name, options);}
public virtual UpdateAPIResponse UpdateAPI(UpdateAPIRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateAPIRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateAPIResponseUnmarshaller.Instance;return Invoke<UpdateAPIResponse>(request, options);}
public virtual IParseTreeListener AddParseTreeListener(IParseTreeListener){return this;}
public virtual void Collect(Stream reader){_is = reader.Current;}
public ConferenceProvider(string name, List<string> args){return null;}
public List(double[] doubles){if (doubles == null){foreach (double d in doubles){Add(d);}}return list;}
public virtual void UpdateRoomMembership(string appName){UpdateRoomMembership(appName, true);}
public virtual void DeleteAnomalyDetector(){this._enclosing.DeleteAnomalyDetector(null);}
public override bool IsEnabled(){return true;}
public override long Length(){return _length;}
public java.io.Reader tokenizer { set; get; }
public virtual void Resume(){Sharpen.Scheduler.Resume(gameServer);}
public virtual IList<Invitation> GetInvitations(){return invitations;}
public override string GetKey(){return base.GetKey();}
public void SetText(IText text){this.m_text = text;}
public string getSchemeSpecificPart(){return scheme;}
public (int, int)x, (int)y = i, c;return x, y;}
public Attendee(Attendee other){return other;}
public virtual void Stop(){base.Stop();}
public virtual SolutionVersion GetSolutionVersion(){return SolutionVersion.ForVersion(GetVersion());}
public long GetOffset(){return file.GetOffset();}
public string set(string @string){value = @string;}
public override void Put(double value){if (doubleCount > 0){for (int i = 0; i < doubleCount; i++){PutDouble(value, i);}}}
public virtual void ReplaceNetworkAclAssociation(NetworkAcl association){NetworkingAcl associate = (NetworkAcl)duplicate.CopyTo(association);}
public virtual int GetIndexSize(){return index.GetSize();}
public virtual DescribeTextDetectionResponse DescribeTextDetection(DescribeTextDetectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeTextDetectionRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeTextDetectionResponseUnmarshaller.Instance;return Invoke<DescribeTextDetectionResponse>(request, options);}
public virtual void endA(int endA){endA++;}
public virtual char getCharAt(int pos){lock (this){return buf[pos];}}
public override WriteStreamEncoder WriteStreamEncoder(WriteStreamOutput out1){return new WriteStreamEncoder(out1);}
public virtual void makeReadonly(){this._enclosing.makeReadonly();}
public virtual IRegion StartOf(IRegion region){return region.StartOf(region);}
public virtual IList<string> GetDefaultParameters(){return defaultParams;}
public virtual void removeAt(int index){removeAt(index);}
public virtual void AddAllFieldsFromOtherToThis(FieldInfos other){foreach (FieldInfo info in other){AddAllFieldsFromOtherToThis(info);}}
public void Delete(Ledger ledger){_ledger = ledger;}
public virtual int count(){lock (this._enclosing){return _enclosing._size;}}
public virtual bool ReuseDeltas(bool reuseDeltas){return reuseDeltas;}
public virtual void Reboots(){this._enclosing.Dispose () ;this.db = null;this.reopenDatabase(false);}
public virtual void PutIPInDedicatedIPPool(byte[] data){Put(data, 0, data.Length);}
public virtual bool contains(object o){return delegates.contains(o);}
public virtual void DeleteAlias(){_enclosing.DeleteAlias(this.m_aliasIndex);}
public virtual IList<Stack> GetStacks(){return Sharpen.Collections.UnmodifiableList(GetStacks()));}
public DFA(int precedenceStartState){this.precedenceStartState = precedenceStartState;}
public virtual E set(E value){throw new System.NotImplementedException();}
public virtual IList<MLModel> GetMLModels(string appName){return list(MLModel.GetAllModels(appName));}
public override long Get(int index){return this.Get(index, out long value)? this._enclosing.Get(index) : null;}
public virtual void Start(PSContext context){mGarbage = null;}
public virtual int GetIndex(int start){return start;}
public string replace(string str, replacement1){return replace(str, replacement1);}
public virtual void append(char c){append0(c);}
public override ValueSource GetDistanceFromQuery(){return new DistanceValueSource(this, queryPoint, multiplier);}
public override void Serialize(byte[] data, int length){Serialize(data, 0, data.Length, data);}
public virtual RevTree Append(RevTree tree){return tree;}
public bool IsAttributeChanged(AttributeQuery attribute){this.tag = attribute.Name;this.isAttribute = true;this.isAttributeSet = true;return true;}
public bool? SetValue(IValue value){return setValue(value);}
public override Object Clone(){return this;}
public override bool Equals(TermInfo other){return _term == other;}
public MeetingAccount(AccountDetail detail){var options = new InvokeOptions();options.RequestMarshaller = AccountDetailMarshaller.Instance;options.ResponseUnmarshaller = AccountDetailUnmarshaller.Instance;return Invoke<MeetingAccount>(detail, null, options);}
public virtual bool IsIndexTerm(Term term){return base.IsIndexTerm(term);}
public IEnumerator<V> GetEnumerator(){return this._enclosing.GetEnumerator();}
public formula string(IList<Formula> operands){return _formula.CreateFormulaString(operands);}
public override long available(){return delegate1.available();}
public BinarySearch(int start, int end){m_start = start;m_end = end;}
public void SetFillColor(HSSFFillColor color){fillColor = color;}
public void DeleteIdentities(){_identities = new Dictionary<string, ObjectId>();}
public Signer GetSigner(AlibabaCloudCredentials credentials){return GetSigner(credentials.GetAccessKeyId());}
public virtual void SetGroupSort(int sort){_groupSort = sort;}
public virtual void remove(){list.remove(this);}
public virtual ListTrafficPoliciesResponse ListTrafficPolicies(ListTrafficPoliciesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListTrafficPoliciesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListTrafficPoliciesResponseUnmarshaller.Instance;return Invoke<ListTrafficPoliciesResponse>(request, options);}
public virtual void setLength(int length_1){buffer.length = length_1;}
public java.net.URI relativize(java.net.URI uri){return new java.net.URI(this.resolve(uri));}
public virtual GetLambdaTemplateAliasResponse GetLambdaTemplateAlias(GetLambdaTemplateAliasRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetLambdaTemplateAliasRequestMarshaller.Instance;options.ResponseUnmarshaller = GetLambdaTemplateAliasResponseUnmarshaller.Instance;return Invoke<GetLambdaTemplateAliasResponse>(request, options);}
public virtual void removeAll(IList<E> other){removeAll(other, other);}
public virtual OrganizationConfiguration GetOrganizationConfiguration(){return organizationConfigurations;}
public virtual void ImportDocumentationParts(string appName){ImportDocumentationParts(appName, 0, 0);}
public override byte[] GetBytes(){return file.GetBytes();}
public void DisablePropagation(){VPCRouteTable.DisablePropagation(false);}
public FieldsQuery(){return this;}
public address set(to){_to = to;}
public FilterReference GetOffset(int offset){return _filter.GetOffset(offset);}
public virtual CreateWebhookRequestResponse CreateWebhookRequest(string repository, string user){var request = new CreateWebhookRequestRequest(repository, user);return CreateWebhookRequest(request);}
public virtual ICollection<string> GetNames(string section){return GetNames(section, null);}
public virtual SlopQueryNode CreateSlopQueryNode(SlopQueryNode node){this.node = node;this.precedence = (node.precedence == null)? SlopQueryNode.PREFERRED_LEVEL_MIN : node.precedence;return new SlopQueryNode(this, node);}
public override void Set(int v){m_val = v;}
public virtual TaskSet Create(TaskSet taskSet){return taskSet;}
public virtual void clear(){removeRange(0, elements.Length - 1);}
public override bool IsSet(RevFlag flag){return this._enclosing.IsSet(flag);}
public virtual void Clear(){_limit = 0;}
public virtual UserSViewEnd Clone(){return CloneViaReserialise();}
public virtual DisassociateAddressResponse DisassociateAddress(DisassociateAddressRequest request){return DisassociateAddress(request, null);}
public override void Serialize(Output out1){out1.WriteLine("list(");foreach (E element in this._enclosing){out1.Write(element.Serialize(this));}}
public virtual void DeletingAccessLogSettings(string appName){deletingAccessLogSettings(appName, null);}
public virtual void SetAdd(object o){lock (this._enclosing){if (o is java.util.MapClass.Entry<K, V>){set.Add(o);}}else{set.Add(o);}}
public override void Serialize(byte[] b, int offset, int byteCount){SerializeInt32(b, offset + _position, byteCount);}
public override void write(string data){throw new System.NotImplementedException();}
public virtual RevCommit GetRevision(int id){return revisions[id];}
public virtual IList<E> GetEmptyListIfNoMore heads(){return Sharpen.Collections.EmptyList<E>();}
public override int Read(BytesRef bs){return delegate1.Read(bs);}
public override IList<string> GetUntrackedFolders(){return folders.Values;}
public void WriteInt64(int value){_out.WriteInt64(value);_size += 8;}
public virtual void SetExtensionFieldDelimiter(string ext, int extLen){m_ext = ext;}
public virtual string ToString(){return GetDescription();}
public override void Decode(int n){Decode(n, m_buf, _stndStart, _stndLength);}
public virtual IList<FileHeader> GetFiles(){return files;}
public virtual InstanceData GetInstanceData(string appName){return ec2.GetInstanceData(appName);}
public virtual void SetNewBranchName(string newBranchName){m_newBranchName = newBranchName;}
public IList<Workteam> GetSubscribedToAccount(string account){return subscribedToAccount.Workteams;}
public virtual string Clone(){return path.Clone();}
public IBatchJob<DatasetImportJob>(IProgressMonitor monitor, int maxNumJobs, int maxTaskCount, IProgressMonitor monitor, IProgressMonitor monitor){return new BatchJob(monitor, maxNumJobs, monitor, maxTaskCount, monitor, maxTaskCount, monitor.IsSuccess, monitor.IsCanceled, monitor.GetCurrent(), monitor.GetProgressMonitor());}
public override NormalizationFilter CreateFilter(FilterConfig config){return new GermanNormalizationFilterFactory(config);}
public virtual int[] elements(){return elements();}
public virtual void add(E e){throw new System.NotImplementedException();}
public identity pool(){return pool;}
public java.util.Iterator<E> entries(){return entries.iterator(this);}
public void Remove(BRAIRecord record){_presentationFormats = null;_presentationFormats = null;}
public hyperparameter stop(){return hyperparam_stop();}
public virtual E head(E value){return list.get(value);}
public virtual bool isEmpty(){return list.isEmpty();}
public override void Open(int flags){throw new System.NotImplementedException();}
public SinkTokenStream(ITokenStreamConfig config){return new SinkTokenStream(config, this);}
public virtual NGit.Api.RebaseCommand CreateRebaseCommand(string command){return new NGit.Api.RebaseCommand(this, command);}
public virtual void DeleteCustomVerificationEmailTemplate(){_customVerificationTemplate = null;}
public virtual AssociationProposal CreateAssociationProposal(DirectConnectGateway gateway){return new AssociationProposal(this, gateway);}
public override IList<HierarchicalGroup> GetHierarchyGroups(){return _hierarchicalGroupList;}
public override string ToString(){return "Infinity";}
public virtual bool AllowThinRequests(bool allowThinRequests){allowThinRequests = allowThinRequests;}
public virtual int capacity(){return _limit;}
public override float Evaluate(int v){if (v == null){throw new ArgumentNullException("v");}return v;}
public virtual void putDouble(double value){buffer.putDouble(value);}
public NGit.Api.PathFilter NewPathFilter(){return new NGit.Api.PathFilter(this);}
public virtual void Validate(){base.Validate();}
public virtual void GetConfig(){this.GetConfigInternal(null);}
public SeriesIndexRecord DeepCopy(){return (SeriesIndexRecord)base.DeepCopy();}
public BulgarianStemFilter(){return new BulgarianStemFilter(this);}
public virtual UpdateResourceResponse UpdateResource(UpdateResourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateResourceRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateResourceResponseUnmarshaller.Instance;return Invoke<UpdateResourceResponse>(request, options);}
public virtual void DeleteProxySession(ProxySession session){if (session!= null){session.Delete();}}
public virtual Snapshot Create(SnapshotConfig config){return (Snapshot)Create(config, db);}
public override NumberEval Evaluate(int operand){return this.Evaluate(operand, null);}
public virtual PackConfig GetPackConfig(){return packConfig;}
public virtual void Update(BsonDocument update){this._enclosing.Update(update);}
public virtual void delete(char[] chars){delete(chars, 0, chars.Length);}
public virtual bool Equals(FieldAndTerm other){return Equals(other);}
public virtual void EnterRecursionRule(){CurrentRule = NewRecursionRule();}
public virtual string get(string key){return getString(key, CultureInfo.InvariantCulture);}
public virtual DeliverabilityCampaignDetail GetDeliverabilityCampaignDetail(){return deliverabilityCampaignDetail;}
public virtual void clear(){removeRange(0, elements.Length - 1);}
public virtual bool contains(object o){return map.containsKey(o);}
public virtual void DeleteSubnet(int subnetId){_subnetMap[subnetId] = null;}
public int effectivePort(){return _effectivePort;}
public override Merger Create(ThreeWayMergeConfig config){return base.Create(config);}
public virtual void GetInterfaceAttribute(){lock (@lock){return;}}
public virtual void AddState(ATN state){atn.AddState(state);}
public virtual DescribeRouteTablesResponse DescribeRouteTables(DescribeRouteTablesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeRouteTablesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeRouteTablesResponseUnmarshaller.Instance;return Invoke<DescribeRouteTablesResponse>(request, options);}
public CompositeReaderContext Create(XmlReader reader){return (CompositeReaderContext)Create(reader, 0, 0);}
public virtual string GetSequenceName(){return sequence.ToString();}
public override void Serialize(StreamOutput stream){throw new System.NotImplementedException();}
public virtual IList<string> GetAliases(){return aliases;}
public override FilterFactory CreateFilterFactory(FilterConfig config){return base.CreateFilterFactory(config.fst, new ReverseStringFilter(config.fstArgs));}
public virtual IList<ResolverResolver> GetResolvers(){return new List<ResolverResolver> { this._enclosing}
public virtual bool IsLast(IList<Head> list){return list.IsLast();}
public override byte[] Serialize(Record rec){return Serialize(rec.Record, rec.Offset, rec.RecordSize);}
public WSBoolRecord(Stream in1){return _in1.ReadWSBoolRecord(in1);}
public int CellRangeBytesRequired(int cellRangeCount){return _cellRangeCount * _cellRangeCount;}
public virtual NGit.Diff.Input GetClone(){return this;}
public void Flush(char b){if (m_buf!= null){_buf.Append(m_enc.Flush(b));}else{m_enc.Flush(b);}}
public CookieStickinessPolicy(){return new CookieStickinessPolicyAnonymousInnerClassHelper(this);}
public virtual void SetCodePage(int page){m_codePage = page;}
public override void Set(double v){base.Set(v);}
public void AddConditionalFormattingRule(IConditionalFormattingRule rule){heets.Add(rule.SheetName, rule.Value);}
public override ICollection<E> GetAssignments(){return base.GetAssignments();}
public java.nio.ByteBuffer slice(java.nio.ByteBuffer offset,_limit) {return byteBuffer.slice(offset, _limit);}
public string GetTaggerId(){return _tagger;}
public String ToString(){return HSSFErrorConstants.GetText(hssF_1);}
public virtual long BytesUsed(){return BytesUsed();}
public virtual RevWalk GetCurrentRevWalk(){return current.GetRevWalk();}
public void DeleteDBSecurityGroup(string dbSecurityGroupName){Delete(dbSecurityGroupName, 0, dbSecurityGroupName.Length);}
public virtual IList<DeploymentConfig> GetDeploymentConfigurations(){return deploymentConfigurations;}
public virtual E remove(E @object){lock (this._enclosing){int oldSize = this._enclosing._size;this._enclosing.remove(oldSize);this._enclosing._size = oldSize;this._enclosing.notifyDataSetRemoved();return this._enclosing._size!= oldSize;}}
public override string GetSignerVersion(){return SignerVersion.LUCENE_CURRENT;}
public virtual char lastInString(){return head;}
public override long GetPosition(){return filePointer - buffer.GetStart();}
public bool EndsWithAnyOfTheException(string s){return string.EndsWithAnyOfTheException(s);}
public TagPhoto(TagPhotoRequest request){var options = new InvokeOptions();options.RequestMarshaller = TagPhotoRequestMarshaller.Instance;options.ResponseUnmarshaller = TagPhotoResponseUnmarshaller.Instance;return Invoke<TagPhoto>(request, options);}
public virtual void RemoveParseListeners(){ParseListener[] list = _parseListeners;_parseListeners = null;}
public JAR file { get; set; }
public virtual List<InstanceTypeOffer> GetInstanceTypes(){return new List<InstanceTypeOffer>(this);}
public void AssociateContact(Contact contact){this.contact = contact;}
public virtual UpdateTypedLinkFacetResponse UpdateTypedLinkFacet(UpdateTypedLinkFacetRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateTypedLinkFacetRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateTypedLinkFacetResponseUnmarshaller.Instance;return Invoke<UpdateTypedLinkFacetResponse>(request, options);}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(this.GetType().Name);out1.WriteByte(_order);}
public virtual void SetExportAllFlag(bool value){exportAll = value;}
public virtual void Update(int existing_variable_index){update_at(existing_variable_index);}
public SegmentFile GetSegmentsFile(List<FileHeader> files){return GetSegmentsFile(files);}
public virtual RevWalk GetCurrentRevWalk(){return current.GetRevWalk();}
public java.nio.ByteBuffer slice(java.nio.ByteBuffer start, int length_1){return new java.nio.ByteBuffer(data, start, length_1);}
public void AddRecords(RecordStream in_stream){AddRecords(in_stream.GetRecords(0))}
public bool Get(int index){return _bitMap[index];}
public formula error(int type){return _formulaErrors.Get(type);}
public virtual ExternalModelsCollection ExternalModels { get; private set; }
public string value{get; internal set;}
public virtual Attachments CreateInstances(LoadBalancerNode balancerNode, InstanceInfo instanceInfo){return _loadBalancers.CreateInstances(balancerNode, instanceInfo, null, null);}
public virtual IList<Topic> GetTopicsWithTheNextToken(){return topics;}
public analyzer factory(char filter factories, tokenizer factories, token filter factories){return new AnalyzerFactory(filterFactories);}
public override void Write(int b){WriteShort(b);}
public virtual string getValue(object o){return base.getValue(o);}
public virtual void Run(Task task){this._enclosing.Run(task);}
public virtual int keyInTree(K key){return indexOf(key, keyInTree, 0);}
public virtual NGit.Api.Ref Update(){return this._enclosing.Update(NGit.Api.REF_UPDATED));}
public override void Delete(){DirectoryInfo dir = base.Directory;if (dir!= null){DeleteDirectory(dir);}DirectoryInfo er = Directory.Create(workingDirectory);if (er!= null){return;}DirectoryInfo er2 = Directory.Create(workingDirectory, false);if (er2!= null){return;}DirectoryInfo d3 = Directory.Create(workingDirectory, true);DirectoryInfo d4 = Directory.Create(workingDirectory, true);DirectoryInfo d5 = Directory.Create(workingDirectory, false);DirectoryInfo d6 = Directory.Create(workingDirectory, true);d3.Delete(d3.Name, d3.Directory, d4.Directory, d5.Directory, d5.Directory, d5.Directory, d5.Directory, d5.Directory, d7.Directory, d7.Directory, d7.Directory, d7.Directory, d7.Directory, d7.Directory, d7.Directory, d7.Directory, d7.Directory, d7.Directory, d7.
public not_implemented(string name){not_implemented = name;}
public void DeleteCacheSecurityGroup(string cacheSecurityGroupName){CacheSecurityGroupRecord group = (CacheSecurityGroupRecord)_client.DeleteCacheSecurityGroup(cacheSecurityGroupName);}
public virtual void SetValue(string newValue){object temp;if (this.lastValueWasThrown)throw new InvalidOperationException("Value was never returned by the ReferenceManager instance (currently only one value was provided).");this.lastValueWasThrown = newValue;this.lastValueWasThrown = true;this.isValueSet = false;this.isValueSet2 = true;this.isValueSet3 = true;this.isValueSet4 = true;this.isValueSet3 = true;}
public virtual void Reset(Parser parser){m_state = STATE_INIT;}
public virtual DescribeAccountLimitsResponse DescribeAccountLimits(DescribeAccountLimitsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeAccountLimitsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeAccountLimitsResponseUnmarshaller.Instance;return Invoke<DescribeAccountLimitsResponse>(request, options);}
public virtual void UpdateAppAvailabilityOptions(App app){base.UpdateAppAvailabilityOptions(app);}
public virtual CreateCustomerGatewayResponse CreateCustomerGateway(CreateCustomerGatewayRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateCustomerGatewayRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateCustomerGatewayResponseUnmarshaller.Instance;return Invoke<CreateCustomerGatewayResponse>(request, options);}
public override void put(float value){buffer.put(value);}
public virtual void AddConfigChangedListener(ConfigChangedListener listener){configs.AddListener(listener);}
public virtual IList<EventSource> GetSubscriptions(){return eventSubscriptions;}
public GetCredentialResponse GetCredential(string uri, List<CredentialItem> credentialItems){return GetCredential(uri, credentialItems);}
public string pattern { get; set; }
public virtual ICollection<PublicKey> GetKeys(){return publicKeys;}
public void ResetFPGAImageAttribute(){_fpgaImage = new FPGA_ImageAttribute(NO_FPGA_ID);}
public virtual PolicyAttachments GetPolicyAttachments(){return null;}
public virtual string GetModelVersion(){return version;}
public static void GetClientCertificateInformation(){return new ClientCertificateInformation(null, null, null, null);}
public override int Read(Record record){return _in.ReadInt();}
public virtual void Stop(){m_end = true;}
public void AddCellRangeAddress(CellRangeAddress rangeAddress){_cells.Add(rangeAddress);}
public void DisassociateQualificationFromWorker(Qualifier qualifier){_qualifier = qualifier;}
public override void Run(){base.Run();}
public virtual bool DryRun(){return true;}
public virtual string ToString(){return GetCanonicalName();}
public string value { get; set; }
public bool Equals(WeightedPhraseInfo other){return _weight == other._weight;}
public virtual string GetDirichletName(){return dirichlet.Name;}
public virtual TokenGroup Create(TokenStream stream){return Create(stream, 0, stream.Length);}
public DG record(Pattern pattern, int row, int col){_pattern = pattern;_row = row;_col = col;}
public CellValue Get(int index){return _cells[index];}
public virtual void UpdateGameSession(UpdateGameSessionRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateGameSessionRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateGameSessionResponseUnmarshaller.Instance;return;}
public virtual string get(string key){return values[get(key)];}
public void RegisterImage(PicImage image){this.m_image = image;}
public virtual DescribeDataSourcesResponse DescribeDataSources(DescribeDataSourcesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDataSourcesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDataSourcesResponseUnmarshaller.Instance;return Invoke<DescribeDataSourcesResponse>(request, options);}
public java.lang.String replaceAll(string text, int index, char[] text1, int text2, int length_1){return replaceAll(text, 0, text1, length_1, text2, length_2, text3, text4, text5, text6_only);}
public virtual void insert(char c){java.lang.StringBuffer.link(c, this.charAt(c.index));}
public ExclusionsPreview CreateExclusionsPreview(FieldInfos field_1_fields){return new ExclusionsPreview(this, field_1_fields, field_2_fields_1_exclusions);}
public override bool ShouldAddRefLog(){return true;}
public override byte put(byte b){throw new System.NotImplementedException();}
public override void Serialize(Stream out1){out1.Write(this.ToString(Constants.CHARSET));}
public virtual int GetMarkLength(ICharStream stream){return marked.GetCharCount(stream);}
public virtual DescribeTerminationPolicyTypesResponse DescribeTerminationPolicyTypes(DescribeTerminationPolicyTypesRequest request){return DescribeTerminationPolicyTypesResponse(request, GetRuntime());}
public virtual void add(object o){iterator.add(o);end++;}
public virtual void SetRefSpecs(string specs){_pushRefSpecs = specs;}
public virtual void Apply(Schematic schema, object field_1_schema_definition){Set(schema.Name, field_1_schema_definition);}
public virtual RefCreateResponse GetLeaf(){return GetRefCreateInternal(GetRefForLeaf());}
public virtual int GetTokenScore(){return score;}
public virtual char[] GetChars(){return GetChars(0, 0);}
public virtual AmazonGuardDutyAssessmentReport GetAmazonGuardDutyAssessmentReport(){return GetAmazonGuardDutyAssessmentReport(new AmazonGuardDutyAssessmentReportRequest());}
public virtual IList<Backup> GetBackups(){return backups;}
public virtual StemmerOverrideMap Build(){return (StemmerOverrideMap)Build(null);}
public virtual bool isEmpty(){return isEmpty();}
public string set_parent_id(string id){parent_id = id;}
public void SetFormulaCellEntry(FormulaCellEntry formulaCellEntry){_formulaCellEntry = new FormulaCellEntry(this, formulaCellEntry);}
public ExtSSTRecord Size(byte b){return ExtSSTRecord.Size(b);}
public virtual string substring(string str){return new string(str, 0, str.Length);}
public virtual void UpdateDocumentationPart(){UpdateDocumentationPartInternal(null);}
public override void Serialize(Record record){if (record.ObjectId == null){throw new ArgumentNullException("record.ObjectId cannot be null");}SerializeRecord(record);}
public virtual subnet_group_info(){return subnet_group_info(_default_pgroup);}
public DistributionIdAttribute(int value){this.value = value;}
public void SetAttr(string name, string value){_name = name;_value = value;}
public virtual ReceiveDestinationInfo GetSuppressedDestinationInfo(){return destination;}
public virtual void AddRefSpec(RefSpec spec){fetchList.AddRefSpec(spec);}
public virtual void UpdateUsage(){base.UpdateUsage();}
public virtual void grow(int capacity){refill(capacity);}
public virtual void DrawString(ICharSequence text){DrawString(text, 0, text.Length);}
public override void putDouble(double value){if (value!= 0){throw new System.NotImplementedException();}buffer[offset + _position++] = double.Parse(value, CultureInfo.InvariantCulture);}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(rtid);}
public virtual void SetWriteReferences(IList<WriteReference> writeReferences){_writeReferences = writeReferences;}
public virtual ITab tabAt(int position){return tabAt(position);}
public virtual void DeleteRepository(){DeleteRepository(null);}
public virtual VersionCollection GetVersions(){return Segment.GetVersions();}
public BookNameAndSheetId set(String bookName, String sheetName){_bookName = bookName;_sheetName = sheetName;}
public virtual IList<E> startOfNewSlice(IList<E> elements){return new List<E>(elements);}
public Object Clone(){return (Object)this.GetPrototypeOf(KGDB.Record.TopMarginRecord);}
public override NGit.QueryMaker GetQueryMaker(){return _queryMaker;}
public virtual IList<Broker> GetBrokers(){return brokers;}
public virtual IPRangeChecker GetIPRanges(){return ipRanges;}
public virtual bool Equals(NGramDistance other){return other.Radius!= other.Radius;}
public override void SetBytesReadInReverseOrder(SetBytesReadInReverseOrderReader reader){m_bytesReadInReverseOrderReader.SetBytesReadInReverseOrder(reader);}
public virtual string ToString(){return GetCanonicalName();}
public void DeleteCORSConfiguration(){_corsConfigurations = null;}
public virtual List<ProblemObservation> GetProblemsForApp(string appName){return problemObservations.GetProblemsForApp(appName);}
public override void SetUp(){base.SetUp();}
public Context(Searcher searcher){return new Context(this, searcher);}
public override inflection type(int id){return base.getInflectionType(id);}
public virtual void Initialize(PARAH8DocIdSet conds){_beginOffsets = new int[_beginOffsets.Length];}
public string getRawQuery(){return query;}
public virtual double Evaluate(SDVariable number_1){return Evaluate(number_1, number_2, number_3, number_4, number_5_ref, _number_6_ref, _number_7_ref, _number_7_ref_type);}
public override bool IsBuiltInFunctionName(Name name){return name == null;}
public virtual QualificationType GetQualificationType(){return null;}
public ObjectLinkRecord Read(RecordInput in1){return ReadObjectLinkRecord(in1);}
public virtual string Get(int path){return path;}
public virtual void Reset(Parser parser){m_state = STATE_INIT;}
public int GetCodecID(sbyte[] codecData): base(codecData){return codecData[Constants.CODEC_NR_BYTES];}
public void WriteU32(int v){WriteU32(v, _position, _order);_position += 4;}
public override byte[] GetImage(){return new byte[RAW_DATA_SIZE];}
public virtual void SetRefSpecs(string specs){_pushRefSpecs = specs;}
public void reset(int start, int end){position = start;end = end;}
public void Write(Message message){_out.Write(message);_size += message.Length;}
public void StopJob(){_job = null;}
public NumberEval NumberEval(int row, int column){return _numberEval;}
public virtual MembershipListResponse GetMemberships(List<MembershipRequest> args){var options = new InvokeOptions();options.RequestMarshaller = GetMembershipsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetMembershipsResponseUnmarshaller.Instance;return Invoke<MembershipResponse>(args, options);}
public virtual void append(K e){append0(e);}
public virtual Summary GetTemplateSummary(){return Summary;}
public virtual MatchgroupConfiguration Update(MatchgroupConfiguration config){return config.Matchgroup;}
public virtual IBlockResult Block(int blockNumber, IBlockStream stream){return Block(blockNumber, stream);}
public virtual void DrawLine(ILine line){DrawLine(line);}
public override void WriteByte(int b){if (m_len >= m_buf.Length){Resize(m_len + 1);}UnsafeWriteByte(b);}
public virtual NGit.Treewalk.Tree Builder: BuildTree(ICharStream input){this.m_input = input;this.m_totalCount = 0;this.m_totalOffset = 0;this.m_initialCount = 0;this.m_initialCount = 0;this.m_iterator = input.GetEnumerator();}
public virtual NGit.DiffCommand<SSTableRecord> init(NGit.DiffCommand command){this.command = command;this.repository = repository;this.setup(command.Options);}
public IP address(string range){if (range == null){throw new ArgumentNullException("range");}return _ipv4Address(range);}
public override void Serialize(Stream out1){out1.Write(this.ToString(Constants.CHARSET));}
public CellRangeType GetRangeType(){return _categoryRangeType;}
public virtual void append(string str){append0(str);}
public override void Evaluate(IPositionSourcePosition src, IPositionIndex dst, IPositionIndex index){this.e = src.GetColumn(dst);this.e = src.GetRow(dst);this.e = dst.GetColumn(dst).GetColumn(dst).GetRow(dst);this.e = e.GetColumn(dst).GetColumn(dst).GetColumn(dst).GetColumn(dst).GetColumn(dst).GetColumn(dst).GetColumn(dst).GetColumn(dst).GetColumn(dst).GetColumn(dst).GetColumn(dst).GetColumn(dst.GetColumn(dst).GetColumn(dst).GetColumn(dst).SetValue(src, src).SetValue(src, src).SetValue(this, e.getValue());this.e = null;this.e = null;this.e = null;this.e = null;this.e = null;this.e = null;this.e = null;this.e = null;}
public override string ToString(){return "Infinity";}
public virtual AnalyzeResponse Analyze(AnalyzeResponse analyzeResponse){return analyzeResponse.Analyze(analyzeResponse.isAwait(true))? analyzeResponse.analyze(analyzeResponse.analyzeResponse.analyzeResponse.analyzeResponse : analyzeResponse.isAwait(false))? analyzeResponse.analyzeResponseNoContent : analyzeResponse.isAwait(false)? analyzeResponse.analyzeResponseNoContent : analyzeResponse.isAwait(false)? analyzeResponse.analyzeResponseNoContent();}
public virtual void Set(ITree newTree){this._enclosing.Set(newTree);}
public virtual bool Equals(object o){if (o is android.graphics.Point){return true;}android.graphics.Point p = android.graphics.Point.getInstance();if (p == null){return false;}return true;}
public void flush(){_writer.flush();}
public virtual DescribeClusterParameterGroupsResponse DescribeClusterParameterGroups(DescribeClusterParameterGroupsResponse describeClusterParameterGroupsResponse){return DescribeClusterParameterGroupsResponse(describeClusterParameterGroupsResponse(describeClusterParameterGroupsResponse(describeClusterParameterGroups)));}
public virtual void SetLength(int value){this.value = value;}
public virtual void Grow(int count){Buffer.BlockCopy(m_array, 0, m_array.Length * index.Row, m_array.Length * index.Column, count);}
public virtual FieldLevelEncryptionResource GetFieldLevelEncryption(){return field_level_resource;}
public override long BytesUsed(){return delegate1.BytesUsed();}
public virtual void DisassociateClientVpnTargetNetwork(IClientVpnTargetNetwork targetNetwork){this.disassociateClientVpnTargetNetwork(targetNetwork);}
public virtual void DeleteImageBuilder(){this._enclosing.DeleteImageBuilder(null);}
public SpanBuilderFactory(ISpanBuilderFactory factory){_spanBuilderFactory = factory;}
public override int Size(){return _buf.Length;}
public virtual string Reverse(){return "reverse(";}
public CollectionRequest(CollectionRequest request){_request = request;}
public static StaticCredentialsProvider Create(Credentials credentials){return new StaticCredentialsProvider(credentials);}
public Formula FromArray(Ptgs[] ptgs){return new Formula(ptgs);}
public virtual bool isEmpty(){return isEmpty();}
public override java.nio.DoubleBuffer getView(){return this._enclosing.getView(this);}
public virtual bool SupportsExecute(){return true;}
public virtual string ToString(BlockEnd_t blockEnd){return GetBlockEnd(blockEnd.Number, blockEnd.IsHidden, blockEnd.IsFixed, blockEnd.IsExternal, blockEnd.IsExternal);}
public virtual NGit.Api.BM25FQuery Build(){return Build(null, null, null);}
public bool Expired(Object o){return false;}
public bool value_source_flag(ValueSource flagValueSource){this.boolean_value_source = flagValueSource;}
public string GetPath(){return path;}
public override Merger Create(ThreeWayMergeConfig config){return base.Create(config);}
public virtual UpdateContactResponse UpdateContact(UpdateContactRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateContactRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateContactResponseUnmarshaller.Instance;return Invoke<UpdateContactResponse>(request, options);}
public virtual int[] elements(){return elements;}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(this.Name);out1.WriteByte(this.Type);out1.WriteShort(this.DefaultLength);}
public Date Evaluate(ExcelDate date){return date;}
public virtual void Concat(byte[] b){Concat(b, 0, b.Length);}
public virtual DescribeSpotInstanceRequestsResponse DescribeSpotInstanceRequests(DescribeSpotInstanceRequestsRequest request){return DescribeSpotInstanceRequests(request, null);}
public IList<char> Fold(char[] array_1){return Fold(array_1, 0, array_1.Length);}
public virtual LogPatternUpdate logPattern(LogPatternPattern pattern){return logPattern.Update(this);}
public virtual void println(string v){println(Sharpen.StringHelper.GetValueOf(v, OutputKeys.END_OF_OUTPUT)? "true" : "false");}
public virtual IList<Backup> GetAwaitedBackups(){return backups;}
public virtual void SetState(State value){this._enclosing.SetState(value);}
public VoiceConnectorProxy CreateOrUpdateVoiceConnectorProxy(Connector proxy){return CreateOrUpdateVoiceConnectorProxy(proxy);}
public char at(int index){return array[index];}
public override TreeFilter Clone(){return this;}
public virtual FilePath resolve(FilePath dir){return resolve(dir.GetPath(), dir.GetFile());}
public virtual bool IsSorted(string sort){return versions.ContainsKey(sort);}
public bool EndsWith(string s, string suffix){return string.EndsWith(s, suffix);}
public virtual void CleanUp(){session = null;}
public virtual SynonymQuery Build(SearchTermQuery term){return term;}
public virtual EditEventRequest urlParams = [];return new NGit.Api.EditEventRequest(url, urlParams);}
public virtual IList<string> SplitLine(string line){int index = FindIndex(line, start, end);return Split(line, end, 0, line.Length);}
public ChangeResourceRecordSetsRequest(string hostedZoneId, int changeBatch, string zoneName){_hostedZoneId = hostedZoneId;_changeBatch = changeBatch;_zoneName = zoneName;_changeBatch = changeBatch;}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_error_code);}
public virtual void SetRef(){this.@ref = null;}
public virtual IList<E> GetChildren(E @object){return GetChildrenInternal(@object);}
public virtual void removeAt(int index){removeAt(index);}
public virtual string GetText(ICharTerm term){return GetText(term, 0, term.Length);}
public virtual Observation Get(int id){return observationNames.Get(id);}
public virtual IParseTree Evaluate(IParseTree tree){return Evaluate(tree.Root, null, null);}
public virtual void compact(){_le.compact();}
public PatternReplaceFilterFactory Create(PatternReplaceFilterFactory factory){return Create(factory, arguments);}
public SheetRangeEvaluator(SheetRangeEvaluator evaluator){_evaluator = evaluator;}
public override bool canEncode(){return base.canEncode();}
public virtual IList<Attribute> Get(string name){return object.GetAttributes(name);}
public virtual MergePolicy SetMergePolicy(MergePolicy @policy){this.m_mergePolicy = @policy;}
public static void Main(){return { "irt:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0.0:0.0:0.0:0.0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0"}".T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T
public int EvaluateRowAndColumn(IEvaluationContext context, int row, int column){return EvaluateRowAndColumn(context, row, column);}
public void AddCharacter(char c){if (m_characterCount == m_limit - 1){AddCharacter(c, 0);}m_characterCount++;}
public PersianNormalizerFilter(){return new PersianNormalizerFilter(this);}
public override void Fill(byte[] b, int offset, int count){for (int i = offset; i < count; i++){b[offset + i] = fill(b, offset + i);}}
public virtual ListTagsResponse ListTags(ListTagsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListTagsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListTagsResponseUnmarshaller.Instance;return Invoke<ListTagsResponse>(request, options);}
public virtual IParseTree Evaluate(IParseTree tree){return Evaluate(tree.Root, null, null);}
public virtual ICollection<MulticastDomain> GetMulticastDomains(){return new List<MulticastDomain>(this);}
public HCenterRecord(RecordInput in1){return _hcenterRecord(in1);}
public SendEmailRequest(SendEmailRequest request){var options = new InvokeOptions();options.RequestMarshaller = SendEmailRequestMarshaller.Instance;options.ResponseUnmarshaller = SendEmailRequestUnmarshaller.Instance;return Invoke<SendEmailRequest>(request, options);}
public override object Serialize(IDataOutput out1){return Serialize(out1.RawData);}
public virtual E head(E value){return queue.remove(value);}
public FilterInstanceFilter CreateFilter(Pattern pattern){return new FilterInstance(pattern, this);}
public virtual bool Equals(object o){if (o == null){return false;}if (o is Protect){return true;}return false;}
public virtual CreateUserProfileResponse CreateUserProfile(CreateUserProfileRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateUserProfileRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateUserProfileResponseUnmarshaller.Instance;return Invoke<CreateUserProfileResponse>(request, options);}
public SheetName(String sheetName){_sheetName = sheetName;}
public virtual void print(object obj){print(Sharpen.StringHelper.GetValueOf(obj, AbstractPrintStream.OBJECT_KEY)));}
public int ValueCount(ValueCountType valueCountType){return valueCountType.BitsPerValue;}
public override void Skip(int skip){Skip(skip);}
public virtual void write(string b){write(b? "true" : "false");}
public virtual string Escape(string str){return "\\u" + str + "\"";}
public void ToggleFeatures(){this.E.toggleState(true);this.isOpen =!this.isOpen;this.isPlaying =!this.isPlaying;}
public Merger(){return this;}
public HSMClientCertificate { get; private set; }
public virtual void SwitchTo(IToken state){SwitchTo(state.GetLexicalState());}
public virtual UpdateSigningCertificateResponse UpdateSigningCertificate(UpdateSigningCertificateRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateSigningCertificateRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateSigningCertificateResponseUnmarshaller.Instance;return Invoke<UpdateSigningCertificateResponse>(request, options);}
public virtual IdentityFormat Describe(string id){return Describe(id, null);}
public java.nio.CharBuffer wrapAsCharBuffer(java.nio.ByteBuffer byteBuffer, int capacity, int backingArray, int capacity_1, int backingArray_2, int backingArray_3, int backingArray_4, int backingArray_5, int backingArray_5, int backingArray_6, int backingArray_7, int backingArray_7,... backingArray, backingArray_7,... backingArray, backingArray_7, backingArray_7, backingArray_3, backingArray_7_byteOffset, backingArray_7_byteOffset, backingArray_3, backingArray_4, backingArray_5, backingArray_5, backingArray_5, backingArray_5, backingArray_6, backingArray_7_order, backingArray_6, backingArray_7_order, backingArray_7_order, _used_3_order, _used_3_order,_used_3_order,_used_4, backingArray_7_order, backingArray_7_order, backingArray_7_order,_can_offset,_can_offset,_can_offset,_can_offset_length
public virtual string ToString(){return GetCanonicalName();}
public virtual void Grow(int size){for (int i = size; i < size; i++){System.Array.Copy(array, i, array, i.ArrayOffset + i, array.Length - i);i.Length = i.Length;}}
public virtual void DeleteAssociation(string service, string gateway){var options = new InvokeOptions();options.RequestMarshaller = DeleteAssociationMarshaller.Instance;options.ResponseUnmarshaller = DeleteAssociationResponseUnmarshaller.Instance;return;}
public virtual RoomSkillParameter GetRoomSkillParameter(){return skillParameter;}
public int indexOf(object o){return indexOf(o, arrayIndex);}
public virtual string GetDescription(){return GetErrorElement().GetDescription();}
public override bool IsSupported(object @object){return true;}
public virtual void Delete(Stream stream){this._enclosing.Delete(stream);}
public virtual string GetSourceFilePath(){return sourceDirectory.GetPath();}
public virtual NGit.Api.EmailTemplate CreateEmailTemplate(TemplateData data){return CreateEmailTemplate(data, null);}
public virtual string GetUser(){return user;}
public virtual int GetLine(string text){return line;}
public override void put(float value){buffer.put(value);}
public virtual BatchRefUpdate Create(BatchRefUpdate update){return update;}
public virtual void setValueAt(int index, V value){object[] newValues = new object[values.Length + 1];System.Array.Copy(values, 0, newValues, 0, values.Length);}
public virtual DescribeTasksResponse DescribeTasks(){return DescribeTasks(null, null);}
public PacketLineOutRefAdvertiser GetPacketLineOutRefAdvertiser(){return _packetLineOutRef;}
public virtual void DetachTargetGroups(IList<TargetGroup> targetGroups){DetachTargetGroups(targetGroups, null);}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(this.GetType().Name);out1.WriteByte(_order);}
public override ObjectId GetObjectId(string type, string data){return base.GetObjectId(type, data);}
public virtual Explain GetExplainForDocIdFieldResult GetExplainForDocIdFieldResult(int docId, string field, double score){return GetExplainForDocIdField(docId, field, "docId", "docId", "docId", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScore", "docScoreTerms", "docScoreTerms", "docScoreTerms", "docScoreTermsTerms", "docScoreTermsTerms", "docScoreTermsTerms", "docScoreTermsTerms", "docScoreTermsTerms", "docScoreTermsTerms", "docScore
public virtual DescribeClusterSecurityGroupsResponse DescribeClusterSecurityGroups(DescribeClusterSecurityGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeClusterSecurityGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeClusterSecurityGroupsResponseUnmarshaller.Instance;return Invoke<DescribeClusterSecurityGroupsResponse>(request, options);}
public virtual int PTGs_Count(PTG[] ptgs){return PTGs_Count(ptgs);}
public virtual VoiceChannel Information(VoiceChannel channel){return VoiceChannelDetails(channel.VoiceChannelId);}
public virtual void Connect(java.io.Writer writer){this.writer = writer;}
public override String ToString(){StringBuilder sb = new StringBuilder(64);sb.Append(this.GetType().Name);sb.Append(", ").Append(this.Formula.Value);sb.Append("]");return sb.ToString();}
public virtual int GetDelta(){return base.GetDelta();}
public virtual void append(char c){append0(c);}
public void DeleteChimeVoiceConnectorProxy(){DeleteAmazonChimeVoiceConnectorProxy(new VoiceConnectorProxyRequest());}
public virtual void DetectEntities(int start, int end){DetectEntities(start, end);}
public virtual IList<Service> GetServices(){return services;}
public void RemoveTitleProperty(){StyleSheetSheetReader.RemoveProperty(titleProperty);}
public FormulaEvaluator Create(IWorkbook workbook){return Create(workbook, null);}
public virtual void Commit(CommitRequest req){m_begin = req.GetObjectId();m_commit = req.GetObjectId();}
public string GetAccessKeyId(){return _accessKeyId;}
public virtual void CancelSteps(IList<Step> steps){CancelSteps(steps);}
public RefValueArray(int numSheets){return (new RefValueArray(numSheets));}
public virtual bool remaining(float b){return remaining(b)!= 0;}
public IEnumerator<T> GetEnumerator(){return multiset.GetEnumerator();}
public void Clear(){_reader.Clear();}
public CFHeaderRecord Create(CFHeaderRecord rec){return rec;}
public virtual void RegisterTask(Task task){this.task = task;}
public virtual bool keyEquals(string key){return key.Equals("row:".ToCharArray() || key.Equals("row:", StringComparison.Ordinal) && key.Equals("col:", StringComparison.Ordinal)) && key.Equals("key:", StringComparison.Ordinal))&& key.Equals(key, StringComparison.Ordinal))&& key.Equals(key, StringComparison.Ordinal))&& key.Equals(key, StringComparison.Ordinal))&& key.Equals(key, StringComparison.Ordinal))&& key.Equals(key, StringComparison.Ordinal)) && key.Equals(key, StringComparison.Ordinal) && key.Equals(key, StringComparison.Ordinal)){return true;}
public java.util.Enumeration<K> keys(){return keys;}
public virtual byte[] CreateCopy(byte[] b){return CreateCopy(b, 0, b.Length);}
public virtual void Delete(string key){Delete(key, true);}
public virtual void copy(){throw new System.NotImplementedException();}
public public access urls.params = {};return this.getResourceNamesByOperation(OperationType.GetPublicAccessUrls, true);}
public override void putShort(short value){throw new System.NotImplementedException();}
public void Write(byte b){_out.Write(b);_size += b.Length;}
public virtual int size(){return elements.Length;}
public string nameIndex = -1;stems.Add(nameIndex);}
public virtual void put(byte b){throw new System.NotImplementedException();}
public virtual IList<Finding> GetConsecutiveFindings(){return Findings.GetConsecutiveFindings(new AccountContext(account));}
public virtual string GetKey(int key){return key;}
public virtual ICharTerm GetFirstChild(ICharTerm term){return GetFirstChild(term);}
public override bool ShouldRecurse(string path){return path.EndsWith(path, StringComparison.Ordinal) || path.EndsWith(path, StringComparison.Ordinal);}
public Segment GetSegmentInfo(){return segmentInfo;}
public virtual void BackUp(int delta){backUp(delta);}
public static PorterStemFilterFactory Create(Type type){return new PorterStemFilterFactory(type);}
public virtual void SetException(Exception x){throw new System.NotImplementedException();}
public virtual void DecreaseRetentionPeriod(long retentionPeriod){retentionPeriod--;}
public virtual NGit.Storage.File.Snapshot Create(File file){return new NGit.Storage.File.Snapshot(this, file);}
public virtual bool Exists(string directory, string name){return Exists(directory, name);}
public virtual NGit.Api.NotifyAppUpdateSettingsResponse NGit.Api.NotifyAppUpdateSettingsResponse NGit.Api.NotifyAppUpdateSettingsResponse NGit.Api.NotifyAppUpdateSettingsResponse NGit.Api.NotifyAppUpdateSettingsResponse response = NGit.Api.NotifyAppUpdateSettingsResponse(NGit.Api.NotifyAppUpdateSettingsResponse.KEY, NGit.Api.NotifyAppUpdateSettingsResponse.VALUE);return response;}
public virtual NGit.Api.DocType GetDocType(XmlDocument doc){if (doc == null){return null;}return DocType(doc.FirstChild, doc.LastChild, doc);}
public virtual void Reboot(){Sharpen.Reboot(instance.gameObject, this.partnerId);}
public virtual DescribeNetworkAclsResponse DescribeNetworkAcls(DescribeNetworkAclsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeNetworkAclsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeNetworkAclsResponseUnmarshaller.Instance;return Invoke<DescribeNetworkAclsResponse>(request, options);}
public virtual LogPatternSet[] GetLogPatternSets(){return new List<LogPatternSet> { GetPatternSet(null); };}
public virtual string GetState().GetState().GetStateName(); return GetState().GetStateName();}
public virtual ExplainClassWithBasicStatsExplainWithNormFrequencies ExplainClassWithNormFrequenciesExplainWithNormFrequenciesExplainWithNormFrequenciesExplainWithNormFrequenciesExplainWithNormFrequenciesExplainWithNormFrequenciesExplainWithNormFrequenciesExplainWithNormFrequenciesExplainWithNormFrequenciesExplainWithNormFrequenciesExplainWithNormFrequenciesExplainWithNormFrequenciesExplainWithNormFrequenciesExplainWithNormFrequenciesExplainWithNormFFreqExplainClass withFieldGetFieldInfo FieldInfoDefiningClassifications ExplainClassWithNormFrequenciesExplainWithNormFrequenciesExplainWithNormFrequenciesExplainWithNormFrequenciesExplainWithNormFrequenciesExplainWithNormFrequenciesExplainWithNormFrequenciesExplainWithNormFrequenciesExplainWithNormFrequenciesExplainWithNormFrequenciesExplainWithNormFrequenciesExplainWithNormFrequenciesExplainWithNormFrequenciesExplainWithNormFrequenciesExplainWithNormFrequenciesExplainWithNormFfiningClassifications: {
public Example(MultiCategoryLists Facets){return _exampleForMultiCategoryLists(Facets);}
public void Reset(int start, int end){if (start == end){return;}Reset(start, end);end = start;}}
public virtual DeletePublicKeyRequest{return new DeletePublicKeyRequest(publicKey){publicKey = publicKey;}
public virtual void Clear(){_limit = 0;}
public virtual IList<SecurityProfile> GetSecurityProfiles(){return securityProfiles;}
public virtual void SetOffendingToken(IToken token){this._enclosing.SetOffendingToken(token);}
public void FillArc(Arc arc){Arc(arc.Start, arc.ArcEnd, arc.StartAngle);Arc(arc.ArcEnd, arc.ArcEndAngle);}
public virtual void Add(CharsRef other){foreach (CharsRef _char in other){Add(_char);}}
public Read Replica Request(DB Instance, Source DB Instance){return CreateReadReplicaRequest(null, dbInstance, null);}
public virtual IList<string> GetPrefixes(string prefix){return Prefix.GetPrefixes(prefix);}
public virtual AggregateIDFormat GetAggregateIDFormat(){return aggregateIDFormat;}
public virtual string ToString(){return GetCanonicalName();}
public override java.nio.FloatBuffer get(){return _backingArray.get(0);}
public override void Serialize(ILittleEndianOutput out1){out1.Write(this.GetType().Name);out1.WriteByte(this.GetType().Name);out1.WriteByte(this.GetType().GetProperty("id"));out1.WriteShort(this.GetHashCode());}
public virtual DescribeOptions DescribeOptions(){return DescribeOptions();}
public virtual void Increment(int count){count++;}
public virtual void SetFile(FilePath file){List<FilePath> updated = new List<FilePath>();Set(file.GetPath(), file);}
public virtual SrndQuery TopSrndQuery(SrndQuery other){return other.TopSrndQuery(topSrndQuery);}
public override string GetClusterCfgName(){return "default(cluster=" + GetNextClusterCfgName());}
public virtual void Flush(){buffer.Flush();}
public SpanNearClauseFactory(){return (SpanNearClauseFactory)Activator.CreateInstance(this);}
public virtual Ref GetSrcRef(){return src;}
public virtual void Alloc(int capacity){if (_limit == _limit){_limit = capacity;}else{_limit = capacity;_limit = capacity;_mark = _mark;}}
public virtual E next(){return this.nextEntry().value;}
public override void Commit(byte[] b){if (m_buf.Length == 0){throw new System.IO.IOException("Buffer is full");}else{m_buf[m_buf.Length - 1] = b[m_buf.Length];}}
public void Read(Record record){_in.Read(record);_size = record.Length;}
public virtual SortField[] GetSortFields(){return sortFields;}
public virtual NGit.Api.LoginProfile Update(string userName){return Update(userName, true)? LoginProfile(userName) : LoginProfile(new UserName());}
public virtual java.util.Iterator<E> iterator(){lock (mutex){return c.iterator();}}
public RangeEvaluator(ISheetRangeEvaluator source, ISheetRangeEvaluator target, ISheetRangeEvaluator target2, ISheetRangeEvaluator target3, ISheetRangeEvaluator target4, ISheetRangeEvaluator target5, ISheetRangeEvaluator target6, ISheetRangeEvaluator target7, ISheetRangeEvaluator target8, ISheetRangeEvaluator target7, ISheetRangeEvaluator target8, ISheetRangeEvaluator target7, ISheetRangeEvaluator target8, ISheetRangeEvaluator target8, ISheetRangeEvaluator target9, ISheetRangeEvaluator target9, ISheetRangeEvaluator target9, ISheetRangeEvaluator target10, ISheetRangeEvaluator target5, ISheetRangeEvaluator target6, ISheetRangeEvaluator target7, ISheetRangeEvaluator target7, ISheetRangeEvaluator target8, ISheetRangeEvaluator target8, ISheetRangeEvaluator target8, ISheetRangeEvaluator target8, ISheetRangeEvaluator target8, ISheetRangeEvaluator target8, ISheetRangeEvaluator target9, target9, target9, target9, target9, target9, target9, target9, target9, target9, target10, target11,...
public virtual AccountAttributes GetAccountAttributes(){return accountAttributes;}
public override int run(byte[] b){return _algorithm.run(b, 0, b.Length);}
public virtual IList<Expression> GetExpressions(){return Sharpen.Collections.UnmodifiableList(expressions.Values);}
public override bool Validate(object o){return base.Validate(o);}
public EnglishMinimalStemFilter(){return new EnglishMinimalStemFilter(this);}
public virtual void ModifyCreditSpecification(string creditSpecification){creditSpecification = creditSpecification;}
public virtual void SetLength(int value){this._enclosing.Length = value;}
public override NorwegianMinimalStemFilter Create(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9, int arg10, int arg11, int arg12, int arg13, int arg13, int arg13, int arg14, int arg15, int arg16, int if16, if32, if16, if32, if32, if32, if32, if32, if64, if64, if64, if64, if64, if32, if32, if32, if32, if32, long. longlong, longlong, longlong, longlong, longlong, longlong, longlong, longlong, longlong, longlong, longlong, longlong, longlong, longlong, longlong, longlong, longlong, longlong, longlong,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long
public virtual void Start(BundleContext bundleContext){this.m_bundleContext = bundleContext.Start(bundleContext.CreateExternalReference());this.m_entryPoint = bundleContext.CreateExternalReference(BROWSER_NAME);this.m_entryPoint.SetValue(BROWSER_ENTRY_POINT, BROWSER_ENTRY_POINT);}
public void DeleteClientVPNEndpoint(){ClientVPNEndpoint endpoint = null;}
public virtual DescribeLoadBalancerResponse DescribeLoadBalancer(DescribeLoadBalancerRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLoadBalancerRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLoadBalancerResponseUnmarshaller.Instance;return Invoke<DescribeLoadBalancerResponse>(request, options);}
public void Copy(FPGA image){Copy(image.Fpga, image.FpgaOffset, image.FpgaLength);}
public override RevFilter CreateFilter(RevFilter filter){return new CommitTimeFilter(filter);}
public virtual LoadBalancersType[] LoadBalancersType{ get; private set; };
public virtual HostedConnection[] GetHostedConnections(){return null;}
public CellCacheEntries GetCellCacheEntries(){return _cellCacheEntries;}
public virtual CustomEmailTemplateResponse CustomEmailTemplate(CustomEmailTemplateRequest request){var options = new InvokeOptions();options.RequestMarshaller = CustomEmailTemplateRequestMarshaller.Instance;options.ResponseUnmarshaller = CustomEmailTemplateResponseUnmarshaller.Instance;return Invoke<CustomEmailTemplateResponse>(request, options);}
public row, column indices are given. public int getRowAndColumnIndices(OperationEvaluationContext ctx){return _opencounter.EvaluateRowAndColumnIndices(ctx.EvaluateRowAndColumnIndices(ctx.EvaluateRowAndColumnIndices(ctx.EvaluateRowAndColumnIndices(ctx.EvaluateColumnAndIndexCulture), ctx.EvaluateColumnAndIndexCulture), ctx.EvaluateColumnAndIndexContext);}
public override String ToString(){StringBuilder sb = new StringBuilder(64);sb.Append(this.GetType().Name);sb.Append(", ").Append(this.Formula.Value);sb.Append("]");return sb.ToString();}
public override string ToString(){return GetHeaderValue();}
public Properties GetClientProperties(){return null;}
public namespaceUpdateRequest(NamespaceNamespaceRequest request){this.request = request;}
public virtual bool Test(object o){return pattern == null;}
public virtual HealthCheck[] GetHealthChecks(){return healthCheckList;}
public FunctionInstance(int functionIndex){return _builtInFunctions[functionIndex];}
public String GetFormat(CellReference cr, CellReference cell){return format.Get(cr, cell._format.Key);}
public virtual IList<Commit> GetSquashedCommits(){return commits;}
public virtual IList<IParseTree> FindAllParseTrees(XPathExpression expression){return FindAllParseTrees(expression, null);}
public void DisassociateUserStackFromYourAccount(UserStack userStack){CurrentUser = userStack;}
public java.util.MapClass.Entry<K, V>(){return this._enclosing.entry(this.key, this.value);}
public certificates: List<Certificate> { get; private set; }
public virtual int GetOldId(int parentId){return oldId;}
public virtual EnvironmentList GetEnvironments(){return list(GetEnvironments());}
public java.util.Iterator<E> set_wrapped_iterator(java.util.Iterator<E> itr){_wrapped_iterator = itr;}
public virtual TokenizedPhraseQueryNode Create(TokenizedPhraseQueryNode node){return new TokenizedPhraseQueryNode(this, node);}
public virtual string get(char b){return buf.get(b, b.pos, b.len);}
public virtual string ToString(){return GetCanonicalName();}
public virtual IList<VPCAssociation> GetVPCAssociations(string gatewayName){return VPCAssociation.List(gatewayName, null, null);}
public virtual IList<Operation> GetStartedOperations(){return startedOperations;}
public virtual void Grow(int size){for (int i = size; i < size; i++){System.Array.Copy(elements, i, _array, i + _position, _array.Length);_array[i] = _array[i++];}}
public override IList<Ledger> GetLedgers(){return base.GetLeaves();}
public virtual bool contains(object o){return indexOf(o, o.GetHashCode());}
public override void Serialize(byte[] b, int offset){if (_position == _limit){_limit = 0;_position = _position;_buf = b;_position += _position;_limit = _limit;_end = _end;}}
public bool Get(string key){return Sharpen.Util.ParseBoolean(this.Get(key, null));}
public virtual void DeleteOnDiskFile(){DeleteOnDiskFile(null);}
public java.util.NavigableMap.View<K, V> view(java.util.MapClass.Entry<K, V> entry){return this.view(entry.getKey(), entry.getValue());}
public virtual UpdatePipelinePipelineResponse UpdatePipeline(UpdatePipelinePipelineRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdatePipelineRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdatePipelineResponseUnmarshaller.Instance;return Invoke<UpdatePipelinePipelineResponse>(request, options);}
public bool isEmpty(){return isEmpty();}
public bool Set(int index, bool value){return _set(index, value);}
public virtual AttachLoadBalancerToSubnetsResponse AttachLoadBalancerToSubnets(AttachLoadBalancerToSubnetsRequest request){var options = new InvokeOptions();options.RequestMarshaller = AttachLoadBalancerToSubnetsRequestMarshaller.Instance;options.ResponseUnmarshaller = AttachBalancerToSubnetsResponseUnmarshaller.Instance;return Invoke<AttachLoadBalancerToSubnetsResponse>(request, options);}
public virtual ObjectId GetNewObjectId(){return new ObjectId(field_1_objectId);}
public virtual ReceiveCommand.Result GetResult(){return status;}
public void SetPathGroupGroupIdAndCreateDate(string path, string groupIdAndCreateDate){_path = path;_groupId = groupId;_groupCreateDate = createDate;}
public int GetSheetIndex(IEvaluationSheet otherSheet){return otherSheet.SheetIndex;}
public virtual DirectoryCache GetDirectoryCache(){return directoryCache;}
public override V set(string cs){return this._enclosing.set(cs);}
public ParseException(){}
public virtual KeepFile Create(PackFile packFile){return Create(packFile, true);}
public cutout_task_requests: base_uri = "/cutouts/{cutout_task_id}";return cutout_task_requests: base_uri + "/POST";}
public virtual void Highlight(string text, int score){totalScore += score;for (int i = 0; i < totalScore; i++){GetToken(i, text);}}
public void ReadChartFormatRecord(){HSSFWorkbook wb = (HSSFWorkbook)_in.Workbook;HSSFWorkbook in1 = (HSSFWorkbook)_in1.Workbook;HSSFWorkbook in2 = (HSSFWorkbook)_in1.Workbook;HSSFWorkbook in3 = (HSSFWorkbook)_in1.Workbook;HSSFWorkbook in4 = (HSSFWorkbook)_in1.Workbook;HSSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFSFS
public virtual void Delete(){_rc4.Dispose ();_rc4.Dispose ();}
public virtual MatchmakingGroupConfiguration[] GetMatchmakingGroups(){return group(default(GroupMatcher));}
public virtual InvitationConfiguration GetInvitationConfig(){return invitationConfig;}
public virtual IList<string> GetFooterLines(){return footerLines;}
public virtual List<TransportProtocol.EventDestination> configSetEventDestinations{ get; private set; }
public DateTime GetExcelDate(DateTime date){return GetExcelCalendar(date.Year, date.Month, date.Day);}
public virtual ExportRoutesResponse ExportRoutes(ExportRoutesRequest request){return ExportRoutes(request.Routes, request.ExposeHeaders, request.UseQueryString, request.UseQueryStringAsQuery, request.UseQueryStringAsQuery, request.UseQueryStringAsQuery, request.UseQueryStringAsQuery, request.UseQueryStringAsQuery, request.UseQueryStringAsQuery, request.UseQueryStringAsQuery, request.UseQueryStringAsQuery, request.UseQueryStringAsQuery, request.UseQueryAsQueryAsQueryAsQueryAsQueryAsQueryAsQueryAsQuery, request.UseQueryAsQuery, request.UseQueryAsQuery, request.UseQueryStringAsQuery, request.UseQueryStringAsQuery, request.UseQueryStringAsQuery, request.UseQueryStringAsQuery, request.UseQueryStringAsQuery, request.UseQueryStringAsQuery, request.UseQueryStringAsQuery, request.UseQueryStringAsQuery, request.UseQueryStringAsQueryValues, request.UseQueryStringAsQueryValues, request.UseQueryStringAsQueryValues, request.UseQueryAsQuery, request.UseQueryStringAsQuery, request.UseQueryStringAsQueryValues, request.UseQueryStringAsQueryValues, request.UseQueryStringAsQueryValues, request.UseQueryStringAsQueryValues,
public virtual string Subsequence(string str){return Sharpen.StringHelper.Subsequence(this, str);}
public virtual IList<Face> GetFacesInPhoto(Photo photo, int index, IList<Attachment> customHeaders = null, IList<Attachment> customHeaders = null, IList<Attachment> customHeaders = null, IList<Attachment> customHeaders = null, IList<Attachment> customHeaders = null, IList<Attachment> customHeaders = null, IList<Attachment> customHeaders = null, IList<Attachment> customHeaders = null, IList<Attachment> customHeaders = ifHashtable<Attachment, List<Attachment> customHeaders = null, IList<Attachment> customHeaders = null, List<Attachment> customHeaders = null, List<Attachment> customHeaders = null, CancellationToken cancellationToken = null, CancellationToken cancellationToken = null, CancellationToken cancellationToken = null, CancellationToken cancellationToken = null, CancellationToken cancellationToken = null, CancellationToken cancellationToken = null, Attachments: customHeaders, CancellationToken).Add(Attachments){if (canHeaders.Contains(FaceAttachments)){for (int i = 0; i < customHeaders.
public void AddNameRecord(NameRecord record){LinkTable.AddNameRecord(record);}
public DescribeCacheParametersRequest(string cacheParameterGroupName){return new DescribeCacheParametersRequest(cacheParameterGroupName, null);}
public virtual void AdvertiseCapability(Capability capability){_capability = capability;}
public void ReadHide(Record in1){_isHiding = true;_isRecordAvailable = false;}
public override bool IsValid(double value){return base.IsValid(value);}
public override byte ReadByte(){return delegate1.ReadByte();}
public virtual MMSRecord Read(RecordInputStream in1){return ReadMMS(in1, in1.Current);}
public virtual void SetConfiguration(Configuration config){base.SetConfiguration(config);}
public virtual DescribeStacksResponse DescribeStacks(){return DescribeStacksResponseUnmarshaller.Instance;}
public Facet CreateFacet(Facet facet){return facet;}
public virtual void DetachInterface(object o){DetachInterface(o);}
public virtual bool IsInteractive(int interactive){return _isInteractive;}
public virtual string GetFTLBSDataString(){return FT-LBS.ToString(null, NumberStyles.Integer, CultureInfo.InvariantCulture);}
public virtual string trim(){return trim(new string[0], 0, -trimmingLength);}
public override void write(int b){write(b);}}
public virtual GameSession Create(SessionConfig config){return session;}
public override WMFImage GetThumbnailAsWMFImage(){return thumbnail;}
public MessageBatchRequestParameters Set(MessageBatchRequestParameters request){_request = request;_batch = request;}
public override RevFilter WithDocumentAfter(DateTime date){return WithDocumentAfter(date);}
public virtual void ClaimGameServer(ClaimGameServerRequest request){_request = request;}
public virtual void CompletionComparer(CompletionComparer<T> comp)){completionComparer.Compare(this, comp);}
public virtual IList<Location> GetLocations(){return locations;}
public bool get_unshallow(){return _unshallow;}
public bool IncludeAllGroupHoles{get; internal set; }
public virtual void update(byte[] b){update(b, 0, b.Length);}
public ReceiptFilter CreateReceiptFilter(FilterConfig config){return new ReceiptFilter(config);}
public virtual string GetType().Name{get; set; }
public bool Contains(object o){return map.ContainsKey(o);}
public virtual void SetNodeType(string node_1){node_1 = node_1;}
public virtual IList<ExportSnapshotRecord> GetExportSnapshots(){return null;}
public override void SetMaxLength(int maxTokens){_maxTokens = maxTokens;_maxTokensInOrder = maxTokens;}
public traffic mirror filter rule {@link CreateTrafficMirrorFilterRule} creates a filter rule for traffic mirror.
public java.util.regex.MatcherOptions matcherOptions = new java.util.regex.MatcherOptions();matcherOptions.setValue(this._enclosing.getValue());matcherOptions.setOperator(this.operator);}
public virtual E set(E e){lock (this){object[] newElements = new object[elements.Length + 1];System.Array.Copy(elements, 0, newElements, 0, elements.Length);newElements[elements.Length] = e;elements = newElements;}}
public virtual IList<Configuration> GetConfigurations(){return Sharpen.Collections.UnmodifiableList(configuration.Values);}
public virtual ModifyHostResponse ModifyHost(string host, string password){return ModifyHost(host, password, "host");}
public device policy configuration for an app.independent of device policy configurations.
public virtual bool IsComparerThan(IRevision other){return CompareTo(other.Revision, this);}
public virtual void SetOutputFlag(int b){output = b;}
public virtual void Copy(){_reader.Copy();}
public RecognizeLabelRequest(): base("recognizeLabel"){return _request;}
public virtual DescribeQualificationRequestsResponse DescribeQualificationRequests(DescribeQualificationRequestsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeQualificationRequestsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeQualificationRequestsResponseUnmarshaller.Instance;return Invoke<DescribeQualificationRequestsResponse>(request, options);}
public virtual void grow(int count){for (int i = 0; i < count; i++){grow(count);}}
public virtual void Insert(E element, int location){if (location < 0) return;if (location >= size){throw new InvalidOperationException("location " + location + " is not available in this region.");}int oldSize = _maxSize;_maxSize = location;_position = location;_size = location;}
public virtual void CreateOrUpdateEventsConfiguration(App app, string path, string eventNamespace){this.path = path;this.eventNamespace = eventNamespace;this.app = app;this.updateEventsConfiguration(path, eventNamespace, eventNamespace, eventNamespace, eventNamespace, eventNamespace, eventNamespace, eventNamespace, eventNamespace, eventNamespace, eventNamespace, eventNamespace, eventNamespace, eventNamespace, eventNamespace, eventNamespace, eventNamespace, eventNamespace, eventNamespace) ;}
public virtual IList<ScalingActivity> GetScalingActivities(Account account){return _scalingActivities.Values;}
public virtual void SetOutput(Stream outputStream){@out = outputStream;}
public virtual DescribeServicesResponse DescribeServices(DescribeServicesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeServicesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeServicesResponseUnmarshaller.Instance;return Invoke<DescribeServicesResponse>(request, options);}
public virtual void AddField(string name, string value){fields[name] = value;}
public GrowableWriter(){return new GrowableWriter(this);}
public virtual IList<LoggingConfig> GetLoggers(){return new List<LoggingConfig>(){ { GetLogger(false) } };
public void Create(Resource resource){this.resource = resource;}
public PagedBytesDataOutput as a PagedBytesDataOutput, elsewhere this class is instantiated.
public virtual void Enable(bool enabled){_enable = enabled? true : false;_disable = false;}
public virtual void Set(string cs){m_current = cs;}
public virtual void SetMode(int mode){this.mode = mode;}
public string GetQuery(){return query;}
public void SetPlaceholderAt(int index, Pastement at) {SetPlaceholderAt(index, at);}
public virtual void AcceptInvitation(Invitation invitation){if (invitation.IsRequested){throw new System.ArgumentException("invitation is already granted");}invitation.IsRequested = true;}
public override bool Equals(object o){if (o is StemmerPrefix){return base.Equals(o);}return false;}
public virtual DirectoryInfo[] GetWorkspaceDirectories(){return workspaceDirectories;}
public string value { get; set; }
public virtual void remove(object o){remove(o);}
public virtual GetOperationResponse GetOperation(GetOperationRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetOperationRequestMarshaller.Instance;options.ResponseUnmarshaller = GetOperationResponseUnmarshaller.Instance;return Invoke<GetOperationResponse>(request, options);}
public IdentityPolicy(string identityPolicyName){_identityPolicyName = identityPolicyName;}
public virtual void DeleteRepositoryPolicy(RepositoryPolicy policy){_repositoryPolicy = policy;}
public virtual NGit.Transport.Transport NewTransport(TransportConfig config){return NewTransport(config, this);}
public virtual bool HasChild(RecordType type){return this.HasChild(type, true);}
public override long GetBytesUsed(){return delegate1.GetBytesUsed();}
public string GetEntryPath(){return Sharpen.StringHelper.GetPath(entryPath, true);}
public virtual MediaCollection GetMedia(){return media;}
public virtual void SetRefreshDate(DateTime refreshDate){refreshDate.SetTime(refreshDate);}
public string GetText(IVocabulary vocabulary){return vocabulary.ToString(null, NumberStyles.Integer, vocabulary);}
public virtual DescribeVolumesResponse DescribeVolumes(DescribeVolumesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeVolumesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeVolumesResponseUnmarshaller.Instance;return Invoke<DescribeVolumesResponse>(request, options);}
public virtual NGit.Api.DirectConnectGateway CreateGateway(string gatewayName){return (new NGit.Api.DirectConnectGateway(gatewayName));}
public bool escapedAt(int index){return _string[index];}
public virtual EpollRecord GetEntryPathBuffer(){return _entryPathBuffer;}
public override void Serialize(byte[] b, int offset){if (m_offset == 0){m_offset = 0;}UnsafeWrite(b, offset + _position, m_buf, m_offset + _size);}
public virtual void RejectVPCEndpointConnections(){RejectVPCEndpointConnections((IList<VPCEndpointConnection>)connectionList.Previous);}
public override int Read(Record record, int offset, int length) throws IOException{int end = record.Offset;int start = record.Offset;int end2 = record.Offset;int end3 = record.End;while (true){int endOfRecord = record.EndOfRecord;if (EndOfRecord > 0){end = stream.ReadUpto(EndOfRecord);end = stream.ReadUpto(EndOfRecord);}return EndOfRecord - 1;}
public DeleteArchiveRequest(DeleteArchiveRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteArchiveRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteArchiveRequestResponseUnmarshaller.Instance;return Invoke<DeleteArchiveRequest>(request, options);}
public virtual byte[] Decode(byte[] bytes, int offset, int length){for (int i = offset; i < length; i++){byte b = Decode(bytes[i], 16);if (b!= null){int b1 = Decode(bytes, i + offset, length);int b2 = Decode(bytes, i + offset, length);int b3 = Decode(bytes, i + offset, length);for (int i = i + length; i < b3; i++){b3 = Decode(bytes, i + offset, length);}}return b3;}
public virtual void SetPropertyDescriptions(String[] descriptions){for (int i = 0; i < properties.Length; i++){SetPropertyDescriptions(i, descriptions[i]);}}
public virtual SolutionDetail GetSolutionDetail(){return solutionDetail;}
public virtual RequestRenamesAlbumsResponse RequestRenamesAlbums(RequestRenamesAlbumsRequest request){return RequestSchedulesAlbums(request.Request, request.Albums);}
public virtual string SortedSet(int size){return sortedset.ToString(size);}
public override void Serialize(XmlElement e){SerializeChildren(e.childNodes, e.start, e.childNodes, e.childNodes, e.childNodes, e.childNodes, e.childNodes, e.childNodes, e.childNodes, e.childNodes, e.childNodes, e.childNodes, e.childNodes, e.childNodes, e.childNodes, e.childNodes, e.childNodes, e.childNodes);}
public virtual void Describe(List<Record> events){foreach (Record record in events){Describe(record);}}
public virtual ICollection<K> GetKeys(){return Sharpen.Collections.UnmodifiableSet(keys);}
public virtual void SetOffsetBefore(int offsetBefore){m_offsetBefore = offsetBefore;}
public override java.nio.ShortBufferEx get(short b){return get(b, java.nio.ReadWriteIndex(b))}
public virtual float GetNormOfFieldInvertState(){return field_1_norm;}
public virtual bool contains(object o){return this._enclosing.containsValue(o);}
public virtual void set_contents(char[] array_1){lock (this){base.set_contents(array_1);}}
public static PortugueseMinimalStemFilterFactory Create(Type of the PortugueseMinimalStemFilterType){return new PortugueseMinimalStemFilterFactory(null, this);}
public NPOI.SS.UserModel.IStyleSheetFormatting Create(HSSFFontFormatting obj){return (obj is HSSFFontFormatting)? (HSSFFontFormatting)this: new HSSFFontFormatting(obj);}
public ModifyDBClusterParameterGroupRequest(DBClusterParameterGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyDBClusterParameterGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyDBClusterParameterResponseUnmarshaller.Instance;return Invoke<ModifyDBClusterParameterGroupRequest>(request, options);}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(ErrorCheck).Append(m_errorCheck.ToString());}
public Formula Create(Formula formula){return formula.Clone();}
public virtual IPAddress[] GetIpV4List(int index){return internal.GetIpV4List(index);}
public override long Available(){return delegate1.Available();}
public virtual ResourceGroupsCollection Resources { get; private set; }
public FieldsQueryList(){return new FieldsQueryList(this);}
public ClusterSecurityGroup CreateClusterSecurityGroup(string name){return CreateClusterSecurityGroup(name, true);}
public virtual void add(E e){throw new System.NotImplementedException();}
public virtual string GetConstraintString(){return constraint.ToString();}
public IEnumerator<E> next(E @in){return @in.getEnumerator();}
public virtual IList<AssessmentRun> GetAssociatedAssessmentRuns(string appName){return assessmentRunRepo.GetAll(appName, null);}
public void Unsubscribe(){_delegate.Unsubscribe();}
public virtual IToken Get(int index){return lexer.Get(tokens[index]);}
public virtual NGit.Api.Repository CreateRepository(string repositoryName){var options = new InvokeOptions();options.RepositoryName = repositoryName;options.UseContainer = true;return a.CreateRepository(this);}
public GermanMinimalStemFilter(){return new GermanMinimalStemFilter(this);}
public WorkGroup Update(WorkGroup existingWorkGroup){return existingWorkGroup;}
public void SetPreferredSize(Dimension preferredSize){this.preferredSize = preferredSize;}
public virtual IList<WorkflowExecution> GetOpenByCurrentAccount(){return list_workflow_executions(default(List<WorkflowExecution>));}
public PlotWalk(){return new PlotWalk(this);}
public virtual IInvocationStack GetInvocationStack(RuleContext ruleContext){return invocationStack;}
public virtual IList<ReceiveCommand> GetReceiveCommands(){return receiveCommands;}
public virtual void write(java.io.OutputStream outputStream){throw new System.NotImplementedException();}
public void SetAllHeaders(Headers hdr){_headers = hdr;}
public virtual void CancelWorkflow(Workflow workflow){Cancel(workflow);}
public virtual List<StackInstance> CreateStackInstances(){return new List<StackInstance>(stacks);}
public NPOI.SS.UserModel.IFormulaEvaluator CreateEvaluator(HSSFFormulaEvaluator evaluator){return new HSSFFormulaEvaluator(this, evaluator);}
public override void Seek(long offset, SeekOrigin origin){long to = offset;file_offset = to;}
public SeriesLabelsRecord Create(RecordInputStream in1){return Create(in1, null);}
public AmazonS3EncryptionClient CreateS3EncryptionClient(EncryptionMaterial materials){return CreateS3EncryptionClient(materials);}
public IConditionalFormatting Get(int index){return _conditionalFormatting[index];}
public virtual int read(){return _buf.ReadUByte();}
public static PortugueseStemFilterFactory Create(Type of this type){return new PortugueseStemFilterFactory(null, this);}
public virtual void Set(string b){c.Change(b);}
public java.util.NavigableSet<E> elementsInTreeMap(E elementsInTreeMapArg){return this._enclosing.elementsInTreeMap(elementsInTreeMapArg);}
public virtual bool contains(object o){return this._enclosing.containsValue(o);}
public override String ToString(){StringBuilder sb = new StringBuilder(64);sb.Append(this.GetType().Name);sb.Append(", ").Append(this.Formula.Value);sb.Append("]");return sb.ToString();}
public IPv6PoolInfoList(){return _pools;}
public virtual string[] ParseLine(int line, StringBuilder buffer, int offset, int length){return ReadLine(line, buffer, offset, length);}
public SpatialPrefixTree Create(int context, int maxLevels){return Create(context, maxLevels);}
public void Remove(){this._enclosing.Remove();}
public string[] valuesToIncludeInAttributeValue { get; set; }
public virtual char get(int i){return get(i, StringComparison.Ordinal)? get(i, StringComparison.Ordinal) : get(i, StringComparison.Ordinal)?"-" + (i + 1):"0";}
public override string GetFieldAsString(){return field_2_bytes.GetValue(this);}
public virtual string GetDescription(){return GetOperation().GetDescription();}
public String GetName(NamePtg namePtg){return GetName(namePtg.Ptg);}
public virtual int GetBaseSize(byte[] b){return _limit * libcore.io.SizeOf(b);}
public int limit(int value){this.limit = value;}
public virtual DiffEntry GetChange(){return change;}
public override void Read(Record record){_in.Read(record);_size = record.Size;}
public RuleTransition(RuleContext ruleContext){this.ruleContext = ruleContext;this.rule = ruleContext.Transition;this.precedence = ruleContext.Precedence;this.postcedence = ruleContext.Precedence;}
public virtual TemporaryFileStream Create(string prefix, string suffix){return Create(prefix, suffix, TemporaryFileStream.DEFAULT_BUFFER_SIZE);}
public virtual int GetOverheadPerValue(int bits){return 0;}
public bool Contains(Cell cell){return false;}
public override void putChar(char c){if (m_buf[m_index + 1] == c){throw new System.IndexOutOfRangeException("value " + c + " is out of bounds for index " + m_buf[m_index + 1]);}m_buf[m_index++] = c;}
public virtual QueryParser NewQueryParser(ICharStream input){return new QueryParser(this, input);}
public virtual DeviceChangeEvent[] GetDeviceEvents(){return deviceEvents;}
public void SetCertificateBody(X509Certificate certificate){this.certificate = certificate;}
public virtual IList<EventSource> GetEventSources(){return eventSource.GetEventSources();}
public virtual CreateJobResponse CreateJob(CreateJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateJobRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateJobResponseUnmarshaller.Instance;return Invoke<CreateJobResponse>(request, options);}
public java.lang.StringBuffer insert(int index, long value){java.lang.StringBuffer.Wrap(m_buf, offset + index, value);}
public virtual CreateApiKeyResponse CreateApiKey(CreateApiKeyRequest request){return CreateApiKey(request, "POST")}
public void unread(sbyte b){throw new System.NotImplementedException();}
public virtual string list_get_next(){return list_get_first().key;}
public bool hasTransparentBounds(){return transparentBounds;}
public virtual string ToString(CultureInfo locale){return CultureInfo.InvariantCulture.ToString(ruleContext);}
public string pattern(){return "pattern(" + pattern + ")";}
public Amazon GuardDuty InternetGatewayGatewayInstance{setCreateInstanceVariable(true, true);}
public virtual char[] charArrayAlloc(int size){if (_size == 0){return m_charArray;}return (char[])_size.Clone();}
public virtual float GetAvgBytesPerCharacter(){return _characterCount;}
public virtual string GetCurrentLineText(){return line;}
public virtual MergeCommandResult GetMergeResults(){return _mergeResults;}
public override void Serialize(Stream out1){out1.Write(GetRecord(dbToken).Serialize(out1);}
public NGit.Api.RestApi Create(string url, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken)){return Create(url, customHeaders, cancellationToken).ConfigureAwait(false);}
public virtual void AddTerm(Term term){Terms.Add(term);}
public virtual string GetPassword(){return password;}
public virtual CreateTrafficPolicyVersionResponse CreateTrafficPolicyVersion(CreateTrafficPolicyVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateTrafficPolicyVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateTrafficPolicyVersionResponseUnmarshaller.Instance;return Invoke<CreateTrafficPolicyVersionResponse>(request, options);}
public QueryConfigHandler GetQueryConfigHandler(){return _queryConfigHandler;}
public void Stop(){StopAllOf(waiter);}
public ATNSimulatorClass ( ){}
public virtual void SetEnabled(bool enabled){this.enabled = enabled;}
public virtual ICharStream GetNext(){return new InputStream(this.m_in.GetValue(PCRE_NEXT_CHAR()));}
public Spanish Light stem filter from the given input token stream.{
public adjustment types { get, private, };
public IList<Note> GetNotes(){return GetNotesInternal(false);}
public capacityProviders: A List<CapacityProvider> { get; internal set; }
public virtual string ListAsString(){return Sharpen.Collections.ToString(this._enclosing);}
public virtual void UpdateDetectorVersionMetadata(){this._detectorVersionMetadata = new VersionInfo() { IsOn = GetOn(); }
public virtual NGit.Api.Ref OpenRepository(string repoName){var options = new InvokeOptions();options.RepositoryName = repoName;options.Open();return Open(repoName, options);}
public virtual void put(byte b){throw new System.NotImplementedException();}
public virtual string GetAbbreviatedObjectId(){return _abbreviatedObjectId;}
public virtual void backUp(int length){backUp(length);}
public virtual void close(){lock (this){if (this.m_lastWritePointer == -1){this.m_lastWritePointer = this.m_file.GetName().Append("_closed");}this.m_lastWritePointer = this.m_file.GetName().Append("_closed");}}
public override void CopyRawData(byte[] rawData, int offset, int length){if (rawData > 0){buffer.Write(rawData);}buffer.Write(length);}
public virtual ServiceAccessPolicies DescribeServiceAccessPolicies(){return serviceAccessPolicies;}
public string getPath(){return "";}
public Sheet GetExternalReference(SheetReference sheetReference){return sheetReference.GetExternalReference();}
public virtual void DetectLabels(int doc, int start, int end){DetectLabels(doc, start, end);}
public override void fill(object[] values, int value, int arrayOffset, int arrayOffset, int arrayOffset, int arrayOffset) {for (int i = 0; i < values.Length; i++){values[i] = values[i];}}
public float get_y(int location){return _rect.get_y(location);}
public virtual bool isError(){return isError();}
public virtual ContainerInstanceDetail GetContainerInstanceDetail(){return containerInstanceDetail;}
public PhotoStore(Cloud PhotoService, PhotoRequest request){var options = new InvokeOptions();options.RequestMarshaller = InvokeOptionsMarshaller.Instance;options.ResponseUnmarshaller = InvokeOptionsUnmarshaller.Instance;return Invoke<PhotoStore>(request, options);}
public virtual GetWorkspacesResponse GetWorkspaces(){return GetWorkspaces(null);}
public override Search.Query GetQuery(string field){return base.GetQuery(field);}
public void RemoveRole(Role role){RoleRecord db = (RoleRecord)_g.Get(role);if (db!= null){db.Remove(role);_g.Release();}}
public override java.nio.IntBuffer get(){return this._enclosing.get(this.position(), this.order);}
public virtual void Modify(DiffEntry snapshot){this.db = snapshot.Copy(CopyEntry.db);}
public virtual string ToString(){return GetCanonicalName();}
public virtual void write(java.io.OutputStream outputStream){throw new System.NotImplementedException();}
public virtual void print(char b){print(b, 0, b.Length);}
public virtual void StartDocumentVersionUpload(DocumentVersion upload){_startDocumentVersionUpload = upload;}
public void Unsubscribe(){_delegate.Unsubscribe();}
public virtual RevOptions GetWorkingTreeOptions(){return null;}
public virtual NetworkConfiguration GetNetworkConfiguration(){return null;}
public virtual void DeleteCluster(){Cluster c = (Cluster)GetCluster();c.Delete();}
public RevWalk Create(ObjectReader reader, int depth){return Create(reader, depth);}
public override void Serialize(byte[] b, int offset, int byteCount){Serialize(b, offset, byteCount);}
public static PeeringAttachment Create(TransitGateway gateway){return new PeeringAttachment(gateway);}
public NormalisedDecimal FromBigInteger(BigIntegerBigIntegerBigInteger exp){return new NormalisedDecimal(fromBigInteger(exp), exponent);}
public virtual void BatchRead(BatchReadRequest request){var options = new InvokeOptions();options.RequestMarshaller = BatchReadRequestMarshaller.Instance;options.ResponseUnmarshaller = BatchReadResponseUnmarshaller.Instance;return;}
public virtual TestAuthorizer GetAuthorizer(){return authorizer;}
public bool IsValid(byte b){return base.IsValid(b);}
public virtual UpdateAuthorizationResponse UpdateAuthorization(UpdateAuthorizationRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateAuthorizationRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateAuthorizationResponseUnmarshaller.Instance;return Invoke<UpdateAuthorizationResponse>(request, options);}
public FilterInstanceFilter CreateFilter(Pattern pattern){return new FilterInstance(pattern, this);}
public virtual void SetLoadBalancerPolicies(LoadBalancerPolicy[] loadBalancerPolicies){_loadBalancerPolicies = loadBalancerPolicies;}
public PagedMutable a new PagedMutable(size, page size, bits per value, acceptable overhead ratio){return new PagedMutable(this, size);}
public virtual void Run(string cmd){Run(cmd, null, 0);}
public override string ToHex(short[] s){return ToHex(s[0]) }
public int valueAt(int index){return array[index];}
public virtual void SetOutputs(List<Output> outputs){_outputs = outputs;}
public virtual void DeleteCacheCluster(string name){Cluster c = GetCacheCluster(name);if (c.isCacheCluster()){CacheClusterDelete(c);}}
public virtual java.nio.FloatBuffer newFloatBuffer(float array_1_size){return newjava.nio.FloatArrayBuffer(array_1_size);}
public virtual void Clear(){map.Clear();}
public virtual void DeleteLoadBalancerPolicy(int policyId){DeleteLoadBalancerPolicy(policyId, true);}
public virtual java.text.BreakIterator getInstance(CultureInfo locale){return java.text.BreakIterator.forLocale(locale);}
public virtual void Attach(object o){this._enclosing.Attach(o);}
public virtual IList<Dashboard> GetDeliveredDashboards(){return GuardDuty.ListDeliveredDashboards(this);}
public LexerNoViableAltException(LexerNoViableAltException se){throw new LexerNoViableAltException(se.Message);}
public override char read(char ch){throw new System.NotImplementedException();}
public MutableFPNumber(int b){return this;}
public QualityQueriesFinder(TargetExecutionContext targetExecutionContext){this.targetExecutionContext = targetExecutionContext;this.isAwaitWhileHandlingAtomicQuery = true;this.isBlowning = true;this.isCachingEnabled = true;this.isCachingEnabled = false;}
public override java.nio.FloatBuffer toFloatBuffer(){return new java.nio.FloatBuffer(this._enclosing);}
public virtual void Destroy(){_instance = null;}
public virtual PersonalizedRanking GetPersonalizedRanking(){return PersonalizedRanking.Current;}
public override void write(byte b){throw new System.NotImplementedException();}
public virtual List<DiffEntry> GetDiffEntry(){return listDiffEntry().GetDiffEntry();}
public virtual void Execute(Lexer action){lexerAction = action;}
public override string ToString(){return "Infinity";}
public override void SetReadlimit(int value){_readlimit = value;}
public virtual void Apply(SstRecordSchema schema){ApplySchema(schema.SchemaRecord);}
public void SeekTo(long to){try{to.SeekTo(to, SeekOrigin.START);}catch (ThreadInterruptedException){throw WriteTimedOut();}
public void SetInputBits(int value){this.m_input = value;}
public string keyAt(int index){return keys[index];}
public virtual ParseException generateParseException(string message, ParseException e){throw new System.NotImplementedException();}
public bool Contains(string name){return map.ContainsKey(name);}
public override bool contains(object o){return this._enclosing.containsValue(o);}
public virtual void Update(ConfigurationSet configSet){this._enclosing.Update(configSet.ReputationOptions);}
public DBCluster(Properties properties){return new DBCluster(this, properties);}
public virtual void Disable(){base.Disable();}
public virtual bool Equals(object o){if (!(o is CompareTag)){return false;}CompareTag(o);return true;}
public virtual ApplicationInformation GetApplicationInformation(){return applicationInformation;}
public virtual bool Equals(ValueSource other){return source.Equals(other);}
public virtual void DeleteSuppressedDestination(Destination destination){DeleteDestination(destination);}
public int DBCellIndex = 0;
public virtual IList<TaskDefinition> GetTaskDefinitions(){return taskDefinitions;}
public StepDetail StepDetail(StepDetail stepDetail){this.StepDetail = stepDetail;}
public virtual void Send(IToken message){SendMessage(message, 0, message.Length);}
public virtual AssociatePhoneNumberResponse AssociatePhoneNumber(AssociatePhoneNumberRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociatePhoneNumberRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociatePhoneNumberResponseUnmarshaller.Instance;return Invoke<AssociatePhoneNumberResponse>(request, options);}
public java.nio.LongBuffer newLongBuffer(long array_1){return newLongBuffer(array_1);}
public override void SetDataSize(int size){base.SetDataSize(size);}
public override void SetAttributes(IRequest other){_request = other;}
public void ConvertRawToEscherRecords(byte[] rawBytes){ConvertRawToEscherRecords(rawBytes);}
public string host { get; set; }
public virtual java.util.Iterator<E> iterator(object o){return list.iterator(o);}
public virtual void SetPort(int port){this.port = port;}
public virtual ApproveSkillResponse ApproveSkill(ApproveSkillRequest request){var options = new InvokeOptions();options.RequestMarshaller = ApproveSkillRequestMarshaller.Instance;options.ResponseUnmarshaller = ApproveSkillResponseUnmarshaller.Instance;return Invoke<ApproveSkillResponse>(request, options);}
public override bool equals(java.nio.CharBuffer other){return this.equals(other.getCharBuffer()) && this.hash == other.hash;}
public virtual int f(int d){return b(d)? f(d) : 0;}
public bool Equals(object other){return other!= null? Equals(this, other) : false;}
public FormulaListConstraint(IFormulaList constraint){return new FormulaListConstraint(this, constraint);}
public void CreateEmptyGroupMarkerSubRecord(){CreateEmptyGroupMarkerRecord(null, 0);}
public FileTreeIterator Create(FileTreeIteratorConfig config){this.config = config;}
public override java.nio.IntBuffer copy(){return copy(this._enclosing);}
public virtual IList<StreamingDistribution> GetStreamingDistribution(){return streamingDistributions;}
public virtual string ToString(){return GetType().Name + "(function=" + GetName() + ")";}
public SheetIndexAdjustments(SheetIndexAdjustments other){return other.AdjustSheetIndex(this);}
public bool Matches(byte b){return cmp(to, from) == 0;}
public int ReadRowHeight(RecordInputStream in1){int row = in1.ReadUShort();if (_isNew){_new = record.CopyTo(_isNew);_isNew = true;_rc4.SkipTwoBytes();_rc4.StartRecord(in1);return _rc4.Record(in1);}int _rc4.EndRecord();return _rc4.Record(in1.ReadUShort());}
public void Write(long b){_out.Write(b);_size += b;}
public virtual void SetRef(RefEval r){ptr = r.GetReferencedValue();}
public virtual void SetTagMessage(string msg){this.m_msg = msg;}
public virtual Query GetQuery(XmlElement e){return GetQuery(e.XmlElement, e.Namespace, e.IsMissing);}
public virtual int GetSize(){return size;}
public virtual Spot Fleet RequestHistory: List<RequestHistory> { Get(requestHistory, Spot FleetResponse.Builder.Of(RequestHistory))}
public override bool IsStemmerApplicable(object o){return false;}
public virtual NodeInfo GetNodeInfo(){return (NodeInfo)GetNode(nodeId);}
public virtual IList<Skill> GetSkills(){return skills;}
public virtual NGit.Api.UpdateGameServerResponse UpdateGameServer(UpdateGameServerResponse serverResponse){return UpdateGameServer(serverResponse.gameServers[serverResponse.gameServers.Length - 1]);}
public virtual void Delete(int access){throw new System.NotImplementedException();}
public DateTime GetExcelDate(DateTime date){return GetExcelCalendar(date.Year, date.Month, date.Day);}
public override void Set(E value){throw new System.NotImplementedException();}
public void SetMarklimits(int marklimit, int markpos){_marklimit = marklimit;_markpos = markpos;}
public virtual List<Campaign> GetCampaigns(){return campaignsList;}
public void Reset(byte[] b){Reset(b, 0, b.Length); }
public virtual int StemChars(string str){return StemChars(str);}
public virtual IList<ClusterJob> GetClusterJobs(){return GetClusterJobsInternal(null, null);}
public void Logout(){_currentUser = null;}
public string getDescription(){return resourceDescription;}
public virtual string get(char b){return buf.get(b, b.pos, b.len);}
public PropertyTable(HeaderBlock headerBlock){return _propertyTable(headerBlock);}
public virtual PathFilter GetPathFilter(){return pathFilter;}
public virtual IUser GetAuthor(){return creator;}
public bool IsLargeImage(){return true;}
public virtual void DisassociateDeviceFromRoom(DisassociatingDeviceFromRoomException){throw new System.NotSupportedException("Disassociating a device from a room is not currently supported.");}
public ExpressionResult Evaluate(int row, int column){return Evaluate(row, column);}
public virtual string ToString(){return GetCanonicalName();}
public IAMPolicyAssignment[] ListIAMPolicyAssignments(){return IAMPolicyAssignment[] { IAM_POLICY_ASSIGNMENT };}
public virtual void AddSubmoduleStatusPath(string path){submoduleStatusPaths.AddItem(path);}
public FastVectorHighlighter(HighlighterConfig config){this.config = config;}
public void close(){buffer.size = 0;}
public static linkInstanceDetail GetLinkInstanceDetail(){return null;}
public override void Serialize(ObjectOutput out1){out1.Write(Serialize(this));}
public override void Fill(byte[] b, int start, int end){Start = start;End = end;}
public ports for an instance.{ CreateInstancePublicPorts(instance);}
public virtual void SetCommitNames(string commitNames){m_commitNames = commitNames;}
public virtual void SetRawData(object rawData){this._enclosing.SetRawData(rawData);}
public virtual int size(){return _size;}
public virtual void trim(){string c = path.ToString(Path.Separator);c.trim();}
public virtual int startOfRowOutlineGroup(int startOfRowOutlineGroup){return startOfRowOutlineGroup((Row)startOfRowOutlineGroup, startOfRowOutlineGroup, startOfRowOutlineGroup, startOfRowOutlineGroup, startOfRowOutlineGroup, startOfRowOutlineGroup, startOfRowOutlineGroup, endOfRowOutlineGroup, endOfRowOutlineGroup, endOfRowOutlineGroup, endOfRowOutlineGroup, endOfRowOutlineGroup, endOfRowOutlineGroup_group, endOfRowOutlineGroup_group, endOfRowOutlineGroup, endOfRowOutlineGroup, endOfRowOutlineGroup, endOfRowOutlineGroup, endOfRowOutlineGroup, endOfRowOutlineGroup, endOfRowOutlineGroup, endOfRowOutlineGroup, endOfRowOutlineGroup, endOfRowOutlineGroup, endOfRowOutlineGroup, endOfRowOutlineGroup, endOfRowOutlineGroup, endOfRowOutlineGroup, endOfRowOutlineGroup_group, endOfRowOutlineGroup_group_end, endOfRowOutlineGroup_end, endOfRowOutlineGroup, endOfRowOutlineGroup, endOfRowOutlineGroup, endOfRowOutlineGroup, endOfRowOutlineGroup, end
public java.lang.StringBuffer insert(string str, int index, java.lang.StringBuffer @out) {java.lang.StringBuffer @out = @out;return this;}
public override long Size(){return _size;}
public virtual string GetRemoteName(){return remote;}
public PColorSet String(){return this.m_colors.String();}
public override byte ReadByte(){return delegate1.ReadByte();}
public Rule ConditionalFormattingRule(FormattingRule rule){return rule;}
public virtual TransformJob CreateJob(TransformJob other){return other;}
public virtual void add(E element, int index){java.util.List.Entry<E> e = list[index];list.insert(e, 0, e);}
public virtual RevokeIngressClusterSecurityGroupResponse RevokeIngressClusterSecurityGroup(string name){return RevokeIngressClusterSecurityGroup(name, false);}
public virtual void Reset(Parser parser){Parser = null;}
public virtual BooleanQuery Build(){return this;}
public virtual string Subsequence(string str){return Sharpen.StringHelper.Subsequence(this, str);}
public static byte[] NewBytes(int capacity){return new byte[capacity];}
public override bool IsCancelled(){return base.IsCancelled();}
public virtual bool SetTagsOnRemoteServer(bool b){return false;}
public string ToString(){return Query(null, null);}
public virtual IList<FileHeader> GetFiles(){return directory.GetFiles();}
public bool AnyFlagSet(IFlagSet otherFlags){return otherFlags.AnyFlagSet();}
public AlibabaCloudCredentials GetAlibabaCloudCredentials(){return _credentials;}
public virtual IList<Repository> GetRepositories(){return repositories;}
public DescribeEngineDefaultParametersRequest(ParameterGroupName family){return new DescribeEngineDefaultParametersRequest(family, defaultParameterGroupName);}
public override FreeRefFunction GetFunction(String name){return null;}
public virtual NGit.BatchUpdate.ReceiveCommand AddCommand(NGit.BatchUpdate.ReceiveCommand command){commands.Add(command);return this;}
public virtual void Delete(string path){if (path == null){throw new ArgumentNullException("path");}DirectoryMapping c = DirectoryMapping.Create(path);c.Delete(path.ToUri());}
public override void Serialize(Output stream){this.SerializeInternal(stream);}
public virtual void ResetClusterParameterGroup(string parameterGroupName){_clusterParameterGroupName = parameterGroupName;}
public override void close(){_out.close();}
public virtual void DetachVPC(string name){VPC peer = GetVPC(name);VPC.DetachVpc(peer);}
public int end(){return start;}
public virtual DBEngineInfo GetDBEngineInfo(){return engines;}
public bokeh.text.Format format { get; set; }
public NATGateway(NATGatewayConfiguration config){this.connection = NATGatewayConfiguration.Create(config);}
public long[] GetLongs(){return longs;}
public virtual IPSet[] GetIPSet(){return IPSet.GetIPSet();}
public int GetCCode(int ccid){return _ccs[ccid];}
public formula string(IList<FormulaAttribute> operands){return _formula.generate(operands);}
public override StemFilter Create(int argc, StemFilter argf){if (argc!= null){return Create(argc, 0, argc.Length);}return new FrenchMinimalStemFilter(this, argf.Start, argc.End, argc.Options, argc.Options, argc.Options, argc.OptionsOpt, argc.OptionsOpt, argc.OptionsOpt, argc.OptionsOpt, argc.OptionsOptOptOptOptOptOptOptOptOptOptOptOptAddOrAdd, argc.OptionsOptAddOrAdd, argc.OptionsOptAddOrAdd, argc.OptionsOptAddOrAdd, argc.OptionsOptAddOrAdd, argc.OptionsOptAddOrAdd, argc.OptionsOptAddOrAdd, argc.OptionsOptAddOrAdd, argc.OptionsOptAdd, argc.OptionsOptAdd, argc.OptionsOptAdd, argc.OptionsOptAdd, argc.OptionsOptAddOrAdd, argc.OptionsOptAddOrAdd, argc.OptionsOptAddOrAdd, argc.OptionsAddOrAdd, argc.OptionsAddOrAdd, argc
public string ToString(){return "SXVD(" + _sxd + ")";}
public virtual FacetInfo GetFacetInfo(){return facetInfo;}
public static string ReleaseStaticIpAddress(string appName){return "0.0.0.0/0";}
public virtual void Skip(int skip){SkipBytes(skip);}
public String ToString(){return this.GetType().Name;}
public int GetExternalSheetIndex(String sheetName){int index = _externalSheets.Get(sheetName);return index;}
public override void SetValue(byte holder, int value){this._enclosing.SetValue(holder, value);}
public virtual Snapshot CreateSnapshot(){return new Snapshot(this);}
public override void SetValue(double newValue){object.CopyValueOf(backingArray, offset + _position, newValue);}
public default settings { get; private set; }
public static JapaneseTokenizer Create(string[] text, int start, int end){return new JapaneseTokenizer(text, start, end);}
public override java.nio.FloatBuffer copy(){return copy(this) || copy(this.delegate1);}
public virtual bool Equals(FieldCacheSource source){return source.Equals(this);}
public bool Supports(params CredentialItem[] credentialItems){return Supports(credentialItems, 0, credentialItems.Length);}
public int GetColumnWidth(){return _rc4.Xor(_x, _y);}
public virtual string GetText(int start, int end){return GetText(start, end);}
public override Stream GetStream(StreamReader reader){return null;}
public NGramTokenFilter Create(ITokenStream tokenStream){return new NGramTokenFilter(tokenStream);}
public virtual string GetText(TextReader reader){return buffer.GetText(0, reader.Length);}
public override void putDouble(double value){if (value!= 0) {putDouble(value, 0);}else{putDouble(value, 1);}}
public static CellRangeAddress CreateEnclosingCellRangeAddress(CellRangeAddress[] addresses, int end) {return new CellRangeAddress(addresses, end, end);}
public virtual string GetNameText(){return name;}
public virtual Antlr4.Runtime.Misc.IntervalSet WithValue(int value){return WithValue(default(Antlr4.Runtime.Misc.IntervalSet)){}
public virtual void UpdateAPNSChannel(ChannelRef @ref){UpdateAPNSChannelInternal(@ref);}
public virtual bool equals(object o){return this == o;}
public SoraniNormalizationFilter(TokenStream input){return new SoraniNormalizationFilter(input);}
public override int ReadShort(){return delegate1.ReadShort();}
public override bool IsPrecompiled(RuleContext ruleContext){return this._enclosing.IsPrecompiled(ruleContext);}
public override byte array(){return backingArray.get(offset + _position, backingArray.EMPTY_BYTE_ARRAY);}
public IReferenceEvaluator GetReferenceEvaluator(ISheet sheet){return referenceEvaluator;}
public string GetHlsStreamingSessionUrl(){return session.GetHlsStreamingSessionUrl();}
public override void SetDefault(SshSessionFactory factory){this.factory = factory;}
public virtual string GetRuleSummary(){return this.ruleSummary;}
public virtual string GetReportAsString(){return this.lei.GetReportAsString();}
public virtual CreatePlacementGroupGroupResponse CreatePlacementGroupGroup(CreatePlacementGroupGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreatePlacementGroupGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = CreatePlacementGroupGroupResponseUnmarshaller.Instance;return Invoke<CreatePlacementGroupGroupResponse>(request, options);}
public CzechStemFilter Create(TokenStream input){return new CzechStemFilter(input);}
public virtual int indexOf(object o){if (o == null){return -1;}return indexOf(o, 0, o.GetHashCode());}
public override double get(int index){return base.get(index);}
public GeoRestrictionType { get; set; }
public virtual void BulkPublish(string topic){for (int i = 0; i < _subscribers.Count; i++){_subscribers[i].Publish(topic, null, null, null);}}
public virtual UpdateServicePrimaryTaskSetResponse UpdateServicePrimaryTaskSet(UpdateServicePrimaryTaskSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateServicePrimaryTaskSetRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateServicePrimaryTaskSetResponseUnmarshaller.Instance;return Invoke<UpdateServicePrimaryTaskSetResponse>(request, options);}
public virtual UpdateIdentityCredentialRequest UpdateIdentityCredentialRequest(IdentityCredential request){var options = new InvokeOptions();options.RequestMarshaller = UpdateIdentityCredentialRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateIdentityCredentialRequestUnmarshaller.Instance;return Invoke<UpdateIdentityCredentialRequest>(request, options);}
public virtual E next(){return this.next;}
public QuerySetQuerySetQuerySetQuerySetQuerySetQuerySet(){this.m_query = new QuerySetQuerySetQuery(this);}
public void DeleteVPCPeeringAuthorization(string peeringId){_vpcPeeringAuthorizationId = peeringId;}
public virtual void SetUp(object o){base.SetUp(o);}
public virtual void ExportDirectory(string directory){m_exportDirectories.AddItem(directory);}
public virtual RouteCollection Routes(){return new RouteCollection(this);}
public virtual SpatialRefSet Query(SpatialRefSet other){return SpatialRefSet(other);}
public virtual IList<ContainerInstance> GetContainers(){return new List<ContainerInstance>(this);}
public override string ToString(){return this.ToString(CultureInfo.InvariantCulture);}
public string Get(int index){return _string.Format(J2N.Text.Get(attributeNames, index));}
public void flush(){_writer.flush();}
public Completion(Automaton automaton){this.automaton = automaton;}
public virtual AmazonGuardDutyTemplateResponse Validate(AmazonGuardDutyTemplateRequest request){var options = new InvokeOptions();options.RequestMarshaller = ValidateAmazonGuardDutyTemplateRequestMarshaller.Instance;options.ResponseUnmarshaller = ValidateAmazonGuardDutyTemplateResponseUnmarshaller.Instance;return Invoke<AmazonGuardDutyTemplateResponse>(request, options);}
public virtual string ToBOF(BOFRecord bofRecord){return bofRecord.BOFString;}
public virtual string GetEncodingName(){return encoding;}
public virtual DisconnectResponse Disconnect(DisconnectRequest request){var options = new InvokeOptions();options.RequestMarshaller = DisconnectRequestMarshaller.Instance;options.ResponseUnmarshaller = DisconnectResponseUnmarshaller.Instance;return Invoke<DisconnectResponse>(request, options);}
public override FilterFactory CreateFilterFactory(FilterConfig config){return base.CreateFilterFactory(config);}
public CreateImageRequest(): base(){return new CreateImageRequest(null, null, null);}
public virtual string IsNotAllowed(object o){return "false";}
public virtual void resize(int capacity){buffer.resize(capacity);}
public virtual string ToString(){return ToString(null);}
public virtual void ReplaceRange(ICharSequence other){for (int i = 0; i < other.chars.Length; i++){ReplaceRange(other.chars[i]);}}
public InitiateJobRequest(string vaultName, string jobParameters){var request = new InitiateJobRequest(vaultName, jobParameters);request.vaultName = vaultName;request.jobParameters = jobParameters;return request;}
public virtual void SetRefSpecs(string specs){_pushRefSpecs = specs;}
public virtual IList<string> GetTags(){return git.tag(this.ctx, this.options);}
public virtual IList<FlowDefinition> GetFlowDefs(){return new List<FlowDefinition> { this._enclosing.GetFlowDefs() };}
public virtual IList<ResourceDelegate> GetDelegates(){return Sharpen.Collections.UnmodifiableList(resourceDelegates);}
public likePhotoRequestCanvasRenderingContext484(IRequest request){var options = new InvokeOptions();options.RequestMarshaller = LikePhotoRequestMarshaller.Instance;options.ResponseUnmarshaller = LikePhotoRequestUnmarshaller.Instance;return Invoke<LikePhotoRequest>(request, options);}
public virtual ICollection<K> GetKeys(){return Sharpen.Collections.UnmodifiableSet(keys);}
public virtual SubmoduleStatusCommand GetSubmoduleStatusCommand(){return null;}
public virtual IToken Get(int type, int index){return tokens[index];}
public virtual java.util.Iterator<E> iterator(object o){return list.iterator(o);}
public virtual IList<Cluster> GetClusters(){return GetClusters(currentUser);}
public string parameter_1_name { get; set; }
public override int Read(int count){return _buf.Read(count);}
public OrQuery(SexpQuery other){return other.OrQuery(other);}
public virtual MergedIdentities MergeIdentities(List<DeveloperIdentity> identities){return MergedIdentities(identities);}
public virtual string Get(string name){return (Get(name, null));}
public override void Evaluate(IPositionSourcePosition src, IPositionIndex dst, IPositionIndex index){this.e = src.GetColumn(dst);this.e = src.GetRow(dst);this.e = dst.GetColumn(dst).GetColumn(dst).GetRow(dst);this.e = e.GetColumn(dst).GetColumn(dst).GetColumn(dst).GetColumn(dst).GetColumn(dst).GetColumn(dst).GetColumn(dst).GetColumn(dst).GetColumn(dst).GetColumn(dst).GetColumn(dst).GetColumn(dst.GetColumn(dst).GetColumn(dst).GetColumn(dst).SetValue(src, src).SetValue(src, src).SetValue(this, e.getValue());this.e = null;this.e = null;this.e = null;this.e = null;this.e = null;this.e = null;this.e = null;this.e = null;}
public void DrawRectangle(IRectangle shape){DrawShape(shape, 0, 0, 1);}
public virtual IList<ProfilingGroup> GetProfilingGroups(){return profilingGroups;}
public virtual MergePredictionContextsResponse Merge(PredictionContextsResponse Output){return Merge(Output);}
public Subscription Subscription(SubscriptionOptions options){this.options = options;}
public bool InRange(char c){int start = c.Start;int end = c.End;bool inclusive = c.EndsWith(m_range[start]) && c.EndsWith(m_range[end]) || c.StartsWith(m_range[end]) || c.Equals(m_range[end]) || c.Equals(m_range[end]) || c.Equals(m_range[end]) || c.Equals(m_range[end]) || c.Equals(m_range[end]) || c.Equals(m_range[start]) || c.Equals(m_range[start]) || c.Equals(m_range[start]) || c.Equals(m_range[end])) || c.Equals(m_range[end])){return true;}
public virtual void ImportImage(PicassoImage image){this.ImportImage(image);}
public CustomMetadata Create(string name, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken)){return CustomMetadata.Create(name, customHeaders, cancellationToken);}
public virtual void CloneReceiptRuleSet(){this.receiptRuleSet = new ReceiptRuleSet(this.backend);}
public virtual java.nio.CharSequenceBuffer subSequence(java.nio.CharBuffer @object){return new java.nio.ReadWriteCharArraySequence(this._enclosing);}
public virtual RouteTableAssociations GetRouteTableAssociations(RouteTableAssociation other){return other.GetRouteTableAssociations(null);}
public virtual E pop(E e){return pop(e.getKey(), e.getValue());}
public string getPath(){return "";}
public virtual void Confirms(Product instance){Confirms(instance.GetReference());}
public virtual NGit.Diff.Input GetClone(){return this;}
public virtual void DescribeConversionTasks(){_conversionTasks = null;}
public virtual void DeleteTrafficMirrorSession(TrafficMirrorSession session){DeleteTrafficMirrorSession(session.Id);}
public virtual string ToString(){return GetInstance().GetName();}
public virtual IList<Connection> GetAssociatedInterconnects(){return interconnects;}
public virtual CreateInstancesResponse CreateInstances(CreateInstancesRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateInstancesRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateInstancesResponseUnmarshaller.Instance;return Invoke<CreateInstancesResponse>(request, options);}
public override Expression Get(int row, int column){return GetExpressionForValue(row, column);}
public virtual IList<GameSession> GetGameSessions(GetGameSessionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetGameSessionsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetGameSessionResponseUnmarshaller.Instance;return Invoke<GetGameSession>[(request)], options);}
public virtual void DeleteDetectorVersion(){detectorVersion.Delete();}
public virtual void SendMessages(IList<Message> messages){SendMessages(messages, null);}
public void ModifyWorkspaces(){MutableSection s = (MutableSection)FirstSection;s.ModifyWorkspace(s.Workspace);}
public virtual void StartActivityStream(ActivityStream stream){_stream = stream;}
public virtual UpdateOperations Describe(){return Describe(null, null);}
public void RestoreAddressToCriticalMode(){Amazon.Pinpoint.Address.RestoreToCriticalMode(address);}
public override object Decode(byte b){return this.Decode(b, 0, b.Length);}
public override TreeFilter FilterAfter(TreeFilter @base){return new TreeFilterAfter(base, true);}
public virtual void compact(){_le.compact();}
public void Fill(IShape shape){Fill(shape);}
public void WriteUTF8(string b){WriteUtf8(b, 0, b.Length); }
public virtual string Message { get; set; }
public virtual float get_max_recall(FSTQuery query){return max_recall;}
public virtual int CountMatchingCells(CellsCellMatch[] cellsMatch){return CountMatchingCells(cellsMatch);}
public virtual void Initialize(List<string> starts){starts = new List<string>(starts);}
public virtual IPAddressGroups Describe(){return IPs;}
public virtual void Reset(){m_initial = STATE_MACHINE;}
public virtual MethodInfo GetMethodInfo(){return MethodInfo.FromInternal(this);}
public virtual GetQualificationResponse GetQualification(GetQualificationResponse onGetQualificationResponse){return GetQualificationResponse(onGetQualificationResponse());}
public override string ToString(){return field_1_name;}
public virtual GetClientCertificateResponse GetClientCertificate(GetClientCertificateRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetClientCertificateRequestMarshaller.Instance;options.ResponseUnmarshaller = GetClientCertificateResponseUnmarshaller.Instance;return Invoke<GetClientCertificateResponse>(request, options);}
public virtual int RowCount(IDataInput in1){return this._enclosing.RowCount(in1);}
public virtual PasswordRecord GetPasswordRecord(){return passwordRecord;}
public virtual void Validate(){base.Validate();}
public void Delete(ITemplate t){if (t == null){throw new ArgumentNullException("t");}m_templates.Remove(t);}
public S3LoggerOptions(S3Bucket bucket, string prefix){_bucket = bucket;_prefix = prefix;}
public override bool Commit(){return false;}
public virtual InfoForNotebookInstanceResponse InfoForNotebookInstance(InfoForNotebookInstanceResponse notebookInstance){return InfoForNotebookInstanceResponse(notebookInstance.InfoForNotebookInstanceResponse);}
public virtual void trim(char[] str){if (str.Length > 0){expand(str, 0, str.Length);}else{expand(str, 0, str.Length);}}
public string GetName(){return GetComponentName();}
public virtual string ToString(BlockEnd_t blockEnd){return GetBlockEnd(blockEnd.Number, blockEnd.IsHidden, blockEnd.IsFixed, blockEnd.IsExternal, blockEnd.IsExternal);}
public virtual InstanceSnapshot Get(string instance){return this._enclosing.Get(instance, null);}
public virtual void reset(){buffer.state = STATE_INIT;}
public virtual void SetIsCachingOnThisInstance(bool use_caching){cache = use_caching;}
public virtual DescribeDBParameterGroupsResponse DescribeDBParameterGroups(DescribeDBParameterGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDBParameterGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDBParameterGroupsResponseUnmarshaller.Instance;return Invoke<DescribeDBParameterGroupsResponse>(request, options);}
public MoveAlbumPhotosRequest(CloudPhotoMoveAlbumPhotosParameters parameters){var request = new CloudPhotoMoveAlbumPhotosRequest();request.Parameters = parameters;return CreateRequest(request);}
public virtual bool WaitUntilGenerationGreaterThan(GenerationGenerationType gen){return generation >= searchingGen;}
public override IList<IToken> GetHiddenTokens(){return base.GetHiddenTokens(){}
public virtual void Dispose(){base.Dispose();}
public override bool Equals(object o){if (o == this){return true;}return false;}
public virtual void Confirm(object o){Confirm(o);}
public void Disassociate(AuthorizationProvider provider){_authorizationProvider = null;}
public virtual void append(object o){append0(o);}
public override ICollection<E> GetChildren(){return scorer.GetChildren();}
public bool HasAnyChanges(){return _numberOfChanges;}
public void Write(Message message){_out.Write(message);_size += message.Length;}
public java.nio.DoubleBuffer allocate(int capacity_1){return _new_free_buffer(capacity_1);}
public German Light stem filter:{ @link GermanLightStemFilter} from the given token stream.
public override FontEncoding GetFontCharset(int value){return font.GetEncoding(value);}
public override float Get(T metric){return base.Get(metric);}
public virtual RevFlag Carry(RevFlag flag){return this;}
public virtual CoipUsage GetUsage(){return usage;}
public virtual void DeleteCacheParameterGroupName(string parameterGroupName){DeleteCacheParameterGroupNameEL(parameterGroupName);}
public java.util.TreeMap<string, string> builder = new java.util.TreeMap<string, string>(this);return new java.util.TreeMap<string, string>(this);}
public virtual void SetValue(IToken token){this.token = token;}
public virtual int GetSLLLookaheadCount(){return lookaheadCount;}
public virtual string[] OnPremisesInstanceIDs{ get; internal set; }
public override bool Equals(object o){if (o == this){return true;}return false;}
public virtual StemmerOverrideMap CreateAutomatonQuery(Term term){return new StemmerOverrideMap(term);}
public void SetCompressionLevel(int compressionLevel){this.compressionLevel = compressionLevel;}
public Table(string tableName, string keySchema, TableOptions options){this.tableName = tableName;this.keySchema = keySchema;this.keySchema = options.keySchema;this.m_tableOptions = options;return this;}
public virtual DescribeClusterSnapshotsResponse DescribeClusterSnapshots(DescribeClusterSnapshotsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeClusterSnapshotsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeClusterSnapshotsResponseUnmarshaller.Instance;return Invoke<DescribeClusterSnapshotsResponse>(request, options);}
public Sheet Name(){return Name;}
public virtual DeleteUserSourceAccountRequest(): base(){return pathNew = string.Format(CultureInfo.InvariantCulture, "userSourceAccounts[{0}].Id", GetAccountProfileRequest.Id));}
public override bool IsHolderSet(IHolder holder){return true;}
public virtual void Resize(int width, int height){outerInstance.Resize(width, height);}
public PropertySetEqualityComparer(PropertySet other){return other;}
public void RemoveColumnFamilyHeader(int index){RemoveInternal(index);}
public override void write(byte b){throw new System.NotImplementedException();}
public virtual void readChars(int count, java.nio.CharBuffer @out, int offset, char[] buffer, int length){checkOffset(count, buffer.length);for (int i = count; i < length; i++){readChar(buffer, offset + _position, buffer);}}
public void DeleteCacheSecurityGroup(CacheSecurityGroupE group){DeleteCacheGroup(group.CacheSecurityGroupId, group.CacheName, group.CacheGroupAccessGroupID, group.CacheGroupModificationGroup);}
public virtual FlowDefinition CreateFlowDefinition(){return new FlowDefinition(this);}
public override void Serialize(ILittleEndianOutput out1){out1.Write(this.GetType().GetTypeInfo().Assembly.GetName().Name);}
public virtual IList<TrafficMirrorTarget> GetTrafficMirrors(){return GetTrafficMirrors(null, null);}
public SDKTypeInformation GetSDKTypeInformation(){return SDKTypeInformation(GetReference());}
public virtual void SetRefLogIdent(string ident){@refLogIdent = ident;}
public virtual string GetText(int start, int end){return GetText(start, end);}
public string getScheme(){return scheme;}
public Builder(CommitterConfig config){this.config = config;this.root = boss.paths.Get(Constants.COMMIT_ROOT);this.init = initCommitRoot;this.initUninitialized = initUninitialized;}
public virtual SpanQuery Get(string element){return SpanQuery.For (element);}
public virtual PurchaseReservedDBInstancesOfferingRequest PurchaseReservedDBInstancesOfferingRequest(){return PurchaseReservedDBInstancesOfferingRequest(new PurchaseReservedDBInstancesOfferingRequest());}
public virtual string GetKey(int key){return key;}
public virtual object GetModified(){return this._enclosing.GetModified();}
public virtual void Clear(){_limit = 0;}
public java.nio.ByteBuffer slice(java.nio.ByteBuffer offset,_limit) {return byteBuffer.slice(offset, _limit);}
public virtual UpdateNotebookInstanceResponse UpdateNotebookInstance(UpdateNotebookInstanceResponse notebookInstanceResponse){return UpdateNotebookInstance(notebookInstanceResponse.NotebookInstance) ;}
public virtual void DeleteTrafficMirrorTarget(){TrafficMirrorTarget c = (TrafficMirrorTarget)GetTarget(c.GetTargetId());}
public virtual SuggestList GetSuggestions(){return _suggests;}
public virtual NGit.Api.Header CreateHeader(NGit.Api.InputStream input){try{return new NGit.Api.Header(this, input);}catch (IOException e){throw new RuntimeException(e);}}
public override int byteCount(){return byteBuffer.readFully();}
public virtual void SetRefSpecs(string specs){_pushRefSpecs = specs;}
public override int putShort(short value){throw new System.NotImplementedException();}
public virtual UpdatePublishedVersionResponse UpdatePublishedVersion(UpdatePublishedVersionResponse response){return UpdateInternal(response, "published");}
public virtual UpdateAutoScalingGroupResponse UpdateAutoScalingGroup(UpdateAutoScalingGroupResponse groupResponse){return UpdateAutoScalingGroup(groupResponse.AutoScalingGroupName, groupResponse.UseSecondaryProcessors, groupResponse.UseCurrentProcessors, groupResponse.UseSecondaryUptime, groupResponse.UseInstanceGroups, groupResponse.UseInstanceGroups, groupResponse.UseInstanceGroups, groupResponse.UseInstanceGroups, groupResponse.UseInstanceGroups, groupResponse.UseInstanceGroups, groupResponse.UseInstanceGroups, ){
public override double get(int offset, size_t count){return buf.get(offset, count);}
public override void write(int value){throw new System.NotImplementedException();}
public virtual char[] copyCharArray(){return copyCharArray(0, _array.Length / 2);}
public override void fill(short value){throw new System.NotImplementedException();}
public virtual bool Contains(int index){return array[index];}
public virtual bool Include(object o){return false;}
public virtual int getReferenceCount(){return refCount;}
public virtual void copy(){object[] snapshot = elements;{for (int i = 0; i < snapshot.Length; i++){snapshot[i] = copy(snapshot[i]);}}}
public virtual string GetGrammar().Name{get; set; }
public virtual List<Operation> GetOperations(){return operations;}
public virtual void Create(INotification announcement){base.Create(confirmation);}
public int BackgroundImageId { get; set; }
public virtual SecurityConfiguration DescribeSecurityConfiguration(){return securityConfigurations;}
public virtual ListenerRegistration[] CreateLoadBalancerListeners(){return new ListenerRegistration[]{ListenerRegistration[]{ListenerRegistration} { ListenerRegistration} {Registration} {Registration} {Registration} {Registration} {Registration} {Registration} {Registration} {Registration} {Registration} {Registration} {Registration} {Registration} {Registration} {Registration} {Registration} {Registration} {Registration} {Registration} {Registration} {Registration} {Registration} {Registration} {Registration} {Registration}
public virtual MergeCommandResult GetMergeCommandResult(){return CommandResult.Fail;}
public void reset(){current = null;}
public override bool Equals(object o){if (o == this){return true;}return false;}
public virtual string ToString(IFormatProvider provider){return GetCanonicalName(provider);}
public override bool HasDirectoryEntry(){return false;}
public void Clear(){pool.Clear();}
public ExpandedDouble(long bits){return new ExpandedDouble(bits);}
public virtual bool Accept(Match match){return match.Accept(this);}
public virtual void SetTextEscaped(string text){m_text = text;}
public UpdateBatchRequest(int recordsToUpdate, BatchCommand command) {return Invoke<UpdateBatchRequest>(command, arguments);}
public void DeleteQualificationType(QualificationType type){_qualifiers.Remove(type);}
public virtual java.util.List<E> subList(){return list;}
public void DeleteApplicationVpcConfiguration(){ApplicationVpcConfiguration leaf = ApplicationVpcConfiguration.Delete(parent, null);}
public virtual bool Equals(CharsRef other){return _other!= null? Equals(this, other) : false;}
public virtual IQueueMessage Receive(IQueueMessage in1){return Receive(in1, null);}
public virtual void Grow(int rows){for (int j = 0; j < rows; j++){Array.Copy(elements, 0, forwardArray, 0, count);forwardArray[j] = array.Copy(elements, j, count + 1, count - 1);}count += 1;}
public java.util.regex.Matcher reset(java.lang.CharSequenceProxy) {@link java.util.regex.Matcher#reset(java.lang.CharSequenceProxy) }
public void DeregisterAccount(WorkMailAccount account){_account = account;}
public SettingsUpdate(string name){return SettingsUpdate(name, null, null, null);}
public virtual NGit.Api.EventTracker Create(Token token){return Create(token, null);}
public bool PropertiesComparer(PropertiesRecord props){for (int k = 0; k < props.Length; k++){if (k == properties[k])){return true;}}return false;}
public PredictCategoryRequest parameters){return new PredictCategoryRequest(this, model, "predictCategory")}
public ImageBuilder Information(IImageBuilder imageBuilder){return ImageBuilder.List(imageBuilder.GetAllImages());}
public virtual void Delete(object o){if (!(o is NGramPhraseSource)){return;}NGramPhraseSource other = (NGramPhraseSource)o;o.Delete();}
public intArrayElementSet(int index, intArrayElement value) {for (int i = index; i < value.Length; i++){int o = value[i];if (o!= index){return o;}}return 0;}
public virtual NGit.Api.MatchBackfill startMatchBackfill(MatchBackfill startMatch){startMatch = startMatch;return startMatchBackfill(startMatch);}
public virtual IList<UpdateFile> GetUpdatedFiles(){return GetUpdatedFiles(true);}
public override ObjectId GetObjectId(string type, string data){return base.GetObjectId(type, data);}
public virtual java.nio.CharBuffer newCharBuffer(charSize){return newjava.nio.ReadOnlyCharBuffer(m_buf, 0, m_buf.Length, m_buf.Offset, m_buf.Length);}
public virtual SnapshotResponse Snapshot(SnapshotRequest request){var options = new InvokeOptions();options.RequestMarshaller = SnapshotRequestMarshaller.Instance;options.ResponseUnmarshaller = SnapshotResponseUnmarshaller.Instance;return Invoke<SnapshotResponse>(request, options);}
public virtual List<Record> Get(string field_1_name){return list.Get(field_1_name, List<Record>.Empty);}
public int get(object o){return set(o);}
public override bool Equals(Stemmer other){return stemmer == other.Stemmer;}
public virtual InstanceState Get(){return _instance.Get();}
public override void Serialize(Stream out1){out1.Write(GetAxisLabel(0).Name);out1.Write(GetAxisLabel(1).Name);out1.Write(GetAxisLabel(2).Name);out1.Write(GetAxisLabel(3).Name);}
public Reader(TermID termID, Stream stream){_termID = termID;_stream = stream;}
public virtual void backup(int count){if (count > 0){backingArray[offset + count] = buffer[offset + count];}}
public short GetShortValue(short[] ids){int n = forwardIds.Length;short s = 0;for (int i = 0; i < n; i++){if (i == forwardIds.Length){return s[i];}}return s;}
public resolver.A resolver must be provided.
public file system policy { get; private set; }
public virtual QueryDetail GetNamedQueryDetail(){return _namedQueries.Get(0);}
public void CreateBlankCell(ICell cell){HSSFWorkbookWorkbook = _cell.Workbook;HSSFWorkbook.Create(null, null, null);}
public virtual void PopMode(){popMode();}
public virtual string Get(int pid){return pid.ToString(CultureInfo.InvariantCulture);}
public virtual void AddAll(IIntervalSet other){foreach (IntervalSet in other){AddInterval(other);}}
public virtual DiffEntry.ChangeType GetChangeType(){return changeType;}
public virtual FlagSet GetFlags(){return flags;}
public void RemoveExFormatRecord(){ExFormatRecord rec = new ExFormatRecord();rec.Remove(field_1_index);}
public virtual string ToString(){return GetCanonicalName();}
public AbortMultipartUploadRequest { get; private set; }
public virtual NGit.Api.Application CreateApplication(){return this;}
public virtual ServicePermissions DescribeServicePermissions(){return servicePermissions;}
public virtual void put(E value){throw new System.NotImplementedException();}
public override void Update(E value){this._enclosing.Update(value);}
public virtual string ToString(){return GetCanonicalName();}
public virtual float[] GetArray(){return array;}
public virtual void Add(IText text){this._enclosing.Add(text);}
public override void ReadUnknown(Record record){if (_isHSSFRecord){_isHSSFRecord = false;_isHSSFErrorRecord = false;_isHSSFErrorRecord = false;_isHSSFErrorRecord = false;_isHSSFErrorRecord = false;}else{_isHSSFErrorRecord = false;_isHSSFErrorRecord = false;_isHSSFErrorRecord = _isHSSFErrorRecord;}_isHSSFErrorRecord = _isHSSFErrorRecord;_isHSSFErrorRecord = _isHSSFErrorRecord.Next;_isHSSFErrorRecord = _isHSSFErrorRecord.Next;_isHSSFErrorRecord = _isHSSFErrorRecord.Next;_isHSSFErrorRecord = _isHSSFErrorRecord.Next;_isHSSFErrorRecord = _isHSSFErrorRecord.Next;_isHSSFErrorRecord = _isHSSFErrorRecord.Next;_isHSSFErrorRecord = _isHSSFErrorRecord.Next;_isHSSF
public override bool AcceptedState(State state){return false;}
public string FooterKey { get; set; }
public PackConfig Construct(Config config){return this.Construct(config.PackConfig, config.PackConfigParent);}
public CellRangeAddress EvaluateCellRange(CellRangeAddress cellRangeAddress, int row, int column){return GetCellRangeAddress(cellRangeAddress, row, column);}
public virtual string GetOutputsString(){return GetOutputsString();}
public virtual NGit.Api.Branch CreateBranch(Ref branch){return branch;}
public override Progress Get(int id){return _secondaryProgress;}
public virtual void Initialize(){map = new Hashtable(default(MapClass.Entry<K, V>());}
public override void Convert(int v){if (v > 0){throw new System.ArgumentException("Bad number of values for a number of values for a number of values");}foreach (var e in v){if (e > 0){throw new System.ArgumentException("Bad number of values for a number of values for a number of values for a number of values for a number of values for a number of values for a number of values for a number of values for a number of values");}}
public virtual void writeChar(char c){throw new System.NotImplementedException();}
public override bool Equals(object o){if (o == this){return true;}return false;}
public void Write(SID x){_out.Write(x);}
public override int GetTokenType(string token){return token.GetTokenType();}
public override bool Equals(object o){if (o == this){return true;}return false;}
public virtual IrishLowerCaseFilter Set(){return _isIrishLowerCaseFilter;}
public override bool IsWhiteSpace(int b){return Bytes.Equals(a.GetStringUtf8(b)) && Bytes.Equals(a.getStringUtf8(b)) && Bytes.Equals(a.getStringUtf8(b)) && Bytes.Equals(a.getStringUtf8(b)) && Bytes.Equals(a.getStringUtf8(b)) && Bytes.Equals(a.getStringUtf8(b)) && Bytes.Equals(a.getStringUtf8(), "string")){return true}
public String ToString(){Formula re = new Formula();re.FillInBody(re.Formula);re.FormulaString = ToString();re.FillInBraces(re.Braces(re.Braces(re.Braces(re.Braces(re.Braces(re.Braces(re.Braces(re.Braces(re.Braces(re.Braces(re.Braces))));return re.FormulaString;}
public virtual void print(object obj){print(Sharpen.StringHelper.GetValueOf(obj, "print"));}
public override bool Equals(object o){if (o is StemmerPrefix){return base.Equals(o);}return false;}
public virtual List<string> GetAuthorizationList(string namespace){return list.GetAuthorizationList(namespace, null);}
public virtual string Normalize(string str){return Normalize(str.ToCharArray());}
public void DeleteVaultAccessPolicy(VaultAccessPolicy policy){_accessPolicy = policy;}
public ValueEval GetExpressionAt(int sourceRow, int sourceColumn){return GetExpressionAt(sourceRow, sourceColumn);}
public virtual void onRelease(){base.onRelease();}
public virtual int[] GetXAxisValues(int axis){return (x_axis_values == null)? (int)(((uint)x_axis_values) - 1).Value : (int)(((uint)x_axis_values) - 1).Value);}
public override bool IsSidInComponentRecord(SID in_component_records){return base.IsSidInComponentRecord(in_sid_in_component_records[0]);}
public virtual NGit.Api.Environment Update(Environment environment){return environment.Update();}
public virtual E next(){return this.nextEntry();}
public virtual string GetKey(int key){return key;}
public virtual gateways list(){return gateways;}
public EventBus(Properties properties){this.properties = properties;}
public virtual string GetStart(){return this.Start;}
public override TreeFilter Clone(){return this;}
public CFHeaderRecord CreateEmptyRecord(){return new CFHeaderRecord(this._enclosing);}
public credentials.Provider credentialsProvider = credentialsProvider;}
public java.util.Iterator<E> entries(){return entries.iterator(this);}
public override string ToString(){return string.Format("Term {0:X} with {1:X}", Term, TermCount);}
public Ole10Native Create(LabelFileCommand command, byte[] data){return (null)Create(command, data);}
public virtual SemanticContext.AndNode CreateAnd(IList<SemanticContext.Node> clauses){return (CurrentState == SemanticContext.And)this.Create(clauses);}
public NPOI.SS.UserModel.IDataSet CreateDataSet(List<IDataSet> dataSets){return CreateDataSet(dataSets, null);}
public virtual bool Supports(int variant){return variants.Contains(variant);}
public virtual double Evaluate(double value){return _ec. Evaluate(value, _ec._start, _ec._end);}
public FilterFactory Create(FilterConfig config){return (FilterFactory)Create(config, null, null, null);}
public virtual void AddShape(Shape shape){patriarch.AddShape(shape);}
public void WriteInt(int value){_out.WriteInt(value);_size += INT_SIZE_IN_BYTES;}
public virtual UpdateTableResponse UpdateTable(UpdateTableRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateTableRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateTableResponseUnmarshaller.Instance;return Invoke<UpdateTableResponse>(request, options);}
public string set_input_and_reason(){return input_and_reason;}
public void DeleteChannel(Channel channel){Delete(channel.GetHandle(), channel.flags);}
public void DeleteFileSystemPolicy(FileSystemPolicy fileSystemPolicy){Delete(fileSystemPolicy, fileSystemPolicy.DeleteOnExit);}
public virtual void Flush(int bInterval){currentDocCount = bInterval;endFlushFlag = bInterval;}
public bool ShowDiff{get; internal set; }
public virtual SimpleComparisonResult GetComparisonResult(SimpleComparisonResult simpleCompareResult){return _comparisonResult;}
public virtual int get_next_char(){return _buf[get_buf_index() + 1];}
public override byte ReadByte(){return delegate1.ReadByte();}
public virtual string toUTF8(java.nio.CharBuffer @is){return toUtf8(fromUtf8(backingArray)), copyOnWrite(backingArray, offset + _position, _order);}
public override float get(){return buf.getFloat();}
public override void Put(byte b){if (m_len >= m_buf.Length){Resize(m_len + 1);}m_buf[m_len++] = b;}
public virtual void Synchronize(Parser parser){m_parser = parser;}
public virtual void Optimize(ITree b){Optimize(b.head, b.tail, b.tail, b.tail, b.tail, b.tail, b.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c
public bool IsEmpty(){return false;}
public override byte[] GetBytes(){return base.GetBytes();}
public override void SetParameters(IParameters parameters){this._enclosing.SetParameters(parameters);}
public void reset(int start, int end){position = start;mark = end;}
public SheetName(SheetNameRecord sheetNameRecord){return sheetNameRecord.SheetName;}
public virtual byte[] Decode(byte[] bytes, int offset, int length){for (int i = offset; i < length; i++){byte b = Decode(bytes[i], 16);if (b!= null){int b1 = Decode(bytes, i + offset, length);int b2 = Decode(bytes, i + offset, length);int b3 = Decode(bytes, i + offset, length);for (int i = i + length; i < b3; i++){b3 = Decode(bytes, i + offset, length);}}return b3;}
public virtual IList<Model> GetModels(){return models;}
public virtual void Clear(){cache.Clear();}
public virtual void SetValue(string newValue){this.value = newValue;}
public virtual bool IsAtLeastOneNonConflictingAltset(Collection<Altset> collection){return anyAltsetInCollection(collection);}
public int valueAt(int index){return array[index];}
public virtual int GetCountsByTime(){return _counts;}
public NameXPtg for the given name and sheetRefIndex.
public virtual void DeleteFile(string name){DeleteFile(name, true);}
public virtual IList<CodeRepository> GetCodeRepositories(){return repositories;}
public virtual ParameterGroup CreateParameterGroup(IParameterGroupName name){return new ParameterGroup(name, null, null);}
public QualificationType[] GetQualificationTypes(){return QualificationType.GetList();}
public string GetText(IVocabulary vocabulary){return vocabulary.ToString(null, NumberStyles.Integer, vocabulary);}
public virtual void SetTag(string key, string value){m_tag = key;}
public executor(lexer_actions): base(lexer_actions){return new executor(this, lexer_actions);}
public virtual bool Equals(IntervalSet other){return _set!= null? Equals(this, other) : false;}
public virtual IList<CopyGrant> GetCopyGrants(){return Sharpen.Collections.UnmodifiableList(grants);}
public SoraniStemFilter(params object[] args){if (args.Length > 0){throw new System.ArgumentException("args are not allowed");}return new SoraniStemFilter(args);}
public virtual void Stop(){m_scheduler.Stop();}
public virtual int bufferSizeInMegabytes(int capacity){return _bufSizeInMegabytes(capacity);}
public void SetOffset(int offset){thumb.setOffset(offset);}
public override string ToString(){return base.ToString() + " " + name;}
public void SetCurrent(int index){m_position = index;}
public void append(E e){throw new System.NotImplementedException();}
public virtual NodeInfo GetNodeInfo(){return (NodeInfo)GetNode(this.nodeIndex);}
public virtual string GetKey(int key){return key;}
public string keyAt(int index){return keys[index];}
public virtual void Attach(TargetGroup[] targetGroups){foreach (TargetGroup targetGroup in targetGroups){Attach(targetGroup, null);}}
public GreekLowerCaseFilter Create(TokenStream tokenStream){return Create(tokenStream, 0, tokenStream.Length);}
public virtual void Add(E element){Set.Add(element);}
public virtual void DeletePhoneNumbers(List<string> phoneNumbers){DeletePhoneNumbers(phoneNumbers, 0);}
public QuerySet startAnd end = null; eturn this;}
public virtual int Evaluate(int arg0, int arg1, int arg2, bool? arg3, bool? arg4, bool? arg5, bool? arg6, bool? arg7, bool? arg8, bool? arg9, bool? arg10, bool? arg11, bool? arg12, bool? arg11, bool? arg12, bool? arg13, bool? arg13, bool? arg12, bool? arg13, bool? arg13, bool? arg13, bool? arg13, bool? arg14, bool? arg14, bool? arg15, bool? arg16, bool? arg16, bool?......................................................................................................................................................................................................................................
public virtual DeploymentConfig GetDeploymentConfig(){return deploymentConfig;}
public virtual IdentityCredentials GetIdentityCredentials(){return identityCredentials;}
public override bool Equals(object o){if (o == this){return true;}return false;}
public QueryFactory(QueryFactory queryFactory){this.queryFactory = queryFactory;}
public virtual PhoneNumberOrder CreatePhoneNumberOrder(PhoneNumberOrder other){return other;}
public suppression_attributes_update_account_address_pair(AccountAddress pair){return suppression_attributes_update_account_address_pair(pair.AccountAddress, pair.SuppressionAttributesUpdateAccountAddressPair);}
public void Write(SID x){_out.Write(x);}
public java.nio.charset.Charset getCharset(){return _charset;}
public virtual string GetQuery(){return "true";}
public bool IsHidden(SheetRecord sheet){return _sheetReference.IsHidden(sheet);}
public TableRowMerge(TableRow[] rows, IIndexRange range, IIndexRange other){return this.Merge(rows, other.Start, other.End);}
public virtual void Stop(){m_execution = false;}
public override double getValue(){return this.value as double.Value;}
public int limit_and_size (int limit_and_size){limit_and_size = limit_and_size;}
public virtual void ClearFlags(int c){Clear(c, 0, c.Length);}
public virtual void initialize(int capacity){check.0(0, capacity);base.initialize(capacity);}
public ClusterParameterGroupGroup(string name, List<string> args){return new ClusterParameterGroupGroup(name, args, 0, args.Length);}
public string FormatResponse(string Format){return Format(m_request, "PUT", "access_key_id=" + Format);}
public virtual byte[] Decode(byte[] bytes, 0, length); return Decode(bytes, 0, length);}
public void ReadFont(FontRecord fontRecord){_in.Read(fontRecord);}
public virtual DescribeFleetEventsResponse DescribeFleetEvents(DescribeFleetEventsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeFleetEventsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeFleetEventsResponseUnmarshaller.Instance;return Invoke<DescribeFleetEventsResponse>(request, options);}
public virtual void SetOldTree(ITree tree){old = tree.Clone();}
public virtual LoadBalancers DescribeLoadBalancers(){return loadBalancers;}
public string GetText(IVocabulary vocabulary){return vocabulary.ToString(null, NumberStyles.Integer, vocabulary);}
public virtual int position(){return offset();}
public virtual UpdateDeploymentStrategyResponse UpdateDeploymentStrategy(UpdateDeploymentStrategyResponse result){return UpdateDeploymentStrategy(result.DeploymentStrategy);}
public virtual void SendEmail(){_connection = null;}
public virtual AuditStreamConfiguration Update(AuditStreamConfiguration config){return config.Copy();}
public override void put(float value){buffer.put(value);}
public override void SeekToExactTerm(long term){term = term;}
public virtual void SwitchTo(IToken state){SwitchTo(state.GetLexicalState());}
public void SyncFacePictures(AsyncRequest request){Request.SetRequestMarshaller(RequestMarshaller.Instance);Request.SetResponseUnmarshaller(SyncFacePicturesResponseUnmarshaller.Instance);}
public virtual void Clear(){cache.Clear();}
public void DeleteAuthorizer(){_authorizer = null;}
public DeleteMessageBatchRequestEntry(){return new DeleteMessageBatchRequestEntry(Recipient);}
public virtual NGit.Storage.File.Record GetRecord(){return this._enclosing.GetRecord(this.name);}
public virtual StopJob Stop(){return Start(null, null, 0.1f, "Sentiment detection started.", "stop");}
public virtual UpdateGuardDutyDetectorResponse UpdateGuardDutyDetectorResponse(UpdateGuardDutyDetectorResponse updateGuardDutyDetectorResponse){return UpdateGuardDutyDetectorResponse(updateGuardDutyDetectorResponse);}
public string GetResource(){return _resource;}
public override string ToString(){return "ILock " + lock.GetHashCode().ToString("x") + " lock@" + lock.GetFile().GetName();}
public void SetApplicationName(string applicationName, string versionLabel){this.applicationName = applicationName;this.versionLabel = versionLabel;}
public override void put(int value){buffer.put(value);}
public RevFilter[] CreateRevFilters(ICollection<RevFilter> filters){return CreateRevFilters(filters, 0, filters.Count);}
public virtual DescribeDomainEndpointOptionsResponse DescribeDomainEndpointOptions(DescribeDomainEndpointOptionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDomainEndpointOptionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDomainEndpointOptionsResponseUnmarshaller.Instance;return Invoke<DescribeDomainEndpointOptionsResponse>(request, options);}
public override bool isEmpty(){return this._enclosing._size == 0;}
public virtual void DeleteDashboards(DashboardRecord record){DeleteDashboards(record.DashboardRecordId);}
public virtual java.nio.CharBuffer createCharBuffer(char c){object[] newElements = new char[c.Length];System.Array.Copy(c, 0, newElements, 0, c.Length);return newCharBuffer(this, 0, c.Length);}
public override Type RecordClass(int sid){return base.RecordClass(sid);}
public virtual string ToString(){return GetCanonicalName();}
public virtual RevFilter GetRevFilter(){return filter;}
public virtual void Complete(){this._enclosing.Finish();}
public virtual DescribeCacheClustersResponse DescribeCacheClusters(DescribeCacheClustersRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeCacheClustersRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeCacheClustersResponseUnmarshaller.Instance;return Invoke<DescribeCacheClustersResponse>(request, options);}
public virtual void SetBootstrapScriptPath(string path){this.m_bootstrapScriptPath = path;this.m_listOfBootstrapScriptArguments = list(string.Format(JGit.Extensions.ListValuesOf(m_bootstrapScriptArguments), "path", path));this.m_initialized = true;this.m_compiledScript = null;this.m_compiledScript = null;this.m_compiledScript = null;}
public void SetRawData(Record s){this.s = s;}
public java.util.regex.Matcher matcher(object input){return new java.util.regex.Matcher(input);}
public virtual RequestValidator Update(Request validator){return validator;}
public virtual Media GetMedia(){return media;}
public virtual E remove(E @object){return list.remove(@object);}
public virtual void write(string @string){write0(System.Environment.NewLine);}
public virtual FileInfo GetFolderInformation(){return folderInformation;}
public virtual Token Create(Type type, string text){return new Token(type, text);}
public virtual NGit.Api.Reset AddPath(string path){return paths.AddItem(path);}
public FilterMatcherMatcher(ICharStream input){return new FilterMatcherMatcher(m_luceneMatchVersion, input);}
public virtual void StartPullAnimation(){currentPullAnimation = null;}
public virtual InstanceLifecycleConfig Update(InstanceLifecycleConfig instance){return appInstance.UpdateInstanceLifecycleConfig(instance);}
public virtual int length(){return _string.Length();}
public virtual void Evaluate(IToken token){_token = token;}
public virtual PermissionsCollection GetPermissions(DataSet name, List<Permission> permissions){return PermissionsCollection.CreatePermissions(name, permissions);}
public int next_char(char pos){return index_1 + (pos & MASK_CHAR_MASK) - 1;}
public S3ObjectStorage(File s3FileStorageConfig){return new S3ObjectStorage(s3FileStorageConfig, s3FileStorageConfig.UsePathPrefix, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3FileKeyDirectory, s3File
public virtual void append(E e){throw new System.NotImplementedException();}
public virtual int Precedence(int pos){if (pos < start){return start;}return -1;}
public virtual TransitGateway Create(GatewayConfiguration config){return (transitGateway == null)? null : new TransitGateway(config);}
public virtual float GetEpsilon(){return _epsilon;}
public ESCHERRecords decode(byte[]){return null;}
public virtual UIPanel UI(HumanTask task): base(){return new UIPanelUI(this, task);}
public override string ToString(){return "Term Weights:";}
public virtual void RejectAssignment(string name){RejectAssignment(name, null);}
public virtual ICollection<K> GetKeys(){return backingMap.Keys.Keys;}
public virtual DeleteTableResponse DeleteTable(DeleteTableRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteTableRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteTableResponseUnmarshaller.Instance;return Invoke<DeleteTableResponse>(request, options);}
public virtual void append(E value){throw new System.NotImplementedException();}
public recommender configurations { get; private set; }
public virtual void DeregisterImage(){_registry.DeregisterImage(this.GetReference());}
public override bool IsInstance(object o){return o is IrishStemmer;}
public SeriesListRecordReader(StreamReader in1){return new SeriesListRecordReader(in1);}
public virtual E next(){return this.nextEntry();}
public virtual string lower(int key){return lower(key, 0);}
public virtual RouteResponse Create(RouteRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateRouteRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateRouteResponseUnmarshaller.Instance;return Invoke<RouteResponse>(request, options);}
public void reset(){current = null;}
public virtual bool IsAutodetectEnabled(){return AutodetectEnabled;}
public override void put(int v){buffer.put(v);}
public DhcpOptions Associate(DhcpOptions options){return options;}
public virtual int GetBegin(){return begin;}
public virtual ImportJob CreateImportJob(ImportJob importJob){return importJob;}
public virtual Comment CreateComment(){return null;}
public virtual NGit.Api.DiffCommand AddFilepattern(string filepattern){return this;}
public override FileMode GetOldFileMode(){return oldFileMode;}
public virtual void SetInput(TextReader input){this.m_input = input;}
public virtual void UpdateContact(Contact contact){this.Contact = contact;}
public bool Equals(HSSFRichTextString str){if (str.HSSFRichTextString!= null){if (str.HSSFRichTextString.BOMTYPE.Equals(HSSFRichTextString.BOMTYPE)){return false;}return true;}
public virtual void Stop(){Sharpen.Tasks.StopAllParallelTasks(taskID);}
public DiffOptions SetDiffOptions(){diffOptions = new DiffOptions();}
public virtual void SetObjectId(ObjectId id){field_1_objectId = id;}
public override long Length(){return _size;}
public void Update(BrainCell cell){_evaluator.Update(cell);}
public void connect(){delegate1.connect();}
public virtual bool contains(object o){if (!(o is java.util.List<E>)){return false;}java.util.List<E> e = (java.util.List<E>)o;return true;}
public virtual void Approve(Assignment assignment){Approve(assignment.Right, assignment.Left);}
public virtual List<TimeLine> GetTimeLinesForPhoto(Photo photo){return GetTimeLinesForPhotoInternal(photo.Id);}
public virtual AssociatePhoneNumberResponse AssociatePhoneNumber(AssociatePhoneNumberRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociatePhoneNumberRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociatePhoneNumberResponseUnmarshaller.Instance;return Invoke<AssociatePhoneNumberResponse>(request, options);}
public sending options { get; internal set; }
public virtual CancelDomainTransferRequest(){return new CancelDomainTransferRequest(this, domain, 'domain', 'cancel');}
public override FreeRefFunction GetFreeRefFunction(String name){return null;}
public virtual RecognizeResponse Recognize(RecognizeResponse recognize){RecognizeResponse _recognize = recognize;return Recognize(null, _recognize);}
public override Array<BlankRecord> Convert(Record record){return null;}
public virtual string ToString(){return symbol.Name;}
public override MergeStrategy GetMergeStrategy(string name){return this.strategies[name];}
public override double Evaluate(double value){return base.Evaluate(value);}
public virtual ICollection<SubnetGroup> GetSubnetGroups(Cluster cluster){return internal.GetSubnetGroups(cluster);}
public virtual Filter GetBeforeFilter(DateTime date){return GetBeforeFilter(date);}
public override object Decode(byte b){return this.Decode(b, 0, b.Length);}
public override TreeFilter Clone(){return this;}
public virtual void Start(){start = true;}
public virtual IList<SourceRegion> GetSourceRegions(){return sourceRegionList;}
public virtual void Set(T value){_value = value;}
public GetVaultNotificationsRequest(): base(){return new GetVaultNotificationsRequest(new GetVaultNotificationsRequestParams());}
public virtual float get(int row, int column){return get(row, column);}
public virtual UpdateClusterResponse UpdateCluster(UpdateClusterRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateClusterRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateClusterResponseUnmarshaller.Instance;return Invoke<UpdateClusterResponse>(request, options);}
public virtual string GetSkipDescription(){return skipDescription;}
public override void readExactlyInt32(){throw new System.NotImplementedException();}
public int absolute(int row, int column){return absolute(row, column);}
public virtual MethodDefinition CreateOrUpdate(MethodDefinition methodDefinition){var _this = this;_methodDefinition = methodDefinition;return _this;}
public override IndonesianStemFilterFactory CreateInstance(IndonesianStemFilterFactory factory){return new IndonesianStemFilterFactory(this);}
public virtual void SetUp(void){builder = new AutoValue_CompletionBuilder(this);}
public virtual UpdateGatewayResponse UpdateGateway(UpdateGatewayResponse gatewayResponse){return UpdateGateway(gatewayResponse.GatewayId);}
public ConfirmProductInstanceRequest(string productCode, string instanceId){_productCode = productCode;_instanceId = instanceId;return ConfirmProductInstanceRequest(productCode, instanceId);}
public virtual long Decode(long value){return BitConverter.Int64BitsToDouble(value);}
public MetricData Get(string appName){return currentProduct.GetMetrics(appName);}
public override void SetObjectId(ObjectId note){this.note = note;}
public override LabelSST Serialize(byte[] b){return Serialize(b, 0, b.Length);}
public Sheet GetExternalSheetAt(int index){return _externalSheets[index];}
public SynonymFilterFactory(params object[] args){this.args = args;}
public TreeFilter(ICollection<string> strings){return new OrTreeFilter(strings);}
public virtual LogPattern CreateLogPattern(string message){return null;}
public virtual zone IDs{get; private set;}
public virtual void setValueAt(int index, V value){object[] newValues = new object[values.Length + 1];System.Array.Copy(values, 0, newValues, 0, values.Length);}
public override bool Equals(object o){return this._enclosing.Equals(o);}
public Route(Route route){_route = route;}
public override bool ToBoolean(string value){return bool.Parse(value);}
public virtual void AddClass(Type class){m_classmap.Add(class);}
public virtual ICollection<Account> GetAccounts(string source){return source.GetAccounts(false);}
public override ObjectId CreateObjectId(int type, int data, int offset, int length){return new ObjectId(data, offset, length);}
public void CreateColumnInfoRecord(String cfname, int index, String name_1){CreateIndexRecord(cfname, index, name_1);}
public virtual int GetBytesUsed(){return terminal.GetBytesUsed();}
public virtual Token Create(int start, int end){return Create(start, end);}
public void FreeBefore(long pos){if (pos < startOfFile){Resize(pos);pos = startOfFile;}}
public override TermInfo GetTermInfo(string term){return TermInfo.GetTermInfo(term);}
public virtual UpdateQualificationTypeResponse UpdateQualificationType(UpdateQualificationTypeResponse result){return UpdateQualificationType(result.QualificationType)? UpdateQualificationTypeResponse(result.QualificationType) : UpdateQualificationTypeResponse(null, null);}
public GermanStemFilter(TokenStream stream){return new GermanStemFilter(stream);}
public virtual int available(){return _buf.position();}
public override void DeleteInterface(object o){base.DeleteInterface(o);}
public int rowAndCellOffsets = null;return _rowAndCellOffsets;}
public virtual ICollection<Subsection> GetSubsections(Section section){return GetSubsections(section.Name, section.Value);}
public virtual NGit.Api.GameServer GetGameServer(){return GetGameServer(null);}
public virtual void readLine(){System.Console.Error.WriteLine("Line: ").Append(getLine());}
public virtual void clear(){map.clear();}
public virtual ActivityType GetActivityType(string activityType){return _activities[activityType];}
public virtual IList<DashboardVersion> GetVersions(){return dashboardVersions;}
public virtual bool isEmpty(){return map.isEmpty();}
public virtual DFAState Define(DFAState state){return state;}
public Sheet GetSheetAt(int index){return _sheetIndex2object[index];}
public virtual void Update(UpdateInfo info){this._enclosing.Update(info.GetDoc());}
public virtual string ToString(){return GetCanonicalName();}
public virtual Query parse(ICharSequence text, int start, int end){return parse_fragment(text, start, end);}
public virtual RouteResponse RouteResponse(RouteResponse routeResponse){return null;}
public virtual void RevokeIP(string address){throw new System.NotSupportedException("IP address is not supported.");}
public ThreatIntelSet(AnyObjectId id){return _threatIntelSet(id);}
public Loa Info(){return Information;}
public virtual int Add(int delta){return c.Add(delta);}
public void DeleteOptions(IDhcpOptions options){DeleteOptions(options);}
public virtual UpdateFleetResponse UpdateFleet(UpdateFleetRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateFleetRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateFleetResponseUnmarshaller.Instance;return Invoke<UpdateFleetResponse>(request, options);}
public virtual char[] set_reference_to_char_array(char[] array_1){return array_1;}
public virtual UpdateRouteResponse UpdateRoute(UpdateRouteRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateRouteRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateRouteResponseUnmarshaller.Instance;return Invoke<UpdateRouteResponse>(request, options);}
public virtual DescribeGuardDutyDetectorResponse DescribeGuardDutyDetector(DescribeGuardDutyDetectorRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeGuardDutyDetectorRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeGuardDutyDetectorResponseUnmarshaller.Instance;return Invoke<DescribeGuardDutyDetectorResponse>(request, options);}
public virtual GetPhotosByMd5sRequest GetPhotosByMd5sRequest(GetPhotosByMd5sRequest request){return GetPhotosByUrl(request);}
public override void SetBytesToRef(BytesRef value){this.value = value;}
public AVSRegister(AVSDevice device){return AVS;}
public int get(int index){return elements[index].get(this);}
public virtual void DeleteDBSubnetGroup(DBSubnetGroupName dbSubnetGroupName){Delete(dbSubnetGroupName, dbSubnetGroupName);}
public virtual void SetFragmentSize(int size){m_fragmentSize = size;}
public virtual string GetRomanization(string str){return GetResourceString(str, 0);}
public virtual void ExitStandby(int code){Exit(code);}
public override long Length(){return _size;}
public virtual NGit.Diff.Info GetDiff(){return GetDiff(null);}
public virtual DescribeIntegrationsResponse DescribeIntegrations(){return DescribeIntegrations(null, null);}
public virtual SshSessionFactory GetSshSessionFactory(){return _sessionFactory;}
public string SetUserNameAndPolicyName(string newUserName, string newPolicy){_userName = newUserName;_policyName = newPolicy;}
public virtual void copyTo(int offset, char[] buffer, int offset, int length) throws java.nio.IOException{copyTo(buffer, offset, length);}
public override void Serialize(byte[] b, int offset, int byteCount){SerializeInt32(b, offset + _position, byteCount);}
public virtual void ReadEndOfView(EditText start){m_beginIndex = start.LineNumber;m_endIndex = start.EndOfView;}
public virtual void Reboots(){base.Reboots();}
public virtual describe_table(){return table_1_rollover;}
public override void putShort(short value){throw new System.NotImplementedException();}
public override int WriteShort(){return delegate1.WriteShort();}
public virtual CreateUserResponse CreateUser(CreateUserRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateUserRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateUserResponseUnmarshaller.Instance;return Invoke<CreateUserResponse>(request, options);}
public virtual void grow(int count){for (int i = 0; i < count; i++){grow(count);}}
public virtual void SetBufferToRead(int b){m_buf = new byte[b];}
public virtual bool isEmpty(){return list.isEmpty();}
public void Associate(string address, IEndpointInfo endpoint){this.endpoint = endpoint;}
public list(CredentialItem credentialItem){return list(null, credentialItem.GetCredentialItems(credentialItem));}
public virtual bool Equals(object o){if (o is android.graphics.Point){return true;}android.graphics.Point p = android.graphics.Point.getInstance();if (p == null){return false;}return true;}
public BatchInvalidationOptions SetBatchInvalidationOptions(BatchInvalidationOptions options){this.options = options;}
public virtual void EndOfRule(IToken token){this.Rule = token;this.EndRulePointer = token.EndRulePointer;}
public override WAH8DocIdSet Build(FieldInfos field){if (field.HasValue){AddValue(field.Value);}return base.Build(field.Options);}
public void SetCurrent(int position){m_index = position;}
public void SetChannel(int channel){this.eat = channel;this.channel = channel;}
public virtual DescribeDBSecurityGroupsResponse DescribeDBSecurityGroups(DescribeDBSecurityGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDBSecurityGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDBSecurityGroupsResponseUnmarshaller.Instance;return Invoke<DescribeDBSecurityGroupsResponse>(request, options);}
public virtual void Start(Fleet fleet){m_fleet = fleet;}
public virtual DescribeSpotInstanceResponse DescribeSpotInstance(DescribeSpotInstanceRequest request){return DescribeSpotInstance(request);}
public virtual int GetRelativeDecimalExponent(){return _exponent;}
public override String ToString(){return Image;}
public DescribeMetricFiltersRequest(string logGroupName){_logGroupName = logGroupName;}
public Name(PgtName pgt){return pgt.CreateName(pgt);}
public java.util.Comparator<V> getComparer(){return _comparer;}
public virtual UploadMultiPartFileResponse UploadMultiPartFile(File file){return UploadMultiPartFile(file, "application/x-sharpen-shared");}
public override TokenStream CreateTokenStream(TokenStream tokenStream){return CreateTokenOffsetTokenFilter(tokenStream, 0);}
public java.util.Iterator<E> innerIterator(E value){this._innerIterator = value;}
public override void SeekToExactTerm(long term){term = term;}
public virtual void putDouble(double value){buffer.putDouble(value);}
public BinaryFilter Create(IList<Filter> filters){return Create(filters, 0, filters.Count);}
public override string ToString(){return this.GetValueOrDefault();}
public virtual bool charArraysCompare(char[] array, int start, int end){char[] isComparer = (char[])array.charAt(start);if (isComparer!= null){for (int i = start; i < isComparer && isComparer[i].charAt(start)){if (isComparer[i].charAt(start)){return true;}}return false;}
public override string ToString(){return base.ToString() + " " + name;}
public virtual void DeleteBatch(DeleteBatchRequest req){_batch = req.Batch;_batch = req.Request;}
public virtual InstanceProfileAssociation DescribeInstanceProfile(){return InstanceProfileAssociation.DescribeInstanceProfile(this);}
public virtual Build Update(Build build){return build.Update();}
public static HindiStemFilter Create(TokenStream input){return new HindiStemFilter(input);}
public virtual void Start(){DBCluster db = NGit.Util.CreateCluster(this.ConnectionString);db.Start();}
public keypath (string certificatePath){_serverCertificatePath = certificatePath;}
public virtual E remove(K key){remove(key, true);return this._enclosing.remove(key, true);}
public virtual void DeleteDomain(){domain = null;}
public override string ToString(){return CIT_FORMAT;}
public override void Put(long b){if (m_len >= m_buf.Length){Resize(m_len + 1);}m_len += 1;}
public virtual float get_avg(){return get_avg(_values, 0, _values.Length);}
public override string ToString(){return base.ToString() + " " + this.luceneMatchVersion;}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(this.GetType().Name);out1.WriteByte(_order);}
public virtual void Update(StackStackInstance[] instances){foreach (StackInstance stackInstance in instances){Update(stackInstance[0]);}}
public virtual void append(E e){throw new System.NotImplementedException();}
public SheetValue Get(int row, int column){return GetRelativeValue(row, column);}
public virtual NGit.Api.WorkerBlock CreateWorkerBlock(){return new NGit.Api.WorkerBlock(this);}
public virtual int GetDocStart(int doc){return doc - 1;}
public virtual int GetPositionIncrementGap(string field){return _le.GetPositionIncrementGap(field);}
public void DeletePhotoStore(UserToken token){DeleteUserMedia(token.UserId, token.GetFile());}
public virtual DescribeJobFlowResponse DescribeJobFlow(DescribeJobFlowRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeJobFlowRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeJobFlowResponseUnmarshaller.Instance;return Invoke<DescribeJobFlowResponse>(request, options);}
public virtual string ToString(){return ToUniversalString(this);}
public virtual void RemoveFields(string name){foreach (FieldInfo fieldInfo in _fields){RemoveField(name, null);}}
public void SetFormatFlags(int flags){formatFlags = flags;}
public virtual int previous(int index){return list.previous(index);}
public virtual void Disables(IReferenceLogMessage message){_referenceLogMessage = message;}
public virtual stash drop command{return new stash_drop_command(this);}
public virtual string SetDestinationPrefix(string destinationPrefix){this.destinationPrefix = destinationPrefix;}
public void end(){pos = endOfFile;}
public virtual void AttachVolume(Volume volume){this.attachVolume(volume);}
public new DelimitedPayloadTokenFilter(TokenStream tokenStream){return new DelimitedPayloadTokenFilter(tokenStream);}
public virtual void visibilityChanged(object message_1){message_1.visibilityChanged(message_1);}
public CodepointCountFilterFactory(IDictionary<string, List<int>> parameters){return new CodepointCountFilterFactory(parameters);}
public SimpleDate Create(DateTime date){return Create(date.Year, date.Month, date.Day, date.Year, date.Year, date.Year, date.Day, date.Year, date.IsFullYear, date.Year, date.Year, date.Year, date.Year, date.Year, date.Year, date.Year, date.Year, date.Year, date.Year, date.Year, date.Year, date.Year, date.Year, date.Year, date.Year, date.Year, date.Month, date.Day, date.Year, date.Year, date.Day, date.Year, date.Year, date.Day, date.Year, date.Month, date.Day, date.Year, date.Year, date.Day, date.Year, date.Month, date.Day, date.Year, date.Year, date.Year, date.Year, date.Year, date.Year, date.Month, date.Day, date.Year, date.Month, date.Day, date.Year, date.Day, date.Year, date.Year, date.Day, date.Year, date
public virtual DescribeDomainResponse DescribeDomain(DescribeDomainRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDomainRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDomainResponseUnmarshaller.Instance;return Invoke<DescribeDomainResponse>(request, options);}
public override int Decode(int length){return _in.Decode(length);}
public override OutputStream GetRawStream(){return raw.GetRawStream();}
public MoPenDoRecognizeRequest(string protocol, string method){return (MoPenDoRecognizeRequest)Create(protocol, method, "GET");}
public virtual UpdateChimeVoiceConnectorGroupResponse UpdateChimeVoiceConnectorGroup(UpdateChimeVoiceConnectorGroupResponse response){return UpdateChimeVoiceConnectorGroupResponse(response);}
public virtual void RemoveEditTime(){EditTime = NO_EDIT_TIME;}
public void SetTopicAttributes(SetTopicAttributesRequest request){_request = request;}
public override void Serialize(StreamOutput stream){stream.Write(Serialize(this));}
public virtual bool HasConflictingTerminatingPrediction(Set<string> configs){return false;}
public override void Fill(byte[] b){Fill(b, 0, b.Length);}
public static SupBookRecord Create(int size){return new SupBookRecord(size);}
public virtual DeviceInformation DeviceInformation { get; private set; }
public ObjRecord Create(RecordInputStream in1){return Create(in1, in1.GetIndex(), in1.GetLength());}
public int keyAt(int key){return keys[key];}
public override void SetReadingFormFilter(IReadingFormFilter factory){base.SetReadingFormFilter(factory);}
public override Object Clone(){return this;}
public NewKeywordRepeatFilter(ICharStream input){this.m_input = input;this.m_precedence = 0;this.m_limit = 0;this.m_precedence = 0;this.m_limitOffset = 0;this.m_precedence = 0;this.m_postcedence = 0;this.m_precedence = 0;this.m_precedence = 0;this.m_postcedence = 0;}
public virtual Limits Info(){return Limits;}
public void SetSize(int size){_size = size;}
public virtual string ToString(){return GetCanonicalName();}
public Domain { get; private set; }
public virtual string GetBoundSheetName(){return GetBoundSheetName(null);}
public virtual void reset(){previous = null;}
public virtual InstanceHealthInfo GetInstanceHealthInfo(){return InstanceHealthInfo.GetInstanceHealthInfo();}
public override string ToString(){return "no-merge-policy";}
public virtual PlayerSession CreatePlayerSession(PlayerSession other){return other;}
public override void write(float b){throw new System.NotImplementedException();}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_margin);}
public AlibabaCloudCredentials credentials(){return _credentials;}
public virtual IParseTree Pattern(string str){return null;}
public static NGit.Transport.OpenSshConfig GetInstance(string userHomeDirectory){return new NGit.Transport.OpenSshConfig(userHomeDirectory);}
public override TurkishLowerCaseFilterFactory Create(TurkishLowerCaseFilterConfig config){return Create(config.GetFilterFactory());}
public virtual IList<Link> GetLinks(){return links;}
public FtCfSubRecord Clone(){return (FtCfSubRecord)this.Clone();}
public virtual I18n GetMessage(string key){return GetMessage(key, null, null, null);}
public virtual void PromptForPassword(string password){PasswordPrompter.Prompt(user, password);}
public virtual void ExportAPI(){Api = new Api(this);}
public virtual AbbreviatedObjectId Create(AnyObjectId id){return new AbbreviatedObjectId(id);}
public ObjectWalk(ObjectWalk obj){return obj;}
public virtual CreateTopicResponse CreateTopic(CreateTopicRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateTopicRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateTopicResponseUnmarshaller.Instance;return Invoke<CreateTopicResponse>(request, options);}
public virtual DateTimeRoundTrip GetDate(DateTime start, DateTime end){return GetDate(start, end);}
public virtual void ReadFully(char[] buf, int length){_in.ReadFully(buf, 0, length);}
public virtual void append(string value){throw new System.NotImplementedException();}
public FilterInstance(): base(){this.type = typeof(HunspellStemFilter);}
public void DrawRoundedRectangle(IRectangle rectangle){DrawRoundedRectangle(rectangle);}
public virtual NGit.Api.UserModel CreateInstance(string name){this.name = name;}
public Endpoint CreateRealtimeEndpoint(){return this;}
public virtual string ToDo(){return GetHashCode().ToString();}
public virtual void Delete(NotebookInstance instance){Delete(instance.GetObjectId());}
public void ResetLexicalState(LexerState other){lexical = other;}
public GetTopicAttributesRequest(string arn){_arn = arn;}
public void SetUserAndPolicyDocument(string user, string policy){_user = user;_policy = policy;}
public override byte[] GetBytes(){return file.GetBytes();}
public virtual int GetResultTreeId(){return treeId;}
public virtual IList<string> GetParameters(IList<string> positionalValues){return internal.ListParameters(keywordValues);}
public void PutShort(short value){if (value >= 0){throw new System.IO.IOException("short value out of range");}Array.Copy(m_buf, _ReadIndex + _ReadIndex, m_buf, _ReadIndex + _WriteIndex, value);_ReadIndex += _ReadIndex;_ReadIndex += _ReadIndex;}
public FontDetails(FontName fontName, FontMetrics fontMetrics){return new FontDetails(fontName, fontMetrics);}
public string GetCanonicalName(){return resourceCanonicalName;}
public MoPenSendMqttMessageRequest(Properties messageParameters){_messageParameters = messageParameters;}
public VectorType IsCopyOf(byte[] b){return _array.IsCopyOf(b);}
public virtual void Modify(string newSubscription){_eventSubscription = newSubscription;}
public virtual void RemoveRefSpec(RefSpec spec){refs.Remove(spec.GetRef());}
public virtual void printDouble(double v){if (v == null){throw new ArgumentNullException("v");}if (v == double.NaN){printDouble(v);}else{printDouble(v);}}
public virtual port states list(){return port_states;}
public virtual CreateDiskSnapshotResponse CreateDiskSnapshot(CreateDiskSnapshotResponse create_disk_snapshot_response){return CreateDiskSnapshotResponseCreate(create_disk_snapshot_response_create);}
public override bool isDirect(){return true;}
public virtual void Update(NGit.IdentityPool pool){this.pool = pool;}
public virtual void append(char c){append0(c);}
public string GetSecurityDescriptor(int securityDescriptorIndex){return securityDescriptor.GetSecurityDescriptorName();}
public virtual BundleTypesCollection GetBundleTypes(){return GetAnyBundleTypes();}
public virtual void DeleteScheduledAction(ScheduledAction action){_actions.Remove(action);}
public LinearRegressionFunction(double f){this.f = f;}
public void StopFleet(Fleet fleet){currentFleet = fleet;}
public virtual string GetDescription(){return GetErrorElement().GetDescription();}
public override void Decode(int n){Decode(n, m_buf, _stndStart, _stndLength);}
public virtual DescribeJobFlowOptions Set{ List<DescribeJobFlowOptions> (List<DescribeJobFlowOptions> args){_args = args;}
public SheetCollectedListener(SheetCollectedListener listener){this.listener = listener;}
public virtual InstanceStatus Get(string instance){return instance;}
public virtual void SetElements(IList<E> elements){this._enclosing.SetElements(elements);}
public void close(){lock (this._enclosing){if (this.m_raisedBy == null){throw new System.IO.IOException("Channel is already closed");}}this.m_raisedBy = null;this.m_enclosing.close();}}
public virtual void ImportAPI(string @namespace){imp = importAPI(string.Format(CultureInfo.InvariantCulture, "@namespace", @namespace));}
public override void write(char b){write((char)b);}
public void SetStopWords(int stop_words){m_stop_words = stop_words;}
public virtual void CopyOldConfig(AT_Config old){CopyOldConfig(old);}}
public string format(int index){return format(index);}
public int maximumNumberOfMessagesToLog = 15;{value = true;}
public virtual IList<CreditCardOrder> GetOrders(){return new List<CreditCardOrder> { GetCreditCardOrders() };}
public virtual void DeleteUserByUsername(string username){if (username == null){throw new ArgumentNullException("username");}object.Copy(userName, 0, _userName, 0, _userName.Length);userName[_userName.Length] = null;}
public virtual E next(){return list.next();}
public SubscriptionRequest ( ){return this;}
public ChangeMessageVisibilityRequest(QueueUrl queueUrl, ReceiptHandle visibilityTimeout, ChangeMessageVisibilityTimeout options){var request = new ChangeMessageVisibilityRequest();request.QueueUrl = queueUrl;request.VisibilityTimeout = visibilityTimeout;request.SetOptions(options);return request;}
public virtual DescribePlacementGroupsResponse DescribePlacementGroups(DescribePlacementGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribePlacementGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribePlacementGroupsResponseUnmarshaller.Instance;return Invoke<DescribePlacementGroupsResponse>(request, options);}
public override string ToHex(byte[] b){return ToHex(b, 0, b.Length, "x") + " " + ToHex(b, "x") + " " + ToHex(b, "x") + " " + ToHex(b, "x") + " " + ToHex(b + "p") + " " + ToHex(b + "q") + " " + ToHex(b + "r") + " " + ToHex(b + "p") + " " + ToHex(b + "x") + "X") + "Y" + ToHex(b + "X") + "Z" + ToHex(b + "Y") + " " + ToHex(b + "X") + " " + ToHex(b + "p") + " " + ToHex(b + "p") + " " + ToHex(b + "p") + " " + ToHex(b + "p") + " " + ToHex(b + "y") + "X") + "Z" + ToHex(b
public virtual java.util.Iterator<E> iterator(object o){return list.iterator(o);}
public virtual CharsRef Clone(){return (CharsRef)CloneViaReserialise();}
public virtual IList<Link> GetLinks(){return internal.GetLinks(false);}
public override byte ReadByte(){return delegate1.ReadByte();}
public int GetExternalSheetIndex(String sheetName){int index = _externalSheets.Get(sheetName);return index;}
public virtual void SetMarkLimit(int limit){m_markLimit = limit;}
public virtual bool Equals(LexerCustomAction other){return false;}
public override java.nio.CharBuffer copy(){return copy(this);}
public virtual Term GetNext(){return null;}
public List<IdentityPolicy> GetIdentityPolicies(){return identityPolicies;}
public virtual TokenStream filters(TokenStream input){return new TokenStreamNumeric(m_luceneMatchVersion, input);}
public virtual ExplainFor frequency_and_norm explain(int freq, float freq2){return explain(freq, freq2);}
public virtual char[] CreateCharArrayWriter(TextWriter textWriter){return new char[m_buf.Length];}
public void SetUnknownFormulaData(FormulaData data){_unknown_fprs = data;}
public virtual void SetPauseTimerParam(string @string){m_pauseTimerParam = @string;}
public Api CreateAPI(){return CreateAPI(null, null);}
public virtual void UpdateAddressList(AddressList list){UpdateAddressList(list.Addresses, list.Addresses.Count);}
public DhcpOptions Describe(int id){return Options.Get(id);}
public virtual IList<BlockDesc> GetSnapshots(){return blockDesc.GetAllBlocks();}
public virtual MailboxPermissions GetMailboxPermissions(){return mailboxPermissions;}
public virtual MappingCharacterFilter NewMappingCharacterFilter(ICharStream input){return new MappingCharacterFilter(this, input);}
public GetThumbnails operation. Returns the GetThumbnails operation.
public NumericConstraint(int value){return _constraint = Value;}
public bool Equals(Query otherQuery){return query.Equals(otherQuery);}
public java.net.URI resolve(string path){return resolve(path, this.protocol, this.fragment, path, this.fragmentLen);}
public virtual ParameterGroup[] GetParameterGroups(){return retrieveParameterGroups(null, null);}
public virtual DescribeGuardDutyFindingStatisticsResponse DescribeGuardDutyFindingStatistics(DescribeGuardDutyFindingStatisticsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeGuardDutyFindingStatisticsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeGuardDutyFindingStatisticsResponseUnmarshaller.Instance;return Invoke<DescribeGuardDutyFindingStatisticsResponse>(request, options);}
public virtual ExportTaskDetail GetExportTaskDetail(){return ExportTaskDetail.List(this);}
public override java.nio.ShortBuffer get(){return this.get(java.nio.ShortBuffer.class.getName(), java.nio.ByteBuffer.MIN_VALUE,java.nio.ByteBuffer.MAX_VALUE);}
public void RemoveSlideCountProperty(){_slides.RemoveProperty(index);}
public IdentityProviderConfiguration GetIdentityProviderConfiguration(){return null;}
public virtual void SetCodePoint(int codePoint){codePoint = codePoint;}
public virtual void SetJobFlowExecutionStatusDetail(){_jobFlowExecutionStatusDetail = GetBoolean(JobFlowAttributes.DETAIL_QUEUE_STOP_CODE);}
public TrainingJob(PipelineConfig config){this.config = config;}
public virtual void MethodResponse(int status, string msg){_status = status;}
public string GetExternalNameAt(int index){return _externalNames[index];}
public virtual void stripTags(java.lang.StringBuilder sb){stripTags(sb.toString(), true);sb.append(">");}
public static StreamingURL CreateImageStreamingUrl(ImageStreamingUrlBuilder builder){return new StreamingURL(builder.CreateImageStreamingUrl(imageStream)){format = "svg" };}
public virtual string ToString(){return GetCanonicalName();}
public virtual OutputStream getOutputStream(){return new NullOutputStream(this);}
public override void Read(Record record){try{InputStream in1 = _in1.Read(this, _rec._in, _rec._inSize);int nFields = _in1.ReadUShort();field_2_data = _in1.ReadUShort();field_3_options = _in1.ReadUShort();_in1.ReadByte();_in1.ReadByte();_in1.ReadByte();_in1.ReadByte();_in1.ReadByte();_in1.ReadByte();_in1.Read(this, _rec._in1, _rec._inSize);_in1.ReadByte();}catch (IOException ex){throw new RuntimeException(ex.ToString(), ex);}}
public virtual FleetInfo GetFleetInfo(){return fleetInfo;}
public override bool IsInstance(object o){return o is DanishStemmer;}
public virtual NGit.Api.DiffCommand Create(DiffCommand command){return new NGit.Api.DiffCommand(command, this);}
public SingleViableAltValue GetSingleValue(IList<Altset> altsets){return GetSingleValue(altsets, 0);}
public NPOI.SS.UserModel.IRequest Marshall(HSSFRequest request){return new HSSFRequest(request);}
public void append(java.lang.StringBuffer buffer){append0(buffer.ToString());}
public override string ToString(){return base.ToString();}
public virtual bool Equals(ExpressionValueSource other){return _expr.Equals(other._expr);}
public virtual ProxyTargetInformation GetProxyTargetInformation(){return null;}
public notebook_start(params) : base(params){isRunning = true;}
public virtual IQueryTree Process(IQueryTree tree){return Process(tree.Query);}
public virtual IList<DirectoryEntry> GetEntries(){return directory.GetEntries();}
public ReusableDelegationSet(DelegationSet other){return other;}
public virtual EnvironmentInfoRequest EnvironmentInfoRequest(EnvironmentInfoRequest request){return request;}
public override FilterFactory CreateFilterFactory(FilterConfig config){return base.CreateFilterFactory(config);}
public virtual DatabaseInformation GetDatabaseInformation(){return databases;}
public virtual IList<string> GetDomains(){return domainNames;}
public override long Length(){return delegate1.Length();}
public HITType(POIFSRecord record){this.record = record;}
public virtual ListNetworkProfilesResponse ListNetworkProfiles(ListNetworkProfilesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListNetworkProfilesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListNetworkProfilesResponseUnmarshaller.Instance;return Invoke<ListNetworkProfilesResponse>(request, options);}
public virtual DeltaIndex CreateDeltaIndex(SourceBuffer srcBuffer){return DeltaIndex.CreateFromSrcBuffer(srcBuffer);}
public Example of Associations Facets:
public virtual bool GetDisableLog(){return referenceLog.GetDisable();}
public CompositeReaderContext SetCollectionModel(ICollectionModel collectionModel){this.c = collectionModel;}
public virtual Network Networking { get; private set; }
public virtual string GetStateNumberString(){return state;}
public virtual void ReadAttributes(AttributeStreamClass in1){if (in1.GetAttribute("id") == null){throw new ArgumentNullException("id");}if (in1.GetAttribute("class") == null){throw new ArgumentException("class cannot have public attribute of type null");}if (in1.GetAttribute("classIndex")!= null){throw new ArgumentException("classIndex cannot be null after reading attribute names from the input.");}if (in1.GetAttribute("classIndex")!= null){iomap.SetAttribute(Attribute.CLASS_NAME, in1.GetAttribute("classIndex"));}in1.GetAttribute(Attribute.CLASS_REPOSITORY, null);}
public virtual void DeleteEmailAddress(string email){_email = email;}
public bool IsUpper(char c){if (CharIsUpper(c)){return true;}return false;}
public virtual DescribeReservationOfferingsResponse DescribeReservationOfferings(DescribeReservationOfferingsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeReservationOfferingsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeReservationOfferingsResponseUnmarshaller.Instance;return Invoke<DescribeReservationOfferingsResponse>(request, options);}
public RuleRegionAdd(RuleRegion rule){regions.Add(rule);return this;}
public VPNRoute(string VPNRouteType){_vpnRoutes = new InstanceGroupRouteTable(VPNRouteType);_clientVPNRoutes.Add(VPNRouteTable.Create(VPNRouteTable.RouteType, VPNRouteTable.RouteValue, VPNRouteTable.RouteValueOutput, VPNRouteTable.RouteValueOutput, VPNRouteTable.RouteValueOutput, VPNRouteTable.RouteValueOutput, VPNRouteTable.RouteValueOutput, VPNRouteTable.RouteValueOutput, VPNRouteTable.RouteValueOutput, VPNRouteTable.RouteValueOutput, VPNRouteTable.RouteValueOutput, VPNRouteTable.RouteValueOutput, VPNRouteTable.RouteValueOutput, VPNRouteTable.RouteType, VPNRouteTable.RouteValueOutput, VPNRouteTable.RouteValueOutput, VPNRouteTable.RouteValueOutput, VPNRouteTable.RouteValueOutput, VPNRouteTable.RouteValueOutput, VPNRouteTable.RouteValueOutput, VPNRouteTable.RouteValueOutput, VPNRouteTable.RouteValueOutput, VPNRouteTable.RouteValueOutput, VPNRouteTable.RouteValueOutput, VPNRouteTable.RouteValueOutput, VPNRouteTable.RouteValueOutput, VPNRouteTable.RouteType, VPNRoute
public virtual State Get(){return this._enclosing.Get(this.phase);}
public override void SetWriteThrough(int b){base.SetWriteThrough(b);}
public Model { get; set; }
public virtual void Attach(object @object){CheckCallable();@object.SetParent(@object);}
public virtual void Terminate(Set<string> instances){foreach (string name in instances){Terminate(name);}}
public virtual bool IsPeeled(ICharTerm term){return term!= null? IsPeeled(term.Value) : IsLeaf;}
public virtual ModifyClusterResponse ModifyCluster(ModifyClusterRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyClusterRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyClusterResponseUnmarshaller.Instance;return Invoke<ModifyClusterResponse>(request, options);}
public void DeletePlacementGroup(PlacementGroup group){_placementGroups.Remove(group);}
public string getExtension(string file){return path.GetExtension(file);}
public virtual MergeCommand Create(MergeCommand cmd){var options = new InvokeOptions();options.Command = cmd;return this;}
public bool IsInRange(CellRangeAddress range, CellRangeAddress other){return _range.IsInRange(range, start, end);}
public virtual string ToString(){return GetCanonicalName();}
public virtual void SetQueryToNotSpan(string q){m_query = q;}
public string set_parameter(string @string){set_string_param(@string, 1);}
public Area3DPxgDeclarativeServicesMethodForArea3DPxgDeclarativeServicesMethodForArea3DPxgDeclarativeServicesMethodForArea3DPxgDeclarativeServicesMethodForArea3DPxgDeclarativeServicesMethodForArea3DPxgDeclarativeServicesMethodForArea3DPxgDeclarativeServicesMethodForArea3DPxgDeclarativeServicesMethodForArea3DPxgDeclarativeServicesMethod{return;}
public virtual WorkflowExecutionDetail GetWorkflowExecutionDetail(){return workflowExecutionDetail;}
public SecurityGroup CreateSecurityGroup(string name, string description){return CreateSecurityGroup(name, description, null, null);}
public static void CreateInstance(object o){CreateInstance(o);}
public virtual void Next();{Next = this.Peek();}}
public virtual List<Operation> GetStackSetOperations(){return StackSetOperations.ListStackSetOperations(this);}
public string GetProtectPassword(){return GetProtectedString(true);}
public BRAIRecordSet(BRAIRecordSet _braiRecordSet, BRAIRecordSet_UseCase, BRAIRecordSet_Ignore, BRAIRecordSet_Ignore_Type, BRAIRecordSet_Ignore_Name, BRAIRecordSet_Ignore_Name_Match, BRAIRecordSet_Ignore_Name_Match, BRAIRecordSet_Ignore_Name_Match, BRAIRecordSet_Ignore
public virtual int Add(int delta){return c.Add(delta);}
public virtual UpdateRESTAPIResponse UpdateRESTAPI(UpdateRESTAPIRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateRESTAPIRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateRESTAPIResponseUnmarshaller.Instance;return Invoke<UpdateRESTAPIResponse>(request, options);}
public virtual void DeleteContact(Contact contact){_contact = contact;}
public override bool isLarge(){return this._enclosing._size > 0;}
public virtual void removeAt(int index){removeAt(index);}
public override TokenFilter Lookup(TokenFilterFactory factory){return Lookup(factory.Lookup(tokenFilterName));}
public virtual void UpdateInvitationConfiguration(InvitationConfiguration invitationConfiguration){this.invitationConfiguration = invitationConfiguration;}
public virtual void append(char c){throw new System.NotImplementedException();}
public int valueAt(int index){return _string.IndexOf(m_string, index);}
public virtual void Add(Terms terms){Add(terms.First, terms.Last);}
public override double Evaluate(int row, int column){return base.Evaluate(row, column);}
public string GetRegionName(){return Name;}
public override void Visit(Record[] records){Visit(records, 0, records.Length);}
public Dictionary<string, string> GetKeyValuePairs(){return DictionaryUtil.GetKeyValuePairs(this.store, this.key);}
public virtual void CopyImage(PImage image){CopyImage(image.Picture, image.Offset, image.Length);}
public DelimitedPayloadTokenFilter(){return new DelimitedPayloadTokenFilter(this);}
public override void Serialize(ObjectOutput out1){out1.Write(Serialize(this));}
public java.nio.ShortBuffer wrap(short array_1){return wrap(array_1, 0, array_1.Length);}
public virtual void onResizeCanceled(){onResizeCanceled();}
public virtual void print(char ch){print(ch);}
public GetRegionRequest(): base(string.Format("{0}
public override bool Equals(EscherSimpleProperty other){return base.Equals(other);}
public Settings GetAccountSettings(){return settings;}
public int end(){return end;}
public virtual void SetOutput(Stream outputStream){@out = outputStream;}
public virtual void ReadLen(int len){_rc4.SkipTwoBytes();_rc4.StartRead();_rc4.EndRead();}
public virtual IList<Comment> GetComments(){return comments;}
public override SignerType GetSignerType(){return type;}
public LengthFilter(params object[] parameters){return new LengthFilter(this, parameters);}
public virtual MethodResponse CreateOrUpdate(MethodResponse existingResponse){return existingResponse;}
public virtual string GetExternalRef(){return GetExternalRef(this);}
public IComparer_IComparer_UseTheSameIDAsFirstOther<HSSFClientAnchor>(){return _isEqual;}
public void set_width_and_height(){this._enclosing.set_width_and_height(_enclosing.get_width(), _enclosing.get_height());}
public override int GetLevel(int distance){return GetCommonAncestorForDistance(distance);}
public virtual DictionaryDetector Detect(Dictionary<string, string> customHeaders){return Detect(customHeaders, true);}
public pack.json:base.packConfig = this.packConfig;}
public virtual PrefixTree Create(IRectangle rectangle){return Create(rectangle, 0, 0);}
public virtual int Read(int input){return _in.Read(input);}
public virtual string GetValueFiller(){return _valueFiller;}
public virtual void ModifyTargetSecurityGroups(string group){int flags = m_flags;int oldMask = m_securityGroups.Count;m_securityGroups = group;}
public virtual NGit.Taxonomy.TaxonomyReader GetTaxonomyReader(){return _taxonomyReader;}
public virtual void UpdateAlias(string alias){this.Alias = alias;}
public EscherProperty GetAt(int index){return _escherProperties[index];}
public void SetAreaReference(SheetReference @ref){_area = @ref;_externSheetIndex = @ref.ExternSheetIndex;}
public FuzzySet(int maxNumUniqueValues, float desiredMaxSaturation){return new FuzzySet(maxNumUniqueValues, desiredMaxSaturation);}
public virtual RouteTable[] GetLocalGatewayRouteTables(){return null;}
public virtual void DispatchConfigChanged(ConfigChangedEventArgs args){DispatchConfigChanged(args.NewConfig);}
public bool Equals(object o){if (o is Name){return name.Equals(o.Name);}return false;}
public override void putDouble(double value){buffer.putDouble(value);}
public string GetText(IVocabulary vocabulary){return vocabulary.ToString(null, NumberStyles.Integer, vocabulary);}
public virtual NGit.Storage.File AppendFile(FileStream fileStream){return AppendFile(fileStream, 0, fileStream.Length);}
public void FillRoundedRectangle(IRectangle rectangle){FillRoundedRectangle(rectangle);}
public virtual void Deprecate(int min, int max){domain = Sharpen.Collections.Deprecate(min, max);domain = Sharpen.Collections.Deprecate(domain, max);}
public virtual LogWriter Flow ( ){return FlowWriter.BeginFlow(flowId);}
public virtual IList<AssessmentTemplate> GetAssessmentTemplates(){return assessmentTemplateRepo.GetAll(null, null);}
public override FSTFilter Create(FSTFilterConfig config){return new HindiStemFilterFactory(config);}
public lifecycle.SagaFileConfiguration SagaFileConfiguration { get; internal set; }
public virtual void SetCallerReference(CallerReference callerReference){this.callerReference = callerReference;this.enabled = true;}
public virtual void Update(string destination){Update(destination, null);}
public virtual void Expire(){session.Expire();}
public virtual OpenIdToken GetOpenIdToken(){return openIdTokens.Get(openIdToken.OpenIdToken);}
public LabelFacet(int dimension, string path, FABILabelFacet facetLabel){return new LabelFacet(this, dimension, path, facetLabel);}
public virtual FormatFlagsConversionException(FormatFlagsConversionException error){throw error;}
public virtual QualificationResponse Qualification(string reason, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken)){return QualificationResponse(reason, customHeaders, cancellationToken).ConfigureAwait(false);}
public virtual IList<IToken> GetTokens(int type){return GetTokens(type, null);}
public virtual string GetObjectId(){return objectId;}
public Merger(Props props){this.p = props;}
public virtual void CreateSnapshot(){this._enclosing.CreateSnapshot();}
public SetAccessKeyIdAndAccessSecretRequest(string key, string secret){_accessKeyId = key;_accessSecret = secret;}
public override void Cancel(){base.Cancel();}
public virtual double Log(double x){return Math.Log(x);}
public virtual E next(){return this.next;}
public void Reset(DataInput input){this.m_input = input;this.m_blockEnd = 0;this.m_inputStart = 0;this.m_inputEnd = 0;this.m_blockStart = 0;this.m_blockEnd = 0;this.m_blockEnd = 0;this.m_blockEnd = 0;this.m_blockEnd = 0;this.m_blockEnd = 0;this.m_blockEnd = 0;}
public virtual ObjectId GetNewObjectId(){return new ObjectId(field_1_objectId);}
public PostServiceSyntax(List<string> forms){_forms = forms;}
public virtual void clear(){cache.clear();}
public void WriteContinueIfRequired(int length){WriteContinueIfRequired(length);}
public static int[] GetAllKnownRecordIDs(){return GetAllKnownRecordIDs(RECORD_IDS_BY_MIN_MAX_LENGTH);}
public virtual int32s decode(int64s decode) {return _decode(decode, _MAX_CODEC_REF)).Value;}
public virtual IList<TypedLinkFacetAttribute> GetAttributes(TypedLinkFacetAttribute attribute){return internal.ListReferences(attribute.GetTypedFacetInstances());}
public virtual bool Equals(DocumentPath path){return path.Equals(path.GetDocumentPath());}
public FormulaShifter CreateSheetShiftShifter(ISheet shift, ISheet shift2, ISheet shift3, ISheet shift4, ISheet shift5, ISheet shift6, ISheet shift7, ISheet shift8, ISheet shift7, ISheet shift8_shift9, ISheet shift7_shift9, ISheet shift8_shift9, ISheet shift8_shift9, ISheet shift8_shift9, ISheet shift8_shift9, ISheet shift8_shift9, ISheet shift8_shift9, ISheet shift12, ISheet shift12, ISheet shift12_isSheetshift12, ISheet shift12_isSheetshift12, ISheet shift16_shift17, ISheet shift18_shift18, ISheet shift18_shift19, ISheet shift18_shift19, ISheet shift18_shift19, ISheet shift18_shift19, ISheet shift18_shift19, ISheet shift18_shift19, ISheet shift18_shift19, ISheet shift18_shift21, ISheet shift20_isSheetshift12, ISheet
public virtual IList<AzureDirectConnectAssociationProposal> GetAssociationProposal(AzureDirectConnectGateway connection){return _directConnect.GetAssociationProposalList(connection);}
public virtual char[] SetIndex(int index){m_index = index;}
public virtual string GetObjectId(){return objectId;}
public override string ToString(){return "Infinity";}
public virtual void StopDeliveryStreamEncryption(){_rc4.Xor(stream);}
public void AssociateAmazonGuardDutyDomain(AmazonGuardDutyDomain domain){System.Diagnostics.Debug.Assert(domain!= null);}
public virtual TranslateTextRequest StructuredRequestMarshaller.Instance{set = true;}
public virtual string Label(Label label){return Label.Format(CultureInfo.InvariantCulture, "{0:s}", label.ToString());}
public virtual ICharStream GetNext(){return new InputStream(this.m_in.GetValue(PCRE_NEXT_CHAR()));}
public int Get(byte index){return _le.Get(index * _le.BYTE_SIZE + index * _le.SHARED_BLOCK_SIZE + index * _le.POSTFIX, _le.MIN, _le.MAX);}
public java.util.regex.MatcherOptions matcherOptions { useAnchoringBounds = true}
public java.lang.StringBuffer append(object o){return append(o, 0, o.Length);}
public override bool IsInstance(object o){if (o is BasqueStemmer){return true;}return false;}
public NGit.Treewalk.Filter.NotTreeFilter: base(){return this;}
public override String ToFormulaString(){return "";}
public virtual bool IsGroup(char c){if (m_groupIndex >= 0){return m_groupIndex >= 0;}return false;}
public virtual DescribeCacheSubnetGroupsResponse DescribeCacheSubnetGroups(DescribeCacheSubnetGroupsResponse describeCacheSubnetGroupsResponse){return DescribeCacheSubnetGroupsResponse(describeCacheSubnetGroupsResponse(nameInRole, nameInRoleMatch(nameInRoleMatch(nameInRoleMatch(nameInRoleMatch(nameInRoleMatch(nameInRoleMatch(nameInRoleMatch(nameInRoleMatch(nameInRoleMatch(nameInRoleMatch(nameInRoleMatch(nameInRoleMatch))));}
public NormalisedDecimal FromString(String value){return new NormalisedDecimal(value);}
public virtual java.util.MapClass.SubMap<K, V> getSubMap(){return this._enclosing.SubMap(this.key);}
public DataValidityTable(){this.lastRow = -1;this.lastColumn = -1;this.dataValidityTable = new DataValidityTable(this);}
public virtual void Rename(RefUpdate b){Update(b.Tip, b.GetExternalRef());}
public virtual string GetDeltaIndex(){return delta;}
public override java.nio.FloatBuffer duplicate(){return duplicate(this._enclosing);}
public void SetTaxonomyCache(TaxonomyCache cache){this.taxonomyCache = cache;}
public override byte[] GetFileTime(){return fileTime;}
public override String ToString(){StringBuilder sb = new StringBuilder(64);sb.Append(this.GetType().Name);sb.Append(", ").Append(this.Formula.Value);sb.Append("]");return sb.ToString();}
public bool isSuccess(HttpResponse response){return status >= 200 && status < 300;}
public override string ToString(){return Sharpen.StringHelper.GetIteratorAsString(itr);}
public virtual ExternalBookRecord GetExternalBookRecord(){return bookRecord;}
public void DeleteSandboxChannel(APNSSandboxChannelRequest channel){DeleteChannel(channel.GetExternalRef());}
public override void SetUp(FieldDoc doc){this.m_doc = doc;}
public bool isComplete(){return path.isComplete();}
public new StreamRef(type, data){return new StreamRef(data);}
public new GroupedFacetFacetResponse(SearchTermFacetQuery query, Set<string> terms, Fragments, Errors) : base(query){this.terms = terms;this.context = this.context.Create(SearchTermFacetQuery.Create(query, terms), null);return this;}
public virtual int GetDepth(){return _enclosing.GetDepth();}
public virtual void SetDeserializationOptions(int options){this.options = options;}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(this.DVD.Size);}
public string GetQuery(){return GetQuery(true);}
public override FoldingFilterFactory CreateFilterFactory(ScandinavianFilterConfig config){return base.CreateFilterFactory(config);}
public bool IsDigit(char ch){return Chars.CanBeDigit(ch);}
public SkipRevFilter(){return new NGit.Revwalk.Filter.SkipRevFilter(this);}
public virtual void Update(object obj){if (obj == null){return;}if (obj.GetAttribute() == null){return;}obj.GetAttribute() = obj.GetAttribute();}
public virtual string Clone(){return "PackWriter.State[" + this.phase + ", memory=" + this.bytesUsed + "]";}
public virtual Query Build(IQueryNode node){return Build(node.Parent, null, null);}
public FormatProvider[] AvailableFormats { get; internal set; }
public virtual string ToString(){return GetCanonicalName();}
public virtual void UpdateLoadBalancerAttributes(ILoadBalancerAttributes attributes){for (int i = 0; i < attributes.Length; i++){Set(attributes[i], attributes[i]);}}
public virtual IQueryNodeError SetMessage(string message){this.message = message;}
public DocTermsIndexDocValues object from a LeafReaderContext and a field name.
public virtual void Delete(TrafficPolicy policy){_trafficPolicies.Remove(policy);}
public virtual DeliverabilityCampaignsList QuerydomainDeliverabilityCampaignsList(Domain deliverabilityCampaignsListRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeliverabilityCampaignsListRequestMarshaller.Instance;options.ResponseUnmarshaller = DeliverabilityCampaignsListResponseUnmarshaller.Instance;return Invoke<DeliverabilityCampaignsList>(request, options);}
public virtual IList<DocDescription> GetOriginalList(){return original_list;}
public ATN Configuration(ATN config){_configuration = config;}
public virtual BytesRef ReadNext(){return _buf.ReadNext();}
public virtual void SetDocumentSize(int value){this.value = value;}
public String ToString(){return HSSFErrorConstants.GetText(hssF_1);}
public java.util.Iterator<E> entries(){return _list.iterator();}
public string to be used as error message.
public virtual string ToString(IFormatProvider provider){return GetCanonicalName(provider);}
public virtual CreateVpcRequest CreateVpcRequest(string cidrBlock){return new CreateVpcRequest(cidrBlock, 0, cidrBlock.Length);}
public bool transparentBounds { set; get; private set; }
public Amazon Chime Voice Connector{var terminationCredentials = new VoiceConnectorTerminationCredentials(VoiceConnectorCredentials.UseSignatureVersion4, VoiceConnectorCredentials.UseSignatureVersion5, VoiceConnectorCredentials.UseSignatureVersion4, VoiceConnectorCredentials.UseSignatureVersion5_153, VoiceConnectorCredentials.UseSignatureVersion4, VoiceConnectorCredentials.UseSignatureVersion5_153, VoiceConnectorCredentials.UseSignatureVersion4, VoiceConnectorCredentials.UseSignatureVersion5_153, VoiceConnectorCredentials.UseSignatureVersion4, VoiceConnectorCredentials.UseSignatureVersion4, VoiceConnectorCredentials.UseSignatureVersion5, VoiceConnectorCredentials.UseSignatureVersion4, VoiceConnectorCredentials.UseSignatureVersion5, VoiceConnectorCredentials.UseSignatureVersion5, VoiceConnectorCredentials.UseSignatureVersion5_153, VoiceConnectorCredentials.UseSignatureVersion4, VoiceConnectorCredentials.UseSignatureVersion5_153, VoiceConnectorCredentials.UseSignatureVersion4, VoiceConnectorCredentials.UseSignatureVersion5_153_3_4_5_5_6_7_5_5_5_5_5_5_5_6_7_8_8_8_9_captureSignatureVersion4, VoiceConnectorCredentials.UseSignatureVersion5_UseSignature
public PatternReplaceFilter(){return new PatternReplaceFilter(this);}
public virtual E get(int position){return list[position];}
public bool Exists(){return Exists();}
public virtual IList<MountTarget> GetMountTargets(){return Sharpen.Collections.UnmodifiableList(m_mounts);}
public virtual string ToString(){return GetCanonicalName();}
public void AddPredictionContext(PredictionContext c){cache.Add(c);}
public virtual string get(string key){return getString(key, CultureInfo.InvariantCulture);}
public virtual bool matches(IParseTree tree){return parseTree.matches(thismatcher);}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(this.HLLField.UnsignedLittleEndianOutput.field_1_offset);out1.WriteShort(this.HLLField.UnsignedLittleEndianOutput.field_2_options);}
public virtual int get_end_b(){return end_b;}
public virtual UpdateListingResponse UpdateListing(UpdateListingRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateListingRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateListingResponseUnmarshaller.Instance;return Invoke<UpdateListingResponse>(request, options);}
public void Write(SID x){_out.Write(x);}
public virtual int Encode(int value){return Encode(value, 0);}
public virtual void SetRef(Ref @ref){this.@ref = @ref;}
public string getQuery(){return path.Query();}
public virtual StackInstance GetStackInstance(){return this;}
public virtual int indexOf(E e){return indexOf(e.GetName(), e.GetIndex());}
public virtual string ValidatePhoneNumber(string phoneNumber){return PhoneNumberFormat.Format(CultureInfo.InvariantCulture, "{0} is not a valid phone number.", phoneNumber);}
public virtual string ToString(){return GetCanonicalName();}
public virtual UpdateDeploymentGroupResponse UpdateDeploymentGroup(UpdateDeploymentGroupResponse result){return UpdateDeploymentGroup(result.DeploymentGroupId);}
public virtual IList<PublicKey> GetPublicKeys(){return publicKeys;}
public IndexRecords { get; private set; }
public override bool Equals(object o){if (o == this){return true;}return false;}
public virtual CreateStreamingDistributionRequestResponse CreateStreamingDistributionRequest(long id){return CreateStreamingDistributionRequest(id, 0L, _order, _limit, _offset, _limit);}
public Cell(String value, CellStyle cellStyle): base(cellStyle){Row=firstRow;Column=firstColumn;IsRow=firstColumn;IsLastRow=firstRow;IsCol =firstColumn;}
public void RegisterCrossAccountAccessRole(string roleName){_crossAccountAccessRole = roleName;}
public int get(byte b) {return contents[index].get(b);}
public virtual void RemoveApplicationName(){base.RemoveApplicationName();}
public string path; string options;
public virtual int IPMT(int n){return IPMT(n);}
public virtual void Apply(string @string){ApplyRule(m_ruleStart, @string);}
public Sheet GetLastName(SheetIndex index){return _externSheetNames[index];}
public bool SetKeepEmptyFlag(bool b){keepEmpty = b;}
public virtual void Upgrade(Schema schema){Upgrade(schema.SchemaFile, schema.Version, true);}
public virtual IList<string> GetTags(){return new List<string>();}
public virtual int GetNextTermPosition(){return term.GetNextTermPosition();}
public void DeleteDeviceAllGroupRequest(DeleteDeviceAllGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDeviceAllGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDeviceGroupResponseUnmarshaller.Instance;return;}
public void SetLexicalState(IToken state){this.state = state;}
public android.graphics.drawable.IndeterminateDrawable getDrawable(android.graphics.Raycaster.Type type_1){return indeterminateDrawable;}
public Amazon GuardDutySuggester(SuggesterConfig config){this.config = config;}
public virtual string ToString(){return "External string representation of this object";}
public virtual ReplicationGroup CreateReplicationGroup(ReplicationGroup group){return replicationGroup;}
public virtual string GetBufferAsString(){return buf.GetBufferAsString();}
public virtual void StartVersion(string version){if (version == null){StartVersion(null);}else{StartVersion(version);}}
public virtual InstanceTagsCollection AddOnPremisesInstanceTags(IList<InstanceTag> tags){return _onPremisesInstanceTags;}
public java.util.Comparator<T> getComparer(){return _comparer;}
public virtual IList<Modification> GetModified(){return Sharpen.Collections.UnmodifiableList(m_instances.Values);}
public virtual void Unsubscribe(object o){UnsubscribesFromDataset(o);}
public void DeleteLink(Link link){Link = link;}
public virtual float[] copy(float[] array_1){return copy(array_1, 0, array_1.Length);}
public virtual NGit.Api.LogCommand CreateLogCommand(){return new NGit.Api.LogCommand(this);}
public virtual void SetDesiredCapacity(int capacity){desired.capacity = capacity;}
public virtual int cardinality(){return _cardinality;}
public void DeleteSecurityConfiguration(SecurityConfiguration securityConfiguration){_securityConfigurations = securityConfiguration;}
public override long GetSize(){return file.GetSize();}
public virtual IList<IToken> GetTokens(){return Sharpen.Collections.UnmodifiableList(getTokens()));}
public virtual void DeleteMatchSet(MatchSet ruleSet){MatchSet c = (MatchSet)ruleSet;Delete(c.ruleSet);}
public MoreLikeThisQuery(params object[] parameters){if (parameters == null){parameters = new object[0];}return this;}
public virtual StartEntityDetectionJobRequest startEntityDetectionJobRequest(EntityDetectionJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = StartEntityDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StartEntityDetectionJobRequestUnmarshaller.Instance;return Invoke<StartEntityDetectionJobRequest>(request, options);}
public virtual Vectors_ListCreateItemResponse CreateItem(int capacity){return CreateItem(capacity, 0);}
public bool Protect(Record record){return false;}
public OpenIdToken GetDeveloperIdentityToken(){return developerIdentityTokens.Get(openIdToken).GetOpenIdToken();}
public int Get(B string, int index){return strIndex;}
public virtual E firstKeyInthisMap(E key){return this._enclosing.get(key);}
public virtual string Compare(int value){return value;}
public virtual void Save(){StorageProvider provider = this;}
public Amazon GuardDutyDomainRegistration RegisterAmazonGuardDutyDomain(AmazonGuardDutyDomainRegistration domainRegistration){return domainRegistration;}
public virtual DescribePipelineResponse DescribePipeline(DescribePipelineRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribePipelineRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribePipelineResponseUnmarshaller.Instance;return Invoke<DescribePipelineResponse>(request, options);}
public override bool IsStemmerAssociatedWith(object o){return true if o is TurkishStemmer;}
public virtual ICollection<Reference> Sort(ICollection<Reference> collection){return Sharpen.Collections.UnmodifiableSortedCopy(collection.References, 0, collection.References.Count);}
public ShingleFilter CreateShingleFilter(ShingleToken type){return (ShingleFilter)Create(type, null, null, null);}
public virtual ModificationList GetModifications(){return modifications;}
public virtual void remove(object o){remove(o);}
public virtual void DetachLoadBalancer(IList<LoadBalancer> loadBalancerList){if (loadBalancerList.Count > 0){detachLoadBalancer(loadBalancerList, null, null, null);}}
public delete group(){return group(this.root, this.path, this.query, this.options, this.options.enablePositionIncrements, this.options.enablePositionIncrements, this.options.enablePositionIncrements, this.options.enablePositionIncrements, this.options.enablePositionIncrements, this.options.enablePositionIncrements, this.options.enablePositionIncrements, this.options.enablePositionIncrements, this.
public override TreeFilter Clone(){return this;}
public RefDirectory.LooseRef Create(RefDirectory.LooseRef other){return (this.constructor)(other);}
public virtual void SetMbPerSec(long value){m_mbPerSec = value;}
public virtual double[] copy(double[] array_1, double[] array_2, int[] elements_3, int[] elements_4){return copy(array_1, 0, elements_3, elements_4, elements_5, elements_6);}
public java.lang.StringBuilder reverse(){return reverse();}
public override void SetObjectId(ObjectId note){this.note = note;}
public string GetName(){return GetComponentName();}
public virtual void Set(string cs){m_current = cs;}
public virtual void Sort(List<T> list){Sort(list, new _T_descending_cb());}
public virtual void ReThrow(object o){throw new System.NotImplementedException();}
public FacetsConfig Configure(FacetsConfig config){this.config = config;}
public HyphenatedWordsFilterFactory Create(FilterParameters parameters){return (HyphenatedWordsFilterFactory)Create(parameters);}
public virtual float Evaluate(double value){return Evaluate(value, 0.0f, value);}
public IEnumerator<E> GetEnumerator(int iteratorType){return multiset.GetEnumerator(iteratorType);}
public Subscription CreateSubscription(SubscriptionConfig config){return CreateSubscription(config, null, 0);}
public virtual void UploadPart(Layer file, string path, string data){if (path == null){throw new ArgumentNullException("path is null");}if (file == null){throw new ArgumentNullException("file" );}this.m_file = file;this.m_size = file.GetSize();this.m_totalSize = file.GetSize();this.m_pending = false;this.m_file = null;this.m_hash = file.GetHash();this.m_dirty = file.GetFilePointer() == null? 0 : file.GetFilePointer();this.m_parent = file;}
public virtual int size(){return this._enclosing._size;}
public virtual char get(int i){if (offset + 1 < size){return _string[offset + 1];}return -1;}
public override void Encode(ICharSequence chars){Encode(chars, 0, chars.Length);}
public virtual RecallConfiguration ReportingInformation{get recommender();}
public RecognizeEntityRequest(): base("recognizeEntity"){return this;}
public string[] path = elements;return path;}
public virtual void DeleteGatewayGroup(GatewayGroup gatewayGroup){GatewayGroupResource group = gatewayGroup.Delete();}
public virtual int StemChars(string input){return StemChars(input).Length;}
public virtual void AddPrefixAndOutputBytes(BytesRef sb){m_prefix = sb.AddPrefixAndOutputBytes(sb.GetIndex(), sb.GetPrefixLength());}
public override string ToString(){return string.Empty;}
public bool isEmpty(){return elements.Length == 0;}
public virtual void SetSentenceSplitter(int splitter){m_sentenceSplitter = splitter;}
public virtual int index(){return index;}
public string getAcceptFormat(){return accept;}
public override void SetMaxLength(int maxTokens){_maxTokens = maxTokens;_maxTokensInOrder = maxTokens;}
public virtual string GetRefLogIdent(){return ref.GetRefLogIdent();}
public virtual IList<Skill> GetSkills(){return internal.GetSkills(){}
public override void Serialize(ILittleEndianOutput out1){out1.Write(this.GetType().Name);out1.WriteByte(this.GetType().Name);out1.WriteByte(this.GetType().GetProperty("id"));out1.WriteShort(this.GetHashCode());}
public override TreeFilter Clone(){return this;}
public virtual NGit.Api.UserModel CreateInstance(string name){this.name = name;}
public virtual void Dispose(){_reader.Dispose();}
public static FrenchMinimalStemFilter Create(TokenStream input){return new FrenchMinimalStemFilter(input);}
public virtual perf object Get(string key){return perf;}
public override void Write(UnicodeString str){WriteUnicode(str.ToCharArray());}
public virtual bool SupportsBitsPerValue(int bitsPerValue){return true;}
public virtual RestoreTableCommand GetRestoreStatus(){return restoreTable.GetRestoreStatus();}
public void StopActivityStream(ActivityStream stream){_stream = stream;}
public virtual AccessControlEffect GetAccessControlEffect(string effectId){return info.accessControlEffect;}
public virtual ObjectId GetExpectedOldObjectId(){return expectedOldObjectId;}
public virtual bool contains(object o){return map.containsKey(o);}
public virtual TerminationPolicyType[] GetTerminationPolicyTypes(){return new List<TermTerminationPolicyType> { TerminationPolicyType.class, TerminationPolicyType.class_} ;}
public virtual DeregisterInstancesFromLoadBalancerRequestResponse DeregisterInstancesFromLoadBalancerRequestResponse(DeregisterInstancesFromLoadBalancerRequestResponse deregisterInstancesFromLoadBalancerRequestResponse) {return DeregisterInstancesFromLoadBalancerRequestResponse(deregisterInstancesFromLoadBalancerRequestResponse.InstanceId, deregisterInstancesFromLoadBalancerRequest.InstanceIdType, deregisterInstancesFromLoadBalancerRequest.InstanceIdType, deregisterInstancesFromLoadBalancerRequest.InstanceIdType, deregisterInstancesFromLoadBalancerRequest.InstanceIdType, deregisterInstancesFromLoadBalancerRequest.InstanceIdType, deregisterInstancesFromLoadBalancerRequest.InstanceIdType, deregisterInstancesFromLoadBalancerRequestResponse.InstanceIdType, deregisterInstancesFromLoadBalancerRequestResponse.InstanceIdType, deregisterInstancesFromLoadBalancerRequestResponse.InstanceIdType, deregisterInstancesFromLoadBalancerRequest.InstanceIdType, deregisterInstancesFromLoadBalancerRequest.InstanceIdType, deregisterInstancesFromLoadBalancerRequest.InstanceIdType, deregisterInstancesFromLoadBalancerRequest.InstanceIdType, deregisterInstancesFromLoadBalancerRequest.InstanceIdType, deregisterInstancesFromLoadBalancerRequest.InstanceIdType, deregisterInstancesFromLoadBalancerRequest.InstanceIdType, null);}
public virtual int GetNumberOfStates(Decision decision){return current.state.numberOfStates;}
public virtual AddTagsResponse AddTags(List<Tag> tags){return AddTags(tags, new TagsOptions(tags));}
public virtual int MaxItemsCaching(DeltaCacheConfig config){return m_maxItemsCaching;}
public void DeleteFPGAImage(FPGAImage image){Delete(image.FPGAImageIndex);}
public Permissions for an image.public void ValidateImage(byte[] imageData, int imageIndex){if (imageIndex == -1){return;}if (imageData.Length == 0){return;}FileAttribute<ImageAttribute> attributes = imageData;if (attributes.Length == 0){return;}FileAttribute<ImageAttribute> attributes = imageData.Attributes;if (attributes.Length == 1){attributes = new FileAttribute<ImageAttribute>(m_fileData, 0);}
public void SetHorizontallyBordered(bool b){SetHorizontallyBordered(b);}
public virtual IMessage Get(string key){return Get(key, null);}
public bool isShowing(){return this._enclosing.isShowing();}
public virtual void SetInputStream(java.io.InputStream @is){throw new System.NotImplementedException();}
public void InitializeInternalData(PARARecordRecord[] data){InitializeInternalData(data);}
public virtual void Close(){destination.Close();}
public virtual void grow(int count){for (int i = 0; i < count; i++){grow(count);}}
public LifecyclePolicyPreview(LifecyclePolicyPreviewer other){return this.Start(other.Activity, other.LifecyclePolicies, other.Tags);}
public virtual bool IsInvokeChar(char ch){return GetCharCurrent(ch);}
public virtual void Stem(int start, int end){if (start < start && end > start){regionName = start.Name;startOffset = start.Offset;endOffset = end.Offset;regionName = regionName.Stem(start, end);regionName = regionName.Stem(end, end);}
public void DeleteDeploymentStrategy(string strategyName){_deploymentStrategies.Remove(strategyName);}
public virtual WithdrawIPAddressResponse WithdrawIPAddress(string ipAddress){return WithdrawIPAddress(ipAddress, 0, ipAddress.Length);}
public virtual E next(){return this.nextEntry().value;}
public virtual RecordHandlerProgress RecordHandlerProgress(RecordHandlerRecordHandler recordHandler){return recordHandlerProgress;}
public virtual InstanceFleets GetInstanceFleets(){return _instanceFleets;}
public virtual void Run(){base.Run();}
public formulaName(){return _formulaName;}
public override bool IsNat
public virtual void Stop(){Sharpen.Extensions.Dispose(this.m_application);}
public virtual bool IsOutdated(){return false;}
public int get(ResponseCodeEventArgs args){return _responseCode(args);}
public Configuration Create(Configuration config){return config;}
public void SetCachedResultType(string resultType){_cache.Set(resultType);}
public virtual void append(string str){append(str);}
public virtual string ToString(){return GetCanonicalName();}
public virtual void Delete(string version){Delete(version, null);}
public override bool HasPrecedenceLevel(int precedence){return _precedence >= precedence;}
public override void Visit(Record[] records){Visit(records, 0, records.Length);}
public void Clear(){_limit = 0;}
public virtual DescribeRequestValidatorsResponse DescribeRequestValidators(DescribeRequestValidatorsResponse describeRequestValidatorsResponse){return DescribeRequestValidatorsResponse(describeRequestValidatorsResponse);}
public virtual void putFloats(float[] values){buffer.putFloats(values);}
public override int GetHashCode(){return path.GetHashCode();}
public virtual void Delete(){_writer.Delete(Constants.NewSnapshot(this));}
public override float get(int index){return base.get(index);}
public virtual E get(K key){return this._enclosing.get(key);}
public ListResourceRecordSetsRequest(string hostedZoneId){return new ListResourceRecordSetsRequest(null, hostedZoneId, null);}
public override bool Equals(object o){return this.GetType().Equals(o);}
public virtual void DetachTypedLink(TypedLinkContext context){DetachTypedLink(context.Workspace, context.NewQuery, null, null);}
public override string ToString(){return "Infinity";}
public void SetRef(int @ref){_reference = @ref;}
public suppression options { get; internal set; }
public virtual ATNConfigSet Set(ATNConfig config){this.config = config;}
public string set_dns_prefix(string dnsPrefix){_dns_prefix = dnsPrefix;}
public virtual IList<Hunk> GetHunks(){return Sharpen.Collections.UnmodifiableList(this._hunks);}
public CompositeTermFilter CreateCompoundWordFilter(TokenStream input){return CreateCompoundWordFilter(input);}
public virtual void SetReadString(string value){_readString = value;}
public override byte ReadByte(){return delegate1.ReadByte();}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_error_code);}
public void Clear(){map = null;}
public override string ToString(){return this.GetType().Name + " (currently only supports gutter info)";}
public HSSFDataValidation(IDataValidation dataValidation){_dataValidation = dataValidation;}
public virtual NGit.Api.Tracker GetTrackerInformation(){return tracker;}
public virtual Group next(){return this.next;}
public RecordReader(Stream in1){return new RecordReader(in1);}
public override bool IsInstance(object o){if (o is RussianStemmer){return true;}return false;}
public override void SetInputStream(Stream input){_is = input;_is = output;}
public virtual ObjectReader GetObjectReader(){return _objectReader;}
public void ReadContinue(RecordInputStream in1){_in1.Read(ContinueRecord);}
public virtual void ModifyWorkspaceState(String workspaceName){EnsureOpenNameIfTheWorkspaceNameIsProvided();}
public virtual DeleteVpnGatewayResponse DeleteVpnGateway(DeleteVpnGatewayRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteVpnGatewayRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteVpnGatewayResponseUnmarshaller.Instance;return Invoke<DeleteVpnGatewayResponse>(request, options);}
public void AddEscherRecord(EscherRecord escherRecord){escherRecords.Add(escherRecord);}
public ValueEval CreateRef3DPxgEval(Ref3DPxgEval arg0){return CreateRef3DPxgEval(arg0, arg1);}
public virtual string ToString(){return GetCanonicalName();}
public virtual void print(int b){print(b * 0x07);}
public PhoneticFilterFactory Create(params object[] args){if (args == null){throw new ArgumentNullException("args");}return new PhoneticFilterFactory(this, args);}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_error_code);}
public void VisitAll(Record[] records){VisitAll(records, 0, records.Length); }
public virtual UpdateRecordResponse UpdateRecord(UpdateRecordResponse existingRecord){return UpdateRecord(existingRecord, new Object[]{"_id" => existingRecord._id});}
public override void ReadFields(Record record){int skip = 0;Stream in1 = _in1.Read(this. _enclosing);skip += record.ReadFields(this);if (skip > 0){_size = skip;_position = 0;_name = null;_name = null;}if (_name!= null){_name = ReadName();_comment = ReadComment();_nls = 0;_nls = 0;}
public virtual IEnumerator<string> GetNames(){return names.GetEnumerator();}
public string GetSessionToken(){return sessionToken;}
public virtual AttributesCollection GetAccountAttributes(){return _accountAttributes;}
public virtual bool Validate(){return parser!= null;}
public void PutItem(Document doc){PutItem(doc, null);}
public OperationEvaluationContext CreateOperationEvaluationContext(){return new OperationEvaluationContext(this);}
public virtual LoadBalancer CreateLoadBalancer(LoadBalancerConfig config){return new LoadBalancer(this, config);}
public FieldsQuery(){return new FieldsQuery(this);}
public virtual void Reset(){repo = null;}
public static HTMLStripCharFilterFactory Create(ICharStream input){return new HTMLStripCharFilterFactory(input);}
public virtual ILoggingStatus Get(){return status;}
public virtual LemmatizeSet<string> Lemmatize(string set){return Lemmatize(set, WordEvaluator.Default).Lemmatize(this);}
public virtual void Remove(string name){names.Remove(name);}
public void StartPrivateDnsVerification(){StartDnsVerificationInternal(null, null);}
public virtual IList<ImportJob> GetImportsForDataset(Dataset dataset){return _importJobs.Values;}
public void Reset() {iterator = null;}
public ActionTransition(int targetState, int actionIndex){this.targetState = targetState;this.actionIndex = actionIndex;this.actionIndex = actionIndex;this.m_updateOffsets = createTransitionUpdateOffsets(targetState, actionIndex);}
public virtual bool contains(object o){return this._enclosing.containsValue(o);}
public virtual void keyDown(int keyDown){keyDown = keyDown;}
public static ProgressMonitor NewThreadSafeMonitor(ProgressMonitor other){return new ThreadSafeMonitor(other);}
public virtual void Delete(ITree node){Delete(node.GetTreeNode());}
public SnowballStemmerInstance(ISnowballProgram program){this.program = program;}
public virtual IList<StreamConsumer> GetConsumers(){return streamConsumers;}
public void SetClientVPNTargetNetwork(IClientVPNTargetNetwork targetNetwork){_clientVPNTargetNetwork = targetNetwork;_client2VPN = targetNetwork;}
public virtual V evaluate(double x){return evaluate(x, y);}
public ValueEval Evaluate(ValueEval arg0, int arg1, int arg2, int argN, int argD, ValueEval argH,ValueEval argS, ValueEval argH, ValueEval argS, ValueEval argN, int argN, bool argB, bool argB, bool argB, bool argC, bool argD, bool argB){return eval(arg0, arg0, argB, argC, argB, argB);}
public virtual void putChar(char ch){buffer.putChar(ch);}
public virtual void SetOutputWriter(TextWriter writer){this.writer = writer;}
public virtual void SetForceUpdateFlag(bool b){forceUpdate = b;}
public FileInputStream CreateFileInputStream(File file){return new FileInputStream(file);}
public virtual void SetName(string name){this.m_name = name;}
public void SetAwsAccountId(string accountId){_accountId = accountId;}
public override string ToString(){return "this(" + this.operator + ")";}
public virtual Authorizer GetAuthorizer(){return authorizer;}
public Picture CreatePicture(){return (Picture)CreateResource(null, null, null);}
public void AddFormat(Format format){formats.Add(format);}
public SnowballPorterFilterFactory Create(PorterFilterParameters parameters){return Create(parameters, new SnowballPorterFilterFactory(this));}
public IList<Picture> GetPictures(){return GetPictures(null, null, null);}
public virtual string get(string key){return getString(key, CultureInfo.InvariantCulture);}
public virtual void SetUseNaturalLanguageFormulasFlag(bool useNaturalLanguageFormulasFlag){useNaturalLanguageFormulas = useNaturalLanguageFormulasFlag;}
public virtual Limits Describe(){return limits;}
public virtual UpdateSmsTemplateResponse UpdateSmsTemplate(UpdateSmsTemplateRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateSmsTemplateRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateSmsTemplateResponseUnmarshaller.Instance;return Invoke<UpdateSmsTemplateResponse>(request, options);}
public void setValue(T value){this._enclosing.setValue(value);}
public override void SetUp(){base.SetUp();}
public virtual void append(object o){append(o.ToString());}
public Environment(string environmentName, string environmentName1){return new Environment(environmentName, environmentName1);}
public SeriesToChartGroupRecord DeepCopy(){SeriesToChartGroupRecord rec = new SeriesToChartGroupRecord();rec.field_1_chartGroupIndex = field_1_chartGroupIndex;return rec;}
public override string GetName(){return "merge-base";}
public void DeleteSigningCertificate(){_signingCertificate = null;}
public override int ReadByte(){return _buf[_ReadIndex++];}
public virtual bool IsOr(object o){if (!(o is SemanticContext.OR)){return false;}SemanticContext.OR other = (SemanticContext.OR)o;return true;}
public BulkOperationPackedSingleBlock Create(int bitsPerValue){return (BulkOperationPackedSingleBlock)Create(bitsPerValue, _bulkOperationPackedValueSize);}
public virtual int capacity(){return _limit;}
public static IList<TransportProtocol> GetTransportProtocols(){return transportProtocols;}
public JschSession(Session session){return session;}
public virtual void Register(Type type, ValueReader reader, int arg_1, int arg_2, int arg_3, int arg_4, int arg_5, int arg_6, int arg_7, int arg_8, int arg_7_index, int arg_7_index, int arg_7_index, int arg_7_index, int arg_7_index, string arg_7_index_name, string arg_7_index_name_name_name_name_name_1){Register(type, reader, arg_2, arg_3, arg_4, arg_5, arg_6, arg_7_index_name, arg_7_index_name, arg_7_index_name, arg_7_index_name, arg_7_index_name_pattern_pattern_pattern_pattern_pattern_pattern_pattern_pattern_pattern_pattern_pattern_pattern_pattern_pattern_pattern_pattern_pattern_pattern_pattern_pattern_pattern_pattern_pattern_pattern_pattern_pattern_pattern_pattern_pattern_pattern_pattern_pattern_pattern_pattern_pattern_pattern_pattern
public FontFace (String fontName, int fontHeight){this.fontName = fontName;this.fontHeight = fontHeight;}
public override void Serialize(ILittleEndianOutput out1){out1.WriteByte(this.code);}
public override string GetBaseForm(){return base.GetWordForm();}
public int valueAt(int index){return array[index];}
public virtual void Describe(List<string> categories){foreach (string name in categories){Describe(categories[name]);}}
public virtual NGit.Diff.EventSource GetEventSource(string serviceName){return source;}
public override automaton Convert(Automaton automaton){return ConvertFromUtf32(automaton);}
public String ToString(){return _cell.ToString();}
public override void close(){delegate1.close();}
public scanner_initial_state(){state = STATE_INITIALIZER;}
public virtual int count(int start, int end){return indexes.get(start, end);}
public virtual UpdateDashboardPermissionsResponse UpdateDashboardPermissions(DashboardPermissionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateDashboardPermissionsRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateDashboardPermissionsResponseUnmarshaller.Instance;return Invoke<UpdateDashboardPermissionsResponse>(request, options);}
public virtual void Merge(WeightedPhraseInfo[] people, int o){foreach (WeightedPhraseInfo p in people){Merge(p, this);}}
public FieldTerm(int doc, FieldTerm term){if (doc.Count > 0){AddTerm(doc, TermType.FIELD);}else{AddTerm(doc, TermType.ARRAY);}}
public override void Serialize(OutputStream outputStream){_out.Write(packedShorts);}
public virtual NGit.Treewalk.Transition CreateTransition(NGit.Treewalk.Transition target){return new NGit.Treewalk.Transition(target, this);}
public override CookieStickinessPolicy Create(string balancerName, string policyName){return Create(loadBalancerName, policyName, null);}
public override string ToString(){return FtCf.Format(this.c, this.f) + " (fd=" + this.fd + ")";}
public override IList<Preset> GetPresets(){return presets;}
public virtual void SetUpdate(int srcIdx, V value){lock (this){SetUpdateInternal(srcIdx, value);}}
public virtual void EnableRule(Rule rule){this.rule = rule;}
public virtual string ToString(){return Term.ToString();}
public DedicatedCapacity(DedicatedCapacity capacity){_capacity = capacity;}
public string GetName(){return GetComponentName();}
public SheetEvaluator GetSheetEvaluator(int sheetIndex){return _evaluators[sheetIndex];}
public override long Length(){return delegate1.Length();}
public virtual SnapshotResponse Snapshot(SnapshotRequest request){var options = new InvokeOptions();options.RequestMarshaller = SnapshotRequestMarshaller.Instance;options.ResponseUnmarshaller = SnapshotResponseUnmarshaller.Instance;return Invoke<SnapshotResponse>(request, options);}
public PasswordRev4 ReadPasswordRev4(Record record){return ReadPasswordRev4(record.RecordId, record.Salt);}
public DedicatedIPGroup(string subnet){return _ipGroup=new DedicatedIPGroup(subnet);}
public virtual IList<SnapshotRestore> GetFastSnapshots(){return fastSnapshotRestores;}
public virtual QueryPhraseMap GetQueryPhraseMap(Term term){return null;}
public ManagedScalingPolicy CreateOrUpdate(ManagedScalingPolicy other){return other;}
public override int ReadShort(){return _buf.ReadShort();}
public virtual void stop(){matchgroup.stop();}
public virtual IToken Create(ITokenKind kind){return new Token(kind, this);}
public Adjustment SetFormula(Formula formula){return _formula;}
public DescribeLogStreamsRequest(string logGroupName){return new DescribeLogStreamsRequest(logGroupName, null);}
public virtual ResetSnapshotAttributeRequest ResetSnapshotAttributeRequest(string name){return SnapshotAttributeRequest.Create(name);}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(GetHashCode());}
public bool Equals(object o){if (!(o is SemanticContext.OR)){return false;}SemanticContext.OR? op = this;if (op is SemanticContext.OR)){op = op.GetOpperator();}return op.GetValue();}
public virtual IList<string> GetModelPackages(){return Sharpen.Collections.UnmodifiableList(GetModelPackages());}
public void DeleteClusterSecurityGroups(ClusterSecurityGroupsEntry group){DeleteClusterSecurityGroups(group.Membership);}
public virtual Filter GetBeforeFilter(DateTime date){return GetBeforeFilter(date);}
public SpanStartInfo SetSpanStartInfo(SpanStartInfo spanStartInfo){this.spanStartInfo = spanStartInfo;this.spanEndInfo = spanStartInfo;this.spanStartInfo.setSpanEndInfo(spanStartInfo);}
public virtual string GetName(){return localName;}
public void RemoveHiddenCountProperty(){_size = 0;}
public Hashtable Reset(Hashtable table){return table.Reset(null);}
public virtual void SetDeltaBaseAsOffset(bool deltaBaseAsOffset){deltaBaseAsOffset = deltaBaseAsOffset;}
public virtual void DeleteIdentity(Identity identity){_identity = identity;}
public IndexRevision(){return new IndexRevision(this);}
public override void reset(file_1){position = file_1.tell();}
public virtual NGit.Api.ApplyCommand GetApplyCommand(){return this;}
public override string ToString(){return "false";}
public default credentials.Provider defaultProvider { get; set; }
public virtual BuildRequest StartBuildByRuleRequest(string rule){this.rule = rule;}
public virtual IntegrationResponse CreateIntegrationResponse(IntegrationResponse result){return CreateIntegrationResponse(result.IntegrationResponse, result.IntegrationResponseKey);}
public override string Format(IFormatProvider format){return Format(format, new StringOptions(m_formatBytes))}
public virtual void RegisterActivityType(ActivityType type){activities[type] = new Intent(this, type);}
public override void Put(byte b){if (m_len >= m_buf.Length){Resize(m_len + 1);}m_buf[m_len++] = b;}
public virtual void SetValue(string newValue){this.value = newValue;}
public virtual BuildSuggestersResponse BuildSuggesters(BuildAppsRequest request){var options = new InvokeOptions();options.RequestMarshaller = BuildAppsRequestMarshaller.Instance;options.ResponseUnmarshaller = BuildAppResponseUnmarshaller.Instance;return Invoke<BuildSuggestersResponse>(request, options);}
public virtual DeleteVolumeResponse DeleteVolume(DeleteVolumeRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteVolumeRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteVolumeResponseUnmarshaller.Instance;return Invoke<DeleteVolumeResponse>(request, options);}
public virtual void DeleteTypedLinkFacet(TypedLinkFacet existingTypedLinkFacet){Delete(existingTypedLinkFacet.Name, existingTypedLinkFacet.Namespace, existingTypedLinkFacet.IsOmitting);}
public RevFlagSet(RevFlag flag){RevFlagSet.AddFlag(flag);return this;}
public override void ConvertToEditList(HunkHeader hunkHeader){HunkHeader _hunkHeader = hunkHeader;ToEditList(_hunkList);}
public override bool IsSigned(){return base.IsSigned();}
public void RemoveSecurityProperty(){object.Unlink(securityProperty);}
public virtual string GetPath(){return path;}
public override CharFilterFactory Create(string name, params object[] args){return new Lazy<CharFilterFactory>(this, name, args);}
public void Update(Formula result){_formula = result;}
public virtual void DeleteNotificationConfiguration(){this.notificationConfiguration = null;}
public virtual void DeleteAPI(){DeleteInternal(null, null);}
public virtual VpcPeeringConnection CreateVpcPeeringConnection(string name){return new VpcPeeringConnection(name, this) {_name = name,_parent = this}
public virtual void StopFleetActions(){fleetAction.Stop();}
public StopFilter(params object[] args){return new StopFilter(args, 0, args.Length);}
public virtual IList<Agent> GetAgents(){return GetAgents();}
public ValueEval Get(int row, int column){return _ecl.Get(row, column);}
public virtual int BaselineFreq(int frequency){return 0;}
public virtual ICollectionCollection Describe(){return collection;}
public override byte[] GetRawData(){return base.GetRawData();}
public virtual NGit.ObjectId GetNextDocumentInQueue(){return this.next;}
public SimpleQQParser(){return this;}
public virtual HitCollectedCollection GetHits(Int64sRef docs, long offset, int count){int end = offsets.Length - offset;HitCollectedCollection hits = new HitCollectedCollection(docs, offsets, count);return hits;}
public set_hosted_zone_id(){_hosted_zone_id = get_next_hosted_zone_id();}
public virtual int MaxDocCaching = 256; eturn Cache<int, int>(maxDocCaching, maxDocCount);}
public static ICollection<AdvertisedReference> GetAdvertisedReferences(){return new ArrayList<AdvertisedReference>(1);}
public empty_file(string name){throw new System.NotImplementedException();}
public void SetParameters(IDictionary<string, string> parameters){this.m_parameters = parameters;}
public virtual int GetIndexSize(int length){return _engine.EstimateIndexSize(length);}
public bool CreateEmptyCells(bool b) {return b;}
public override void WriteDouble(double v){if (v == null){throw new ArgumentNullException("v");}else if (v > 0){throw new System.ArgumentException("v");}else if (v > 0){throw new System.ArgumentException("v");}else if (v > 0){throw new System.ArgumentException("v");}else if (v > 0){throw new System.ArgumentException("v");}endif", v);}
public virtual void DeleteTag(){_enclosing.DeleteTag(tagName);}
public virtual void Stop(){Sharpen.Runtime.Dispose(deployment);}
public int bitCount(int offset){return java.util.BitUtil.CountBitsInUnion(bitCount(offset));}
public virtual DateTimeRange Copy(){return new DateTimeRange(Start, End);}
public virtual IList<Suggester> GetSuggesters(){return Sharpen.Collections.UnmodifiableList(GetSuggesters()));}
public virtual InputStream GetInputStream(File file){return new FileInputStream(file, FileMode.open()){flags = file.GetFlags();}
public override void SetValue(int value){this.set(value);}
public void TranslateUnicode(ICell row, char[] text, int start, int end){TranslateUnicode(row, start, end);}
public French Light stem filter, provided.
public CompleteMultipartUploadRequest(string vaultName, string uploadId, int uploadIdChecksum){var request = new CompleteMultipartUploadRequest();request.VaultName = vaultName;request.UploadId = uploadId;request.ArchiveId = archiveId;request.Checksum = checksum;return request;}
public override int GetTerms(){return _terms;}
public virtual IndexInput GetIndexInput(string name){return null;}
public void WriteByte(int b){WriteByte(b & 0xff);}
public virtual void VisitAllRecords(){for (int i = 0; i < _loops.Length; i++){VisitRecord(i);}}
public bool Get(int index){return _bitMap[index];}
public FtPioGrbitSubRecord Clone(){return (FtPioGrbitSubRecord)Clone(this);}
public override bool Equals(object o){if (o == this){return true;}return false;}
public virtual DescribeReservedDBInstances offerings(){return reservedDBInstances;}
public virtual void Update(SourceRepository repo){this.m_repo = repo;}
public SheetIndex GetLastSheetIndex(SheetIndex index){return index;}
public virtual DescribeCacheSecurityGroupsResponse DescribeCacheSecurityGroups(DescribeCacheSecurityGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeCacheSecurityGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeCacheSecurityGroupsResponseUnmarshaller.Instance;return Invoke<DescribeCacheSecurityGroupsResponse>(request, options);}
public virtual string[] listBasePaths(){return listBasePaths(true, true);}
public virtual void Revert(string commitName){Revert(commitName, commitName);}
public bool Get(int pos){return _buf[pos];}
public virtual NGit.Books.BookItem AddName(Name name){return book.AddName(name);}
public void Next(){_reader.MoveNext(); }
public void Clear(){_limit = 0;_size = 0;}
public virtual FetchCommand CreateFetchCommand(){return new FetchCommand(this);}
public virtual string Get(string name){return Sharpen.StringHelper.Get (m_inputs, name);}
public int keyGreaterThanOrEquals(E element){return keyGreaterThanOrEquals(element);}
public bool Exists(byte[] name){return Exists(name, 0, name.Length);}
public int maximumNumberOfOpenFilesForPackaging = DEFAULT_MAX_NUMBER_OF_OPEN_FILES_FOR_PACKAGING; eturn this.maximumNumberOfOpenFilesForPackaging = maximumNumberOfOpenFilesForPackaging;}
public virtual UpdateTagsResponse UpdateTags(Domain domain, string tags){return UpdateTags(domain, tags, "domain", "tags", "tagsWithTemplate", "domainTagsWithTemplate", "domainTagsWithTemplateTag", "domainTagsWithTemplateTag", "domainTagsWithTemplateTag", "domainTagsWithTemplateTag", "domainTagsWithTemplateTag", "domainTagsWithTemplateTag", "domainTagsWithTemplateTag", "domainTagsWithTemplateTag", "domainTagsWithTemplateTag", "domainTagsWithTemplateTag", "domainTagsWithTemplateTag", "domainTagsWithTemplateTag", "domainTagsWithTemplateTag", "domainTagsWithTemplate", "domainTagsWithTemplate", "domainTagsWithTemplateTag", "domainTagsWithTemplateTag", "domainTagsWithTemplateTag", "domainTagsWithTemplateTag", "domainTagsWithTemplateTag", "domainTagsWithTemplateTag", "domainTagsWithTemplateTag", "domainTagsWithTemplateTag", "domainTagsWithTemplateTag", "domainTagsWithTemplateTag", "domainTagsWithTemplateTag", "domainTagsWithTemplateTag", "domainTagsWithTemplateTag", "domainTagsWithTemplate"), "domainTagsWithTemplate", "domainTagsWithTemplate"
public virtual NumberConstraint CreateNumericConstraint(NumberConstraint constraint){return new NumberConstraint(constraint);}
public void flush(){flush(null, null, null);}
public virtual IntegrationResponse GetIntegrationResponse(IntegrationResponse response){return response.Data;}
public override int IterationCount(int valueCount, int ramBudget){return 0;}
public virtual NGit.Api.ExpressionRescorer NewExpressionRescorer(){return this;}
public virtual DescribeDataRetrievalPoliciesResponse DescribeDataRetrievalPolicies(DescribeDataRetrievalPoliciesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDataRetrievalPoliciesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDataRetrievalPoliciesResponseUnmarshaller.Instance;return Invoke<DescribeDataRetrievalPoliciesResponse>(request, options);}
public virtual void Delete(){DirectoryInfo dir = null;try{dir = fs.Delete(path, true);}catch (DirectoryNotFoundException nsde) {if (nsde == null){throw new InvalidOperationException("Directory does not exist");}}
public formula string(IList<FormulaAttribute> operands){return _formula.CreateFormulaString(operands);}
public short GetShort(int index){return _string.CopyValueOf(_string, index, _string.UTF8SortedAsUnicodeComparer);}
public virtual BuildResult GetStatus(){return status;}
public virtual MemberAccount[] GetMemberAccounts(){return memberAccounts;}
public virtual RefMap GetAllReferences(){return references;}
public virtual string ToString(){return GetCanonicalName();}
public virtual void ModifyClusterCapacity(int capacity){current.capacity = capacity;}}
public bool getValue(){return _complexData!= null;}
public virtual void SetStepExecutionStatusDetail(int step){_step = step;}
public virtual void DeleteTrackingOptions(ConfigurationSet configSet){DeleteConfigurationSet(configSet);}
public virtual ProcessingJob CreateProcessingJob(ProcessingJobSpec spec){return this;}
public virtual void DeleteAllInvitations(){_invitations = null;}
public SheetRecord Add(SheetRecord record){return AddRecord(record.Sheets, record.SheetIndex);}
public virtual void Skip(IToken token){Skip(token.Value);}
public virtual float read(int offset, int length) {return _in.read(offset, length);}
public virtual NGit.Api.BlameCommand CreateBlameCommand(string command){return Sharpen.Extensions.CreateCommand(command);}
public virtual SolverSolution CreateSolution(SolverParameters parameters){return new SolverSolution(parameters);}
public virtual int read(byte b){throw new System.NotImplementedException();}
public virtual void Complete(){this._enclosing.Finish();}
public virtual void remove(object o){if (!(o is java.util.MapClass.Entry<K, V>)){return;}java.util.MapClass.Entry<object, object> e = (java.util.MapClass.Entry<object, object>)o;o.remove(e.getKey(), e.getValue());}
public OperateEquipmentRequest Create(List<string> defaultParams){if (defaultParams == null){defaultParams = new string[0];}return OperateEquipmentRequest(defaultParams);}
public void Initialize(SST serializer){Initialize(serializer);}
public virtual string Dequote(string s){return "'" + str + "'";}
public virtual void Delete(){_enterprise.DeleteSnapshot(null, true, false);}
public virtual void SetTagsToBeDeleted(int[] tags){_tags = tags;}
public int Get(CellReference cr, int row, int column){int result = 0;for (int i = 0; i < _cells.Count; i++){CellValueRecord cell = _cells[i];result += cell.Get(row, column);}return result;}
public override bool Commit(){return false;}
public Availability ZoneDisabling(IEnumerable<AvailabilityZone> availabilityZones){return _availabilityZones.DisposeOrAdd(loadBalancer.loadBalancerId, availabilityZones, null);}
public override float get(){return buf[pos++];}
public virtual int max(int max){return list.max(max);}
public virtual void CreateOrUpdateTargets(List<Target> targets){foreach (Target target in targets){CreateOrUpdateTarget(target);}}
public virtual void SetAddAll(ISet<E> set){foreach (E element in set.Elements){Set<E> element = set.Add(element);}
public virtual void CreateIdentityDgimAccount(DgimAccount identityDgimAccount){CreateIdentityDgimAccount(identityDgimAccount);}
public virtual IList<Photo> GetMomentPhotos(){return GetMomentPhotos(null, null, null);}
public virtual string GetConfigurationString(){return null;}
public virtual StemmerOverrideMap FindBestMatchFor(TermsQuery terms){return FindBestMatchFor(terms.Values);}
public virtual void Start(Parser recognizer){m_parser = new Parser(this, recognizer);}
public virtual string GetExternalName(){return externalName;}
public virtual bool contains(object o){return contains(o);}
public virtual void SetConditionalFormatting(IConditionalFormatting format){m_conditionalFormatting = format;}
public virtual void Deactivate(object o){base.Deactivate(o);}
public virtual NGit.Api.Executor GetExecutor(){return _executor;}
public virtual gateways describe(VirtualGatewayMode mode){return gateways;}
public TermQuery(Term term, TermSet states){return new TermQuery(term, states);}
public virtual char[] getChars(){return new char[getChars()].CopyTo(backingArray, offset + _position, _limit);}
public virtual string ToPath(string str){return Sharpen.StringHelper.ToAbsolutePath(str);}
public GetCollectionRequest(): base(){return new GetCollectionRequest(defaultParameters);}
public string GetText(IVocabulary vocabulary){return vocabulary.ToString(null, NumberStyles.Integer, vocabulary);}
public void UpdateFormulasAfterRowShift(int row, int shift_1){UpdateFormula(row, shift_1);}
public virtual void setLength(int length_1){throw new System.NotImplementedException();}
public virtual void Save(){this._enclosing.Save();}
public void SetParameters(IDictionary<string, string> parameters){this.m_parameters = parameters;}
public virtual int read(byte b){return read(b, 0, b.Length);}
public virtual void DeleteHIT(HIT o){if (o.HITId!= null){DeleteHIT(o.HITId);}}
public MultiTerm Create(MultiTerm[] subTerms){return Create(subTerms, reader-slice arrays);}
public virtual E pop(E e){return pop(e.getElement(), e.isBackward());}
public String ToString(){return HSSFErrorConstants.GetText(hssF_1);}
public void DeleteBasicChannel(Channel channel){Delete(channel.GetHwbIndex());}
public virtual void Delete(EscherEntry e){Delete(e.Key, e.Value);}
public override int ByteCount(short[] value){return base.ByteCount(value);}
public hadoop-jar-step-config(){_hadoopJarStepConfig = new JobConf(this);_hadoopJarStepConfig.SetName(_hadoopJarStepName);}
public virtual ObjectInstance CreateInstance(){return null;}
public virtual void ModifyLaunchTemplate(LaunchTemplate launchTemplate){this.launchTemplate = launchTemplate;}
public virtual string ToString(){return GetCanonicalName();}
public override int Read3ByteString(byte b){return delegate1.Read3ByteString(b);}
public if(){lastDocID = -1;wordNum = -1;word = 0;}
public virtual NGit.Api.StackUpdateStackResponse NGit.Api.StackUpdateStackResponse NGit.Api.StackUpdateStackResponse NGit.Api.StackUpdateStackResponse NGit.Api.StackUpdateStackResponse NGit.Api.StackUpdateStackResponse NGit.Api.StackUpdateStackResponse NGit.Api.StackUpdateStackResponse NGit.Api.StackUpdateStackResponse NGit.Api.StackUpdateStackResponse NGit.Api.StackUpdateStackResponseNGit.StackStackUpdateStackResponseNGit.StackUpdateStackResponse NGit.Api.StackUpdateStackResponse NGit.Api.StackUpdateStackResponse NGit.Api.StackUpdateStackResponse NGit.Api.StackResponseNGit.StackResponseNgit.StackResponseNgit.StackResponseNgit.StackResponseNgit.StackResponseNgit.StackResponseNgit.StackResponseNgit.StackResponseNgit.StackResponseNgit.StackResponseNgit.StackResponseNgit.StackResponseNgit.StackResponseNgitStackResponseNgitStackResponseNgitStackResponseNgitStackResponseNgitStackResponseNgitStackResponseNgitStackResponseNgitStackResponseNgitStackResponseNgitStack
public override BytesRef Get(){return base.Get();}
public virtual CreateNamespaceRequest CreateNamespaceRequest(string name){return new CreateNamespaceRequest(name, null, null);}
public void Reset(byte[] b){if (b == null){throw new System.ArgumentNullException("b");}reset(b, 0, b.Length);}
public virtual void DeleteLocalGatewayRoute(string route){DeleteRoute(route, true);}
public virtual IList<SecurityGroup> GetSecurityGroups(){return new List<SecurityGroup> { GetSecurityGroups() };}
public override int UnreadLengthBytes(int length){return _buf.ReadUpto(length);}
public virtual void push(int b){push(b == 0? 0 : b.Length);}
public void setValue(object newValue){object3d.Set(this, newValue);}
public virtual string ToString(){return _enclosing.GetCanonicalName();}
public virtual State SetToCopyOf(State other){return this;}
public virtual PushAllRefSpec SetPushAllRefSpec(RefSpec spec){this.spec = spec;}
public virtual void Grow(int size){for (int i = size; i < size; i++){System.Array.Copy(elements, i, _array, i + _position, _array.Length);_array[i] = _array[i++];}}
public GrammarType(int grammarType, int maxTokenLen){this.grammarType = grammarType;this.maxTokenLen = maxTokenLen;}
public virtual IList<Meeting> GetMeeting(Account account){return Sharpen.Collections.UnmodifiableList(GetMeeting(account));}
public vault.CreateVaultResponse CreateVault(VaultCommand command){return CreateVaultResponse(command);}
public virtual int read(byte b){throw new System.NotImplementedException();}
public virtual StacksDetail GetStacksDetail(){return getStacksDetail(null, null);}
public virtual void DetectCustomLabels(){DetectCustomLabelsInternal(null);}
public virtual string GetSignatureComposer(){return composer;}
public virtual int array_size(int array_1){return (array_1!= null)? array_1.Length : 0;}
public virtual BuildRequest BuildRequest(){return aRequest;}
public virtual NotificationConfiguration CreateOrUpdate(NotificationConfiguration config){var request = new InvokeOptions();request.AddSubResource(notificationConfigurationName);return new NotificationConfiguration(request, config);}
public ObjectId CreateObjectId(byte[] bytes){return CreateObjectId(bytes, 0, bytes.Length);}
public Record Create(Stream input){return Create(input, 0, input.Length);}
public virtual void SetOffset(int offset){offset = offset;}
public static java.nio.ByteBuffer compareTo(java.nio.ByteBuffer byteBuffer, java.nio.ByteBuffer toCompare, byte order) throws java.nio.IOException{return byteBuffer.compareTo(toCompare, java.nio.charset.Charset).Value;}
public virtual RevTree GetRevTree(ObjectId id){return null;}
public default subnet(all nodes are created) {_defaultNodes = new AList<Node>();}
public override bool IsCancelled(){return base.IsCancelled();}
public virtual void SetFilter(ICharStream input){SetFilter(input);}
public virtual void Delete(int id){if (id == _id){throw new InvalidOperationException("id cannot be null");}delete(_id);}
public java.util.NavigableSet<K> keys(){return _keySet.keys(){_key = KeySet().keys();_keySet = new java.util.TreeMap<K, V>.TreeMap(this._enclosing);}
public IEnumerator<Note> GetNotesEnumerator(){return new _NoteEnumerator_276(this);}
public virtual GetQueueAttributesResponse GetQueueAttributes(string queue, string list) {return GetQueueAttributes(queue, list, false);}
public Polygon Create(IShape shape, int x, int y, int z, int w, int h, int x, y, char c){if (_isHSSF){_isHSSF = true;_shape = shape;}return _shape;}
public virtual void Delete(){_writer.Delete(this.m_docId);}
public virtual void append(object o){append(o);}
public Jaspell-Ternary search trie(Iterator<Term> input){return new Jaspell-TernarySearchTrie(this, input);}
public virtual void ImportInstance(){}
public override bool insert(int index, bool c){java.util.Arrays.checkOffsetAndCount(index, c.Length);if (_position == _position){throw new java.util.IndexOutOfBoundsException("_position");}_position += 1;return this._enclosing.insert(index, c);}
public virtual void SetCreationTime(DateTime time){modTime = time;}
public virtual CostEstimate GetCost(){return cost;}
public virtual NGit.Api.MultiPhraseQueryNode Create(Token token){return new NGit.Api.MultiPhraseQueryNode(token, this);}
public override FilterFactory CreateFilter(FilterConfig config){return new DoubleMetaphoneFilterFactory(config);}
public override WAH8DocIdSet Create(IDictionary<string, WAH8DocIdSet> customHeaders = null, CancellationToken cancellationTokenSet = null, StemFilter useStemFilter = null, StemFilter useHunspellFilter = null, CancellationTokenSourceIsNone = null, StemFilter useStemFilterInstance = null, CancellationTokenSourceIsNone = null, StemFilterInstance = null, CancellationTokenSourceIsAH8DocIdSet=null, StemFilterInstance? existingFilter : new HunspellStemFilterInstance(customHeaders, cancellationTokenSet, cancellationTokenSet, cancellationTokenSet, cancellationTokenSet, cancellationTokenSet, cancellationTokenSet, cancellationTokenSet, cancellationTokenSet, cancellationTokenSet, cancellationTokenSet, cancellationTokenSet, cancellationTokenSet, cancellationTokenSet, cancellationTokenSet, cancellationTokenSet, cancellationTokenSet, cancellationTokenSet, cancellationTokenSet, cancellationTokenSet, cancellationTokenSet, cancellationTokenSet, cancellationTokenSet, cancellationTokenSet, cancellationTokenSet, cancellationTokenSet, cancellationTokenSet, cancellationTokenSet, cancellationTokenSet, cancellationTokenSet, cancellationTokenSet, cancellationTokenSet, cancellationToken
public ImageAttribute GetImageAttribute(){return image;}
public virtual Snapshots Describe(){return Snapshots;}
public Sheet IndexForExternalReference(int externalRefIndex){return _firstSheetIndexForExternalReference(externalRefIndex);}
public static HunspellStemFilter Create(TokenStream tokenStream){return new HunspellStemFilter(tokenStream);}
public UnicodeString Put(ILittleEndianOutput out1){return put(null);}
public virtual string Get(int index){return mValues[index];}
public virtual void SetNote(Note note){this.note = note;}
public virtual void Deregister(string name){DeregisterMulticastGroupSource(name);}
public virtual bool isEmpty(){return list.isEmpty();}
public virtual void Capture(ITokenStream tokenStream){_tokenStream = tokenStream;}
public Dashboards CreateOrUpdateDashboards(DashboardsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DashboardsRequestMarshaller.Instance;options.ResponseUnmarshaller = DashboardsResponseUnmarshaller.Instance;return Invoke<Dashboards>(request, options);}
public virtual string get(char b){return buf.get(b, b.pos, b.len);}
public virtual void Clear(){_limit.Clear();}
public override int ReadByte(){return _buf[_ReadIndex++];}
public bool hasAnchorBounds(){return anchoringBounds;}
public HSSFColor FindSimilarColor(HSSFColorValue[] values){if (values == null){return null;}HSSFColorValue[] colors = values;return FindSimilarColor(colors, values);}
public SeriesRecord GetSeriesRecord(){return series;}
public virtual void set(object o){array[offset + y] = o;}
public virtual ListAlarmsResponse ListAlarms(ListAlarmsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAlarmsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAlarmsResponseUnmarshaller.Instance;return Invoke<ListAlarmsResponse>(request, options);}
public virtual void Set(E e){lock (this){object[] newElements = new object[elements.Length + 1];System.Array.Copy(elements, 0, newElements, 0, elements.Length);newElements[elements.Length] = e;}}
public EndpointConfiguration CreateEndpointConfiguration(EndpointConfiguration endpointConfiguration){return endpointConfiguration;}
public override CellRangeAddress GetCellRange(int cellnum){return _cellRange.GetCellRange(cellnum);}
public virtual void ModifyAvailabilityZoneGroup(AvailabilityZoneGroup availabilityZoneGroup){availabilityZoneGroup.ModifyAvailabilityZoneGroup(availabilityZoneGroup);}
public virtual bool GetForce(){return force;}
public virtual string GetStatus(){return server.GetStatus();}
public override int Size(){return _buf.Length;}
public virtual string GetText(ICharTerm term){return GetText(term);}
public virtual EndpointConfiguration GetEndpointConfiguration(){return null;}
public virtual void SetSerializeData(byte[] data){_serializeData = data;}
public virtual void SetInstanceCount(int instanceCount){instanceCount = instanceCount;}
public virtual NGit.Api.PullCommand CreatePullCommand(){return new NGit.Api.PullCommand(this);}
public virtual JoinQuery Join(){return this;}
public override void Read(Record record){_in.Read(le.SavedData);_le.CopyTo(record, _le, _le.Length);_le.Position = 0;_le.SetValue(_le.StartPosition, _le.StartPosition);_le.SetValue(_le.EndPosition, _le.Length);}
public override long Get(string key){return this.Get(key, out long value);}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(this.GetType().Name);out1.WriteByte(_order);}
public virtual void Reject(string reason, object payload){TransportError.Wrap(new InvalidOperationException(MessageFormat.Format(JGitText.Get().attachmentIsRejected, reason)));}
public override void Add(V value){if (this.isA(Dictionary<K, V>)){list.Add(value);}}
public virtual Lag Update(Lag g){return g.Update(GetDiffEntry());}
public virtual char nextChar(){return nextChar();}
public FPGAImagesData(){return images;}
public override int Read(byte[] buffer, int offset, int length) throws IOException{if (offset >= 0){throw new System.IndexOutOfRangeException("offset=" + offset + " is not supported.");}int byteCount = _in.ReadByte();_in.ReadFully(buffer, offset, length);return byteCount;}
public virtual NGit.Api.PushCommand AddRef(string command){return this.AddCommand(new NGit.Api.PushCommand(command));}
public virtual string ToString(BlockEnd_t blockEnd){return GetBlockEnd(blockEnd.Number, blockEnd.IsHidden, blockEnd.IsFixed, blockEnd.IsExternal, blockEnd.IsExternal);}
public virtual E last(){return list.eek();}
public virtual void remove(object o){lock (this._enclosing){int oldSize = this._enclosing._size;this._enclosing.remove(o);this._enclosing._size = oldSize;this._enclosing.notifyPropertyRemoved(o);}}
public virtual NGit.Api.Queue CreateQueue(string queueName){return (_queue = Sharpen.Util.CreateQueue(queueName, true));}
public override void Fill(byte[] b){Fill(b, 0, b.Length);}
public virtual void UpdateTrafficPolicyComment(TrafficPolicyComment comment){_trafficPolicyComment = comment;}
public override void Serialize(int row, int column, XFIndex output){WriteInt32(row, column, output);}
public virtual void SetDocFreq(long docFreq){docFreq = docFreq;}
public virtual void RevokIPRules(string appName){RevokingIPRules(appName);}
public override java.nio.CharBuffer copy(){return copy(this);}
public virtual IList<int> Decode(IList<int> input){return Decode(input, 0, input.Length);}
public virtual void Reject(int reason, EncounteredSkill reason){this.Reject(reason, null);}
public virtual IList<string> GetLogPatterns(){return _logPatternProvider.ListLogPatterns();}
public virtual NGit.Api.IndexMessage SetIndexMessage(IndexMessage m){this.m_indexMessage = m.CreateIndexMessage(m_indexMessage);}
public virtual NGit.Api.RmCommand rm(){return exec(null, null, null, null);}
public float? Get(string key){return Get(key, out float? default(float?));}
public java.util.Hashtable_CapSet_t capacity(){this._enclosing.capacity = capacity;}
public virtual NGit.Api.Repository GetRepository(){return repository;}
public virtual Limit GetLimit(){return _limit;}
public void Initialize(CSTSAssumeRoleSessionCredentialsProvider provider){_provider = provider;}
public virtual bool Equals(Terms terms){return terms!= null? Equals(terms.Values) : false;}
public virtual int GetIndex(){return index;}
public DeploymentStrategy(string name, List<DeploymentStrategy> strategies){return new DeploymentStrategy(name, strategies);}
public virtual void Evaluate(IToken token){_token = token;}
public virtual CreateWorkteamResponse CreateWorkteam(CreateWorkteamRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateWorkteamRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateWorkteamResponseUnmarshaller.Instance;return Invoke<CreateWorkteamResponse>(request, options);}
public bool hide_obj(){return hide_obj;}
public virtual IList<Document> Get(int offset, int length){return listOperations.Get(offset, length);}
public virtual bool Equals(URIish other){return _uriish == other;}
public virtual IList<string> GetTags(){return Sharpen.Collections.UnmodifiableList(tags.GetTags(queue.QueueName));}
public void DeleteVolume(FileInputStream inFile){volumeManager.DeleteVolume(inFile);}
public override void Decode(int n){Decode(n, m_buf, _stndStart, _stndLength);}
public complex_part(int x, int y){return _empty_complex_part(x, y, _empty_complex_part_num, _empty_complex_part_num, _empty_complex_part_num, _empty_complex_part_num, _empty_complex_part_num_offset, _empty_complex_part_name, _empty_complex_part_name, _empty_complex_part_name_offset, _empty_complex_part_name_offset, _empty_complex_part_name_length_adjustment, _empty_complex_part_num_style, _empty_complex_part_num_style_sub_sub_sub_sub_sub_sub_sub_sub_sub_sub_sub_sub_sub_sub_sub_sub_name_length, _empty_complex_part_name_length, _empty_complex_part_name_length);}
public OR(Token o){throw new System.NotImplementedException();}
public override int Read(int input){return _in.ReadInt(input);}
public virtual void SetLockMessage(string m_message){this.m_message = m_message;}
public virtual DescribeAutoScalingNotificationTypesResponse DescribeAutoScalingNotificationTypes(DescribeAutoScalingNotificationTypesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeAutoScalingNotificationTypesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeAutoScalingNotificationTypesResponseUnmarshaller.Instance;return Invoke<DescribeAutoScalingNotificationTypesResponse>(request, options);}
public static NGit.Api.DiffCommand Create(DiffCommand command, object arg0, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, bool arg7, bool arg8, int arg9, bool arg10, bool arg11, bool arg12, bool arg11, bool arg12, bool arg11, bool arg12, bool arg11, bool arg12, bool arg12, bool arg13, bool arg12, bool arg12, bool arg12, bool_delete){if (delete){return }if (delete){return }return new NGit.Api.DiffCommand(command, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg12, arg12, arg12, arg12, arg13, arg12, arg12, arg13, arg12, arg13, arg12, arg13, arg13, arg12, arg13, arg13, arg12, arg13, arg12, arg13, arg13, arg13, arg13, arg13, arg13, arg13, arg12, arg12, arg12, arg12, arg
public virtual ModifyVpcTenancyResponse ModifyVpcTenancy(ModifyVpcTenancyRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyVpcTenancyRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyVpcTenancyResponseUnmarshaller.Instance;return Invoke<ModifyVpcTenancyResponse>(request, options);}
public virtual void append(char c){append0(c);}
public override string ToHex(int v){return ToHex(v, 2);}
public virtual void Reset(){base.Reset();}
public virtual void Clear(){_list.Clear();}
public Value Get(CellReference cr, CellRangeAddress cell){return GetCellReference(cr, cell.Name, cell.IsRow, cell.IsColRelative, cell.IsRowRelative, cell.IsRowRelative, cell.IsColRelative, cell.IsRowRelative, cell.IsRowRelative, cell.IsRowRelative, cell.IsColRelative, cell.IsRowRelative, cell.IsRowRelative, cell.IsRowRelative, cell.IsColRelative, cell.IsColRelative, cell.IsColRelative, cell.IsRowRelative, cell.IsRowRelative, cell.IsRowRelative, cell.IsRowRelative, cell.IsColRelative, cell.IsRowRelative, cell.IsRowRelative, cell.IsRowRelative, cell.IsRowRelative, cell.IsRowRelative, cell.IsRowRelative, cell.IsRowRelative, cell.IsRowRelative, cell.IsRowRelative, cell.IsRowRelative, cell.IsColRelative, cell.IsRowRelative, cell.IsColRelative, cell.IsRowRelative, cell.IsRowRelative, cell.IsRowRelative, cell.IsRowRelative, cell.IsRowRelative, cell.Is
public override string GetDefaultParameters(){return defaultParams;}
public virtual void DisassociateMemberAccount(MemberAccount @account){this.decrementRefCount(@account.GetMembershipCount());}
public virtual bool isEmpty(){return elements.Count == 0;}
public virtual IList<Document> Get(int offset, int length){return listOperations.Get(offset, length);}
public virtual StemmerType GetStem(string str){return Sharpen.StringHelper.GetStem(str, 0, str.Length);}
public override double Evaluate(int row, int column){return base.Evaluate(row, column);}
public java.nio.charset.CoderResult unmappable_for(int length_1){return new java.nio.charset.CoderResult(this, length_1);}
public SheetIndexOptions {_indexExternSheet = GetSheetName(doc, 0);_externSheet = GetSheetName(doc, 1);_externSheet = GetSheetName(doc, 2);_indexExternSheets = GetSheetName(doc, 3);_externSheet2 = GetSheetName(doc, 4);_externSheet3 = GetSheetName(doc, 3);_externSheet4 = GetSheetName(doc, 2);_externSheet4 = GetSheetName(doc, 4);_externSheet5 = GetSheetName(doc, 3);_externSheet5 = GetSheetName(doc, 3);_externSheet5 = GetSheetName(doc, 2);_indexExternSheets = GetSheetName(doc, 3);_externSheet2 = GetSheetName(doc, 4);_externSheets[=GetSheetName(doc, 3);_externSheets=GetSheetName(doc, 2);_externSheets=GetSheetName(doc, field_2_extern_Sheets
public virtual UpdateVPCLinkResponse UpdateVPCLink(UpdateVPCLinkResponse linkResponse){return UpdateVPCLink(linkResponse.VPCLinkId);}
public FreeRefFunction(FunctionName name, object implementation){return _new(name, implementation);}
public virtual NGit.Storage.File.Record GetRecord(){return this._enclosing.GetRecord(this.name);}
public override Object Get(){return this;}
public void Serialize(StreamOutput out1){out1.Write(this.Serialize(out1));}
public virtual int next(){return this.index;}
public virtual NGit.Storage.File.Entry<K, V> lookup(object id){return lookup(id.GetFile(), id.GetLine(), id.Column, id.RowKey, id.FieldIndex);}
public virtual void AddSortField(string field){m_sortFields[field] = field;}
public override void Delete(BaseTrialComponent comp){this._enclosing.DeleteTrial(comp);}
public virtual string ISO-8859-1 { get; internal set; }
public override string ToString(){return this.GetType().Name + "(parentBlockJoin)";}
public virtual IList<LinkFace> GetLinkFaceLicenses(){return licenses;}
public virtual void SetDeltaCacheSize(int maxCacheSize){this.maxCacheSize = maxCacheSize;}
public MFADevice Create(MFADeviceParameters parameters){if (parameters == null){throw new ArgumentNullException("parameters cannot be null");}return new MFADevice(parameters);}
public virtual string GetEmailAddress(){return email;}
public virtual ObjectId ToObjectId(){return ToObjectId(this);}
public CellValue CellValue(CellValueRecordInterface cellValue): base(cellValue){return _cellValue;}
public DiffOptions SetDiffOptions(){diffOptions = new DiffOptions();}
public GetPhotoStoreRequest(): base(){return new GetPhotoStoreRequest(null, null, null);}
public void SetAccesskey(string key){_accessKey = key;_secret = secret;}
public Sheet Name(int index){return _sheetNames[index];}
public void Clear(){_bitmap.Clear();}
public virtual IList<CacheEntry> GetCacheEntries(){return Sharpen.Collections.UnmodifiableList(listCacheEntries());}
public virtual void fill(char c){fill(c, 0, c.Length);}
public virtual ParseException generateParseException(string message, ParseException e){throw new System.NotImplementedException();}
public virtual CreateUserResponse CreateUser(CreateUserRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateUserRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateUserResponseUnmarshaller.Instance;return Invoke<CreateUserResponse>(request, options);}
public virtual int read(int b){throw new System.NotImplementedException();}
public virtual void Initialize(){map = new Hashtable(default(MapClass.Entry<K, V>());}
public SubnetGroup(string subnetGroupName){return subnetGroupName;}
public virtual ReceiveCommandResult GetError(){return ErrorResponse.FromInternal(GetError());}
public virtual void SetPrimaryDeletionPolicy(DeletionPolicy policy){this.policy = policy;}
public IndexSearcher Set(IndexSearcher o){m_searcher = o;}
public override MutableFPNumber Clone(){return this;}
public virtual int GetHostedZoneCount(){return 0;}
public OutputStream CreateOutputStream(OutputStream outputStream){return new AutoCRLFOutputStream(outputStream);}
public IChartDataSource CreateNumericCellRangeSource(INumericCellRange range){return CreateNumericCellRangeSource(range);}
public virtual void TagApp(string appName){Untags(appName, true);}
public virtual CommitterFilter Filter(CommitterFilter filter){return filter.SetStartOffset(SetStartOffset(filter.SetStartOffset(filter.SetEndOffset(filter.SetStartOffset()));}
public virtual NGit.Api.ClientException ClientException(string message, int errorCode, string errorMessage){throw new NGit.Errors.ClientException(Message, errorCode);}
public virtual string GetFeatureIDString(){return this.featureId.ToString();}
public virtual int GetXBATCount(BlockHeaderBlock block){return _rc4.XBATCount;}
public virtual object Clone(){return this;}
public analyzer and default field {set_analyzer(analyzer);}
public virtual void Initialize(MutableReferenceMap<E> @ref){this._enclosing.Initialize(m_raInstance);}
public virtual int available(){return _buf.position();}
public void SetAlarmState(AlarmState state){this.state = state;}
public virtual void Read(Record record){_in.Read(this.buf, _in.Offset, record.Length);_in.Read(this.buf, _in.Offset, record.Length);_in.Read(this.buf, _in.Offset, record.Length);}
public virtual bool isOpaque(){return this._enclosing._opaque;}
public override bool Evaluate(ValueEval eval){return eval.Evaluate(this);}
public void RemoveRow(IRow row){Row=row.Row;}
public virtual int GetDeltaCacheSize(){return deltaCacheSize;}
public virtual void Classify(XmlDocument doc){Doctypectype = (XmlDocument)doc.GetType();}
public virtual List<Operation> GetOperations(){return operations;}
public IList<ExportJob> GetExportJobsForSegment(int segment){return null;}
public int GetDim(){return GetDim();}
public Subscription CreateSubscription(SubscriptionConfig config){return CreateSubscription(config, null, true, false);}
public virtual void Reinit(){this.lastDocID = -1;this.wordNum = -1;this.word = 0;this.isRtl = false;this.isSynchronized = false;}
public void DeleteSubscription(SpotDataFeedSubscription subscription){SubscriptionControl subscription = (SpotDataFeedSubscription)SubscriptionControl.Current;SubscriptionControl subscriptionControl = SubscriptionControl.Current;SubscriptionControl.Delete(subscriptionControl);}
public virtual int listenerType(){return _listenerType;}
public virtual string GetTitle(){return GetTitle();}
public virtual void write(int b){write(b & 0x00FF);}
public virtual void SetChild(ICharTerm term){this.m_child = term;}
public virtual void write(java.io.OutputStream outputStream){throw new System.NotImplementedException();}
public virtual NGit.Diff.RenameDetector GetRenameDetector(){return _renameDetector;}
public virtual void enqueue(E element){if (element == null){throw new ArgumentNullException("element" )}this.end = true;}
public virtual I18n GetMessage(string locale){return GetMessage(locale, null);}
public Spot Price Request { get; set; }
public virtual void Terminate(List<JobFlow> flows){Terminate(flows);}
public override long Size(){return _size;}
public virtual NGit.Commit ParseCommit(byte[] data){return ParseCommit(data, 0);}
public NumericPayloadTokenFilter CreateNumericPayloadTokenFilter(TokenStream stream){return new NumericPayloadTokenFilter(stream);}
public virtual void DeleteDeviceUsageData(DeviceUsageData app){DeleteInternal(app.GetDeviceUsageData(), app);}
public virtual DescribeExportTasksResponse DescribeExportTasks(DescribeExportTasksRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeExportTasksRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeExportTasksResponseUnmarshaller.Instance;return Invoke<DescribeExportTasksResponse>(request, options);}
public bool SubTotal(int row, int column){return Get(row, column);}
public virtual void append(char c){append0(c);}
public virtual CommitInfo GetCommitInfo(Index index){return commits[index];}
public ProgressMonitor(ProgressMonitor other){this.other = other;}
public virtual StacksListResponse ListStacks(){return ListStacks(null, null, null, null, null);}
public virtual void Get (char[] data){if (_position == -1){_position = data.Length;}else{_position = _position;}Get(data, 0, _position, data.Length, _position, _length);_position += data.Length;}
public bool IsSafe(Pattern pattern){return RegexMatch.IsSafe(pattern.Pattern);}
public override void Visit(Record[] records){Visit(records, 0, records.Length);}
public void Unsubscribe(){_delegate.Unsubscribe();}
public AttendeeBatch(AttendeeQuery query){var batch = new AttendeeBatch(this, query);batch.Add(query);return batch;}
public virtual ConferencePreference CreateConferencePreference(ConferencePreference preference){return preference;}
public virtual ChannelInformation GetChannelInformation(){return channelInformation;}
public virtual string ToASCIIString(CultureInfo locale){return ToASCIIString(locale.TextInfo, locale);}
public override string ValueToString(){return Convert.ToString(Value);}
public virtual void IncrementRefCount(int refCount){refs.Increment(refCount);}
public virtual void DeleteBuildRule(BuildRule rule){DeleteBuildRule(rule.id, rule.buildRule);}
public virtual void DeleteTags(IList<string> tags){_registry.DeleteTags(tags);}
public bool Get(string name){return _objectName == null? false : _objectName.Equals(name, StringComparison.Ordinal) && _objectName.Equals(name, StringComparison.Ordinal) && _objectName.Equals(this.GetType().Name, StringComparison.Ordinal) && _objectName.Equals(this.GetType().Name, StringComparison.Ordinal)) && _objectName.Equals(this.GetType().Name, StringComparison.Ordinal)) && _objectName.Equals("this") && _objectName.Equals(this.GetType().Name, StringComparison.Ordinal)) && _objectName.Equals(this.GetType().Name, StringComparison.Ordinal)) && _objectName.Equals(this.GetType().Name, StringComparison.Ordinal)){_objectName = this._objectName.Name, StringComparison.Ordinal);}
public virtual void SetLocation(Point location){this.location = location;}
public override bool Equals(object o){return listEquals(o);}
public virtual IList<string> GetRootFolders(){return rootFolders;}
public int GetNonNewLineIndex(byte[] b, int ptr){int end = ptr + 1;for (int i = ptr; i < end; i++){byte ch;if ((ch = b[i]) == '\n'){return i;}}return -1;}
public TimeConstraint(TimeConstraint constraint){return constraint;}
public virtual int OverheadRatio(int bits){return 0;}
public virtual Group Create(Path group){return new Group(group, this);}
public virtual java.nio.CharBuffer put(char c){throw new java.nio.ReadOnlyBufferException();}
public virtual ICharSequence Choose(ICharSequence text, IPosition start, IPosition end){return Choose(text, start, end);}
public override void write(int b){throw new System.NotImplementedException();}
public bool Clear(){return false;}
public override void Convert(ToUTF8String(){return;}
public virtual java.util.Iterator<E> iterator(int location){lock (mutex){return c.get(location);}}
public start_walk(){last_walk = start_walk();}
public virtual IList<Cluster> GetClusters(){return clusters;}
public virtual int lastIndexOf(object o){if (o == null){return -1;}return lastIndexOf(o, o.GetHashCode());}
public virtual int previousIndex(){return index;}
public java.nio.ShortBuffer allocate(int capacity_1){return _new(capacity_1);}
public virtual Contact Create(Contact contact){return contact;}
public virtual ReusableDelegationSetDetail GetReusableDelegationSetDetail(){return _delegator.GetReusableDelegationSetDetail();}
public virtual void set(char c){check.position(c.start);c.set(c);}
public override bool Equals(object o){if (o is java.util.MapClass.Entry<K, V>){return true;}java.util.MapClass.Entry<object, object> e = (java.util.MapClass.Entry<object, object>)o;return false;}
public override String ToString(){return "ArrayPtg(offset=" + _position + ", length=" + _length + ")";}
public virtual byte[] EncodeCompressedUnicodeString(string str){return EncodeCompressedUnicodeString(str, 0, str.Length);}
public virtual void InitiateLock(){vaultLock.Acquire(m_ctx);}
public bool hasNext(){return this._enclosing.hasNext();}
public override void SetValue(double newValue){base.SetValue(newValue);}
public virtual void delete(object o){lock (this._enclosing){int oldSize = this._enclosing._size;this._enclosing.remove(o);}}
public virtual ToParentBlockJoinQuery Create(ToParentBlockJoinQuery query){return query;}
public virtual WorkflowType GetWorkflowType(){return null;}
public virtual int length(){return _string.Length / 0.5;}
public virtual void push(E e){push(e);}}
public void ClearCreateDateTimes(){_enclosing.ClearCreateDateTimes();}
public virtual void DisassociateAddress(Address @address){this.deassociateAddress(address);}
public virtual FormatVersionMismatchException(FormatVersionMismatchException) {return FormatVersionMismatch;}
public virtual ModifyVpnTunnelOptionsResponse ModifyVpnTunnelOptions(ModifyVpnTunnelOptionsRequest request){var options = new ModifyVpnTunnelOptionsRequest();options.RequestMarshaller = ModifyVpnTunnelOptionsRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyVpnTunnelOptionsResponseUnmarshaller.Instance;return Invoke<ModifyVpnTunnelOptionsResponse>(request, options);}
public K stemFilter(){return new KStemFilter(this);}
public virtual void Set(E value){this._enclosing.Set(value);}
public virtual void SetRevision(string @string){revision = @string;}
public virtual int GetBeginB(){return beginB;}
public Workbook GetStubWorkbook(){return this.stubWorkbook;}
public Japanese Katakana StemFilter(PersonFilter other){return other;}
public static StemFilter Create(TokenStream input){return new StemFilter(input);}
public virtual bool Matches(IParseTree tree){return _tree!= null? _tree.Matches(this) : false;}
public virtual void Deregister(string ruleName){atn.removeNamespaceMapping(sName);}
public virtual void DeleteToken(){DeleteTokenInternal(null);}
public void DeleteDashboard(Dashboard dashboard){DeleteResource(dashboard.ResourceRecordSet, dashboard);}
public bool Get(int index){return _bitMap[index];}
public virtual int indexOf(object o){return indexOf(o, a.Length - indexOf(o));}
public virtual TerminationResponse Termination(TermRequest request){var options = new InvokeOptions();options.RequestMarshaller = TerminationRequestMarshaller.Instance;options.ResponseUnmarshaller = TerminationResponseUnmarshaller.Instance;return Invoke<TermResponse>(request, options);}
public Filter normalizer { get; internal set; }
public override Explanation Explanation(int doc, float freq){return null;}
public virtual AutoScalingGroup CreateAutoScalingGroup(AutoScalingGroup group){return group.CreateAutoScalingGroup(group);}
public virtual IList<Target> GetTargets(string deploymentName){return deploymentName.Split("-/".ToCharArray());}
public RemovePermissionRequest { get; set; }
public virtual void UpdateUserSecurityProfiles(List<UserSecurityProfile> profiles){UpdateUserProfileProfiles(profiles);}
public virtual void Add(ICharSequence chars){for (int i = 0; i < chars.Length; i++){Add(chars[i]);}}
public virtual void set(object @object){lock (mutex){set(@object);}}
public void DeleteChimeConnectorGroup(AmazonChimeConnectorGroup resource){DeleteAmazonChimeConnectorGroup(resource.ResourceGroupId);}
public override ValueSource MakeQuerySource(){return base.MakeQuerySource();}
public virtual string GetFieldFromExtensionKey(string key){return GetFieldFromExtensionKey(key);}
public virtual IList<string> GetParameterGroups(){return DBCluster.getParameterGroups();}
public virtual void Grow(byte[] b){int n = b.Length;do{Buffer.BlockCopy(b, 0, b, 0, n);n += n;}}
public virtual PersonIdent Parse(string str){return ParseIdent(str, NumberStyles.Integer, false);}
public virtual void print(object obj){print(Sharpen.StringHelper.GetValueOf(obj, AbstractPrintStream.OBJECT_KEY)));}
public FilterInstance(FilterType type, int size, ICharStream input){return new FilterInstance(type, size, input);}
public override string ToString(){return base.ToString() + " " + outerInstance;}
public TableRecord[] GetTables(){return tables;}
public virtual void append(object o){append(o);}
public virtual void DeletePolicy(int policyId){if (policyId == 0){throw new ArgumentException("policy id cannot be zero");}policyCache.Delete(policyId);}
public void Write(char b){Write(b);}
public virtual void AddCommit(ITerminal commit){Commits.Add(commit);}
public override bool IsBinaryString(byte[] b){return base.IsBinaryString(b);}
public Filter<SpeechStop> createJapanesePart(SpeakingStop w,e){return createJapanesePart(w, e);}
public virtual IList<ImageHeader> GetWorkspaceImages(){return images;}
public virtual SearchPhrase SearchPhrase(){return phrase;}
public UnixDir(File dir){return new NGit.Api.Dir(dir);}
public default(int)row = 1;row = 2;}
public virtual void IncrementToken(){index++;}
public void DeleteVoiceStreamingConfiguration(){_voiceStreamingConfiguration = null;}
public virtual bool Equals(java.util.MapClass.Entry<K, V> e){return mapEntryEquals(e.getKey(), e.getValue());}
public virtual string GetErrorElement(){return GetErrorElement().GetErrorText();}
public virtual IdentityCredential Update(IdentityCredential credential){return credential.CopyTo(credential);}
public void DeleteUserPolicy(string userName, string policyName){_userName = userName;_policyName = policyName;}
public override TermRangeQuery Create(TermRangeQuery other){return other;}
public override bool Equals(object o){if (o == this){return true;}return false;}
public void DeleteDBSecurityGroup(string dbSecurityGroupName){DeleteSecurityGroupName(dbSecurityGroupName, true);}
public string ToString(E format){return Format(format, null, 4);}
public Scorer(Query query, Reader reader){_query = query;_reader = reader;}
public virtual string GetEncodedType(int type){return type.ToString();}
public virtual DescribeJobFlowResponse DescribeJobFlow(DescribeJobFlowRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeJobFlowRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeJobFlowResponseUnmarshaller.Instance;return Invoke<DescribeJobFlowResponse>(request, options);}
public virtual ModifyClusterParameterGroupResponse ModifyClusterParameterGroup(ModifyClusterParameterGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyClusterParameterGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyClusterParameterGroupResponseUnmarshaller.Instance;return Invoke<ModifyClusterParameterGroupResponse>(request, options);}
public virtual string ToString(){return GetCanonicalName();}
public virtual void put(byte b){throw new System.NotImplementedException();}
public virtual KeyValuePair Create(string keyName, char[] keyValues, int keyValues, int keyValuesLen){return Create(keyValues, keyValues, keyValues.Length, keyValues.Length, keyValues.Length, keyValues.Length, keyValues.Length, keyValues.Length, keyValues.Length, keyValues.Length, keyValues.Length, keyValues.Length, keyValues.Length, keyValues.Length, keyValues.Length, keyValues);}
public virtual IList<TrafficMirrorSession> GetTrafficMirrors(){return GetTrafficMirrors(null, null);}
public virtual string GetQuery(){return "true";}
public virtual bool HasMoreObjects(){return MoreObjects;}
public virtual int size(){return elements.Length;}
public virtual void DetectStackDrift(int start, int end){CheckStart(start, end);if (start > end){throw new InvalidOperationException("Stack drift after end of file: " + start + " (currently only " + start + "), start at: " + end);}}
public virtual NGit.Api.EventSource CreateAppEventSource(string appName, string eventName, NGit.Api.EventSource eventSource){return CreateAppEventSource(appName, eventName, eventSource);}
public override object ToArray(){return new byte[_limit];}
public Sheet Name(int index){return _externSheetIndex[index];}
public virtual ResolverResolverPolicy GetResolverPolicyDetails(){return info;}
public virtual void SetInstanceIds(int instanceIds){_instanceIds = instanceIds;}
public new char[] writer(int capacity){return new char[capacity];}
public virtual VPNGatewayDetail GetVPNGatewayDetail(){return VPNGatewayDetail(GetGatewayDetail());}
public void SetDefaultValue(int field_1_xf_index){_default_value = field_1_xf_index;}
public virtual bool Equals(Ref @ref){return @ref.Equals(this.@ref) && @ref.GetName() == this.@ref.GetName());}
public override string ToString(){return "0x" + this.GetType().Name + " " + this.GetValueOf("F");}
public override IList<FileHeader> GetFiles(){return primary.GetFiles();}
public virtual java.util.Iterator<E> descendingIterator(E_classicSet_t set){return descendingIterator(this._enclosing, set.entries());}
public virtual void RemoveAllTags(){tags.Clear();}
public int get(string key){return context.get(key);}
public Amazon GuardDuty LabelDetection{start();}
public virtual IList<ParameterGroup> GetParameterGroups(){return internal.GetParameterGroups(null);}
public override long ComputeHash(BytesRef bytes){return murmurhash3_x86_32.ComputeHash(bytes);}
public virtual SmileyResource Get(int id){return smileyResources[id];}
public virtual float FV(int n){return 0.0f;}
public virtual ipmt of the given r with the given per and nper and pv{return ipmt(r, per, nper, pv);}
public long GetOffset(){return file.GetOffset();}
public void Scan(ITable table, int start, int end){Scan(table, start, end);}
public virtual void EndOfTheEvent(ITokenStreamToken tokenStream){delegate1.End(tokenStream);}
public virtual ICollection<K> keys(){return keys(this.enclosing);}
public virtual void Start(){token = TokenConstants.Begin;}
public int GetPrevLF(byte[] buf){return _buf[_ReadIndex--];}
public virtual string[] GetCommitNames(){return commitNames;}
public virtual IList<string> GetPackages(){return packages;}
public virtual SpotDataFeedSubscription DescribeSubscription(){return DescribeSubscription(null, null);}
public virtual void Reset(string newId){if (newId == "CausedBy" && snapshotId!= null){_canWrite = false;_wasWrite = false;_attribute = newId;}else{_attribute = newId;}}
public virtual int NumNodes(){return _nodeCount;}
public virtual MultiTrie Reduce(ReduceFunction reduceFunction){return (MultiTrie)Create(reduceFunction);}
public virtual int HammingDistance(int number){return HammingDistance(number, MidpointGranularity);}
public virtual CreateClusterResponse CreateCluster(CreateClusterRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateClusterRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateClusterResponseUnmarshaller.Instance;return Invoke<CreateClusterResponse>(request, options);}
public virtual MergeChunk.ConflictList GetConflictList(){return conflictList;}
public virtual string{get; set; }
public override void ReadHeader(int level){_main.ReadHeader(level);}
public virtual FourierTransform GetTransform(){return null;}
public virtual string readLine(int index){return _in.readLine();}
public virtual void RegisterTrialComponent(TrialComponent component){this.component = component;}
public void Update(BrainCell cell){_evaluator.Update(cell);}
public virtual StreamDescription GetStreamDescription(){return stream.GetDescriptor(StreamDescription.class);}
public virtual void DeleteGameSessionQueue(int queueName){this.gameSessionQueue.Delete(queueName);}
public virtual NGit.Storage.FileHeader GetObjectHeader(NGit.Storage.FileHeader fileHeader){return _fileHeader;}
public virtual double Evaluate(double x){return Math.Log(x) + Math.Log(y) + Math.Log(z) + (x >= 0? -x : x) + (y >= 0? -y : y);}
public virtual UpdateAPNSModelUpdateAPNSModelResult UpdateAPNSModelUpdateAPNSModelResult(UpdateAPNSModelUpdateAPNSModelResult result){return UpdateAPNSModelUpdateAPNSModelResult(result);}
public virtual void write(java.io.OutputStream outputStream){throw new System.NotImplementedException();}
public blockAccessConfig { get; private set; }
public bool at_end(){return false;}
public virtual HIT[] GetHITs(){return HIT_Default.GetAll();}
public string GetText(IVocabulary vocabulary){return vocabulary.ToString(null, NumberStyles.Integer, vocabulary);}
public virtual SSTInput Copy(){return new SSTInput(this);}
public virtual int lastIndexOf(object o){if (o == null){return -1;}return lastIndexOf(o, o.GetHashCode());}
public virtual void Update(Update application){this.application = application;}
public virtual void SetDecision(Decision decision){this.decision = decision;}
public virtual List<Modification> GetModifications(){return Sharpen.Collections.UnmodifiableList(GetModifications()));}
public void ReadCRN(Record record){_in.Read(crnRecord);}
public virtual ICharSequence<V> CreateUnicodeSequence(ICharSequence<V> chars){return CreateUnicodeSequence(chars, 0, chars.Length);}
public virtual void Footer(int index){index -= 1;}
public virtual NGit.Api.DiffCommand Update(NGit.Api.DiffCommand command){return Command.Execute(command, arguments);}
public virtual void DisassociateMemberFromGroup(Member member){this.Disassociate(member);}
public override void write(byte b){throw new System.NotImplementedException();}
public virtual string GetCommitter(){return committer;}
public override void WriteInt(int value){_out.WriteInt(value);_size += INT_SIZE;}
public virtual string GetGrammar().Name{get; set; }
public override void Fill(byte[] b){Fill(b, 0, b.Length);}
public override string ToString(){return base.ToString() + ".Function(" + m_function + ")";}
public virtual FilePath GetIndexFile(){return index.GetFile();}
public PortugueseLight stem filter(){return new PortugueseLightstemFilter(this);}
public IEnumerator<ThreadState> GetThreadIterator(Term task){return activeThreadIterator(task);}
public override byte[] Format(int v){return Format(v, 0, v.Length);}
public virtual void Diff(DiffCommand cmd){Diff(cmd.Args);}
public override string ToString(){return base.ToString();}
public virtual RawInput GetRawStream(){return rawInput.GetRawStream();}
public override long Length(){return this._enclosing._size;}
public virtual bool IsInSet(int vocabulary){return vocabulary in set;}
public virtual IList<SmartHomeApp> GetSmartHomeApps(){return SmartHomeApp.ListSmartHomeApps(){}
public override void putShort(short v){if (m_buf.hasArray()){v = m_buf.getShort(m_ndx + m_pos + 2);}else{v = m_buf.getShort(m_ndx + m_pos + 2);}}
public virtual NGit.TargetNetworks Information(){return vpn.targets;}
public override string ToString(){return "Transformation(" + str + ")";}
public string GetFederationToken(string appName){return federationToken;}
public override void Do(ITokenStream input){_input = input.GetEnumerator();}
public virtual void UpdatePortSettings(string port){updatePortSettings(port, "127.0.0.1", port);}
public virtual void listChanged(){listChangedInternal(true, true);}
public override List<string> GetProcessTypes(){return supported_process_types;}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_error_code);}
public virtual IParseTree Walk(IParseTree tree){return Visit(tree, null);}
public virtual void RemoveState(State state){this._enclosing.RemoveState( state);}
public virtual ICollection<string> GetEmptySet(){return Sharpen.Collections.EmptySet<string>();}
public default_profile_for_region(string region){return default_profile_for_region(region, null);}
public int row_1_column = 0;public int col_1_row = 0;public int row_1_col = 0;public int col_2_row = 0;public int row_3_cell = 0;public int row_4_cell = 0;public int col_4_cell = 0;return _row_4_cell;}
public bool Matches(AnyValue Value){return Value == null? true : Value.Equals(Value);}
public virtual SourceCommit GetSourceCommit(int index){return sourceCommits[index];}
public void AttachCriticalLink(Link link){Link = link;}
public virtual void RemoveOnPremisesInstance(string tag){if (onPremisesInstances!= null){foreach (OnPremisesInstance instance in onPremisesInstances){RemoveOnPremisesInstance(instance);}}}
public IList<CellReference> GetReferences(CellReference c){return _cellReferences.Values;}
public override void Serialize(ILittleEndianOutput out1){out1.WriteByte(this.m_flag);}
public virtual E peekLast(){return list.peekLast();}
public virtual void DeleteAssociationProposal(AssociationProposal proposal){Gateway gateway = this.node.Gateway;Gateway.DeleteAssociationProposal(Proposal);}
public virtual InstanceDetail InstanceDetail(){return InstanceDetail(null, null);}
public virtual void Set(string value){Debug.Assert(value!= null);}
public void SetSameAs(Row row, SameAs) {Row.SetSameAs(row);}
public virtual bool isEmpty(){return list.isEmpty();}
public override int Decode(int n){return _le.Decode(n);}
public CapitalCaseFilter(TokenStream input){return new CapitalCaseFilter(m_luceneMatchVersion, input);}
public override bool ShouldReuseDeltas(){return false;}
public virtual bool IsErrorRecovery(){return ErrorRecoveryMode;}
public virtual StackSet Create(StackSet arg0){return new StackSet(arg0, arg1, arg2,...);}
public override void Read(ChartStartObjectRecord rec){_in.Read(rec.ChartStartObjectRecord);}
public BRAIRecordSet_gprs(BRAIRecordSet_gprs_record){if (_geoRestrictions == null){_geoRestrictions = new GeoRestrictionList(_geoRestrictions);_geoRestrictions = null;_geoRestrictionsAsBrai = null;_geoRestrictionsAsBrai = null;}
public virtual void DeleteIndex(){_index.Delete();}
public OR(clauses){_clauses = clauses;}
public RecordInputStream(RecordInput stream){this.stream = stream;}
public virtual string GetHostPort(){return host;}
public virtual void removeAt(int index){removeAt(index);}
public void SetColorAt(int index, int color_1){SetColorAt(index, color_1);}
public RevWalk(){return null;}
public override long Length(){return delegate1.Length();}
public override T Get(T key){return this.Get(key, null);}
public virtual bool contains(object o){return map.containsKey(o);}
public virtual void DetachLoadBalancer(LoadBalancer balancer){detachBalancer(balancer, null);}
public virtual E remove(E @object){return remove(@object, true)? remove(@object, true) : remove(@object, true)? remove(@object, true)? remove(@object) : remove(@object, true)? remove(@object) : remove(@object, false);}
public virtual string ToString(CultureInfo culture){return GetCanonicalName(culture);}
public virtual void Update(string templateName){UpdateTemplate(templateName, true);}
public virtual PermissionsCollection GetTemplatePermissions(){return new PermissionsCollection(this);}
public virtual void Remove(string name){names.Remove(name);}
public virtual GetAlbumsResponse GetAlbums(GetAlbumsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetAlbumsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetAlbumsResponseUnmarshaller.Instance;return Invoke<GetAlbumsResponse>(request, options);}
public virtual void write(string b){write(b? "true" : "false");}
public virtual void Delete(EmailIdentity identity){_identity = identity;}
public virtual void Terminate(List<WorkUnit> workspaces){Terminate(workspaces, null);}
public virtual NGit.Diff.Mode GetNewMode(){return mode;}
public bool Equals(FormulaRecord rec){if (rec == this)return true;if (rec.IsFactAcess(this))return true;if (rec.IsFactBogus)return false;return _objectName == objName.BytesEquals(objName);}
public virtual void SetAttribute(string name, string value){object.CopyValue(attributeName, value);}
public override object GetRow(int row){return this.GetChildAt(row).GetRow(row);}
public void DeleteCacheSubnetGroup(string cacheSubnetGroupName){_cacheSubnetGroupName = cacheSubnetGroupName;}
public virtual void Clear(){list.Clear();}
public FileOutputStream CreateFileOutputStream(FilePath file){return new FileOutputStream(file);}
public void DeleteDBClusterParameterGroupGroup(string dbClusterParameterGroupGroupName){DeleteClusterParameterGroupGroupName(dbClusterParameterGroupGroupName);}
public virtual ProblemDetail ProblemDetail(Problem problem){return ProblemDetail(problem.Message, problem);}
public virtual void remove(object o){if (!(o is java.util.MapClass.Entry<K, V>)){return;}java.util.MapClass.Entry<object, object> e = (java.util.MapClass.Entry<object, object>)o;o.remove(e.getKey(), e.getValue());}
public virtual SolverMetrics GetMetrics(){return solutionMetrics;}
public override string ToHex(short value){return ToHex(value, 16);}
public void Register(Amazon.Lambda.ApplicationApplication application){RegisterInstance(application);}
public PrefixAndTruncatorQuery(string prefix, int truncator){_prefix = prefix;_truncator = truncator;}
public void AddHSSFListener(IHSSFListener listener){AddHSSFListener(listener);}
public DataItemRecord(RecordInput in1){return new DataItemRecord(this, in1);}
public virtual void SetDeleteRequestParameters(string requestParameters){_deleteRequestParameters = requestParameters;}
public virtual bool Merged(AnyObjectId id){return pipelineMerged(id);}
public DNSNameUpdate(DNSNameRecord record){return _record.Update(record);}
public void DeleteDeleted3DPxgSheet(SheetRecord sheet){_sheetList.Remove(sheet);_sheetList.ReCreate(true);}
public virtual DescribeCacheEngineVersionsResponse DescribeCacheEngineVersions(DescribeCacheEngineVersionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeCacheEngineVersionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeCacheEngineVersionsResponseUnmarshaller.Instance;return Invoke<DescribeCacheEngineVersionsResponse>(request, options);}
public virtual void reset(){buffer.state = STATE_INIT;}
public Sheet Name(int index){return _sheetNames[index];}
public CookieStickinessPolicy(){return new CookieStickinessPolicyAnonymousInnerClassHelper(this);}
public virtual string GetIndexRevision().GetIndexRevision().GetIndexRevision().GetName().Name){return string.Format(JGitText.GetIndexRevision(this));}
public override void SetExpireTime(int expire){this.expire = expire;}
public override long Read(long longs){return _buf.Read(longs);}
public ValueEval GetExpressionAt(int sourceRow, int sourceColumn){return GetExpressionAt(sourceRow, sourceColumn);}
public virtual void EnableAdminAccount(bool b){_enableAdminAccount(b? "true" : "false");}
public virtual object Clone(){return (object)this;}
public virtual void SetCommandLineParameters(string[] args){for (int i = 0; i < args.Length; i++){args[i] = args[i].Clone();}}
public virtual void InitiateJob(InitiateJobContext context){throw new InvalidOperationException("Job context must be set before starting it.");}
public virtual string GetAccountSendingEnabled(EnumAccountSendingEnabledRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetAccountSendingEnabledRequestMarshaller.Instance;options.ResponseUnmarshaller = GetAccountSendingEnabledResponseUnmarshaller.Instance;return GetAccountSendingEnabled(request, options);}
public override void Serialize(ObjectOutput out1){out1.Write(Serialize(this));}
public virtual void Clear(){DirectoryInfo dir = GetDirectoryInfo(rootDirectory);try{fst.Clear();}catch (DirectoryNotFoundException ){if (dir == null){throw new InvalidOperationException("Directory does not have a valid directory for clearing its contents of the directory.");}}
public virtual string GetBufferAsString(){return buf.GetBufferAsString();}
public virtual string GetMergeInfoString(){return MergedInfo;}
public virtual void Resume(){_enter.Resume();}
public override void Serialize(StreamOutput stream){stream.Write(this.ToString(false));}
public override void Read(RecordReader in1){_in1.Read(backupRecordReader);_in1.Read(reserved1);_in1.Read(reserved2);}
public virtual RevCommit GetNextRevision(){return pending.GetNextRevision();}
public CellReference CreateCellReference(CellReference cr, IIndex row, IIndex column){return new CellReference(cr, IIndex, column);}
public virtual void putShorts(short[] values){for (int i = 0; i < values.Length; i++){putShorts(values[i]);}}
public NumberEval Evaluate(Expression expression){return NumberEval.Evaluate(expression);}
public virtual void DeleteHealthCheck(){ServiceDiscovery discovery = ServiceDiscovery.Create(endpoint);discovery.DeleteHealthCheck(endpoint);}
public virtual void Delete(){_schema = null;}
public virtual int getCodePoint(){return symbolReference.CodePoint;}
public void SetLastColumnRaw(byte raw){lastColumn = raw;}
public virtual int FindEndOfParagraph(int index){return FindEndOfParagraph(index);}
public virtual float read(int offset, int length) {return _in.read(offset, length);}
public virtual void DeleteUser(){EditUser(null);}
public Sheet CreateSheet(RecordStream recordStream){return CreateSheet(recordStream, 0, 0);}
public virtual FetchConnection Open(FetchConnection @in){return @in;}
public RuleQuery GetRules(){return _ruleQuery.Clone();}
public override int ReadShort(){return delegate1.ReadShort();}
public virtual bool contains(object o){if (!(o is java.util.LinkedList<E>)){return false;}java.util.LinkedList<E> e = (java.util.LinkedList<E>)o;return this._enclosing.containsMapping(e.getKey(), e.getValue());}
public virtual void SetUseNaturalLanguageFormulasFlag(bool useNaturalLanguageFormulasFlag){useNaturalLanguageFormulas = useNaturalLanguageFormulasFlag;}
public DomainGroupPostMethod(string path){_path = path;}
public BuilderStart(Scheduler scheduler){return this;}
public virtual GetJobOutputResponse GetJobOutput(GetJobOutputRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetJobOutputRequestMarshaller.Instance;options.ResponseUnmarshaller = GetJobOutputResponseUnmarshaller.Instance;return Invoke<GetJobOutputResponse>(request, options);}
public virtual Export GetExport(){return null;}
public virtual void Stop(EscherExecutionContext context){Sharpen.Extensions.Dispose(context.GetWorkingSet()));}
public string table_to_be_scanned { set; get; set; }
public virtual int GetNumBATEntries(){return _batCount;}
public virtual string ToString(){return GetDescription();}
public virtual void write(string str){write(str.GetBytesForWrite());}
public override byte[] Serialize(Record rec){return Serialize(rec.Record, rec.Offset, rec.RecordSize);}
public float get_weight_optional(short value){return _weight;}
public virtual bool Contains(char sequence){return map.Contains(sequence);}
public LifecyclePolicy(string name, string description){return Sharpen.Extensions.CreateLifecyclePolicy(name, description, start, end);}
public virtual void AddInputDataProcessingConfiguration(IInputDataProcessingConfiguration config){AddInputDataProcessingConfiguration(config);}
public virtual void ReportError(string message, FormatException e){AddItem(message, e);}
public String ToString(){return HSSFErrorConstants.GetText(hssF_1);}
public virtual NGit.Api.FailoverADBClusterRequest failoverADBClusterRequest(string dbClusterId){return failoverAdbClusterRequest(dbClusterId, false);}
public void SetFpgaImageAttribute(FPGAImageAttribute o){if (o.index!= -1){FPGAImageAttribute._offset = o.value.X;}else{FPGAImageAttribute._offset = o.value.Y;}this._fpga = o;}
public Builder for the StandardQueryTree protocol, e.g. NLP, NLP, NLPV4, NLPV6, NLPV4RegisterRequest, EHCIQuery){return new Builder(protocol, e, NLP, NLP, NLP, NLP, NLP, IQuery){IsAtomic = IsAtomic, };
public virtual void Checkout(){checkout(null);}
public FieldDefinition CreateNewField(string name, TokenStream tokenStream, FieldType fieldType){return CreateNewField(name, tokenStream, fieldType);}
public virtual Version[] GetVersions(){return new Version[]{} ;}
public byte[] mainIndexInput = { };return { "crc32", "crc32" };}
public virtual void DecrementNumOfNodeGroupsInGlobalReplicationGroup(){numberOfNodeGroupsInGlobalReplicationGroupDecremented++;}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_precision);}
public DeleteFaceRequest(): base(){return new DeleteFaceRequest(defaultParameters);}
public override String ToString(){StringBuilder sb = new StringBuilder(64);sb.Append(this.GetType().Name);sb.Append(", ").Append(this.Formula.Value);sb.Append("]");return sb.ToString();}
public override bool containsKey(object key){return this._enclosing.containsKey(key);}
public virtual ExtensionRegistry AddExtension(IExtensionRegistry extensionRegistry){return AddExtension<IExtensionRegistry>(extensionRegistry);}
public ObjectWalk(Repository repository, int depth){this.m_repository = repository;this.m_depth = depth;}
public virtual void DeleteRule(Rule rule){Rules.Remove(rule);}
public DeleteMessageRequest(QueueUrl queueUrl, ReceiptHandle receiptHandle){var request = new DeleteMessageRequest();request.QueueUrl = queueUrl;request.ReceiptHandle = receiptHandle;return request;}
public virtual void Commit(Ref commit){this.m_commit = commit;}
public virtual UpdateContainerAgentResponse UpdateContainerAgent(UpdateContainerAgentResponse result){return UpdateContainerAgent(result.AgentId);}
public override object Create(long[] array, start, end){return new NGit.Util.LongArray(array, start, end);}
public LifecycleConfig CreateOrUpdateLifecycleConfig(LifecycleConfig config){var options = new LifecycleConfigOptions();options.LifecycleConfig = config;return LifecycleConfig.CreateOrUpdateLifecycleConfig(config);}
public ExtendedFormat Get(int index){return extendedFormats[index];}
public virtual DescribeVpcPeeringConnectionsResponse DescribeVpcPeeringConnections(){return DescribeVpcPeeringConnections(null, null, null);}
public bool Get(int index){return _bitMap[index];}
public virtual float PMT(INDArray src, int dst, int srcIndex){return _prm.PPM(src, dst, srcIndex);}
public int valueAt(int index){return array[index];}
public override bool Equals(object o){return this._enclosing.Equals(o);}
public virtual Information about a document, including its sub-classes. public virtual Information about(DocumentClassifier doc, string classifierName){return Information about(doc, null);}
public virtual byte[] Decode(byte[] bytes, int offset, int length){for (int i = offset; i < length; i++){byte b = Decode(bytes[i], 16);if (b!= null){int b1 = Decode(bytes, i + offset, length);int b2 = Decode(bytes, i + offset, length);int b3 = Decode(bytes, i + offset, length);for (int i = i + length; i < b3; i++){b3 = Decode(bytes, i + offset, length);}}return b3;}
public virtual void Rewind(int position, int length){index = position;}
public virtual ListRoutesResponse ListRoutes(ListRoutesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListRoutesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListRoutesResponseUnmarshaller.Instance;return Invoke<ListRoutesResponse>(request, options);}
public virtual UpdateDataSourceResponse UpdateDataSource(UpdateDataSourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateDataSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateDataSourceResponseUnmarshaller.Instance;return Invoke<UpdateDataSourceResponse>(request, options);}
public void UpdateHeaderAfterCellShift(ITableCellRangeAddress cellRangeAddress){_updateHeaderAfterCellShift(cellRangeAddress);}
public virtual void AddRole(Role role){RoleInstance other = (RoleInstance)Create(role, role);}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(this.Hue);out1.WriteShort(this.Gain);out1.WriteShort(this.Brightness);out1.WriteShort(this.Brightness);out1.WriteShort(this.AwayDuration);out1.WriteShort(this.Brightness);out1.WriteShort(this.Brightness);out1.WriteShort(this.Brightness);out1.WriteShort(this.AwayDuration);out1.WriteShort(this.Brightness);out1.WriteShort(this.BlowPosition);out1.WriteShort(this.Brightness);out1.WriteShort(this.Brightness);out1.WriteShort(this.AwayDuration);out1.WriteShort(this.Brightness);out1.WriteShort(this.Brightness);out1.WriteShort(this.Brightness);out1.WriteShort(this.AwayDuration);out1.WriteShort(this.Brightness);out1.WriteShort(this.BlowPosition);out1.WriteShort
public virtual string GetIndexVersion(){return IndexVersion;}
public virtual MonitoringSchedule GetMonitoringScheduleResponse GetMonitoringSchedule(string name){return GetMonitoringSchedule(name, null);}
public virtual StreamingDistributionConfiguration GetStreamingDistributionConfiguration(){return null;}
public GetReposRequest(): base(GetRepositoriesRequest()){return GetReposRequest();}
public SharedValueManager(string name){_name = name;}
public override bool ShouldCacheTokens(TokenFilter tokenFilter){return base.ShouldCacheTokens(tokenFilter);}
public User(string username, string password){return User(username, password, "password");}
public override string CreateJobURL(Job job){return "https://stealth.com/jobs/show-up?job=" + job.GetID() + "&state=" + job.State;}
public virtual Query GetQuery(QueryElement element){var query = this.GetQuery(element);if (query == null) return null;return query.GetQuery(element);}
public virtual NGit.Api.TextFile CreateTextFile(string name){return CreateTextFile(name, FileMode.CREATE, 0666);}
public virtual IList<Tag> GetTags(){return new List<Tag> { GetTag(false) };}
public Explanation(Statistics stats, Tfn tfn){Explanation result = new Explanation(stats.Count + ", tfn: " + tfn.ToString());result.AddDetail(stats.Explanation);return result;}
public virtual bool DryRun { get; private set; }
public override String GetDataFormat(){return dataFormat;}
public virtual void AddCategory(string category){cache[category] = true;}
public override void SetValue(double newValue){object.CopyValueOf(backingArray, offset + _position, newValue);}
public virtual IList<ReservedNodeOffer> GetReservedNodes(){return reservedNodes;}
public virtual DescribeVPCEndpointServiceConfigurationsResponse DescribeVPCEndpointServiceConfigurations(DescribeVPCEndpointServiceConfigurationRequestMarshaller.Instance) {return DescribeVPCEndpointServiceConfigurationsResponse.Instance;}
public virtual void throwInvalidMarkException(){throw new System.NotImplementedException();}
public virtual void SetMaxShingleSize(int maxShingleSize){_maxShingleSize = maxShingleSize;}
public void Expand(int row, int column){Expand(row, column);}
public virtual void ChangeMessageVisibility(bool messageVisible){_messageVisible = messageVisible;}
public virtual void StartChatContact(string contactName){this.contactName = contactName;this.startId = System.Convert.ToString(new IdentifierInfo(ContactName));}
public AnalyzerOptions AnalyzerOptions { get; internal set; }
public bool Set(int index, bool value){return _set(index, value);}
public virtual StopRequestParameters SetRequestParameters(StopRequestParameters parameters){RequestParameters = parameters;}
public virtual void SetConfiguration(Configuration config){base.SetConfiguration(config);}
public virtual Parser getParentParser(){return this;}
public virtual void Initialize(TermContext termContext){this.termContext = termContext;}
public override file pointer{return current;}
public virtual void SetNewPrefix(string newPrefix){m_newPrefix = newPrefix;}
public virtual void UpdateProfilingGroup(ProfileProfile group){Update(group.ProfilingGroupID, group.DefaultProfilingGroupID);}
public virtual void EnqueueTransition(Transition t){m_transitions.Add(t);}
public virtual IList<Snapshot> GetSnapshotsInWorkspace(){return workspace.GetSnapshotsInWorkspace(false);}
public virtual int read(byte b){throw new System.NotImplementedException();}
public virtual bool Equals(Loc other){return _lt.Equals(other);}
public void Untag(string resource){Untag(resource, true);}
public default(int)this.lastEntryAlpha = (char)0;this.lastEntryY = (char)0;this.lastEntryAlpha = (char)0;this.lastEntryAlpha = (char)0;this.lastEntryAlpha = (char)0;this.lastEntryAlpha = (char)0;this.lastEntryAlpha = (char)255;this.lastEntryAlpha = (char)255;this.lastEntryAlpha = (char)255;this.lastEntryAlpha = (char)255;this.lastEntryY = (char)0;this.lastEntryY = (char)255;this.lastEntryAlpha = (char)255;this.lastEntryAlpha = (char)255;this.lastEntryAlpha = (char)255;this.lastEntry
public override int SizeOf(bool[] b){return base.SizeOf(b);}
public virtual void SetName(){name = GetNewIdentifier().Name;}
public void Serialize(ImageData out1){Serialize(out1, null);}
public virtual void Reset(){this._enclosing.Reset();}
public virtual void SetTypeInfo(TypeInfo type){this.type = type;this.data = data;}
public DeleteVaultNotificationsRequest(): base(){return new DeleteVaultNotificationsRequest(this);}
public virtual bool IsOldObjectId(int id){return ((object)id == OBJECT_ID_OLD) || (object_id == OBJECT_ID_OLD_ID_OLD_INT32(id)));}
public virtual void DeleteAutoSnapshot(){_writer.DeleteAutoSnapshot();}
public JapanesePartOfSpeechStopFilterFactory(FilterParameters parameters){return new JapanesePartOfSpeechStopFilterFactory(parameters);}
public PredictionContext(PredictionContext parent): base(parent){return parent;}
public override string ToString(){return margin.ToString(CultureInfo.InvariantCulture);}
public window cache setup(eventually){return new java.util.HashMap<K, V>.WindowCache(this._enclosing);}
public virtual void DeleteAttendee(Attendee other){Delete(other.GetAttendeeId());}
public virtual void SetObjectId(ObjectId id){field_1_objectId = id;}
public virtual bool? Evaluate(OperatorToken token){return _operator.Evaluate(token, null);}
public virtual CopySnapshotResponse CopySnapshot(CopySnapshotResponse copySnapshot){return copySnapshot(copySnapshot);}
public virtual bool NoPrefix(string prefix){return null;}
public virtual void DeleteReservedInstances(){_list.DeleteReservedInstances();}
public virtual void DrawLine(ILine line){DrawLine(line);}
public virtual void append(char ch){buffer.append(ch);}
public virtual void Grow(int size){for (int i = size; i < size; i++){System.Array.Copy(array, i, array, i.ArrayOffset + i, array.Length - i);i.Length = i.Length;}}
public virtual void ExplainIDF(IDFRecord record){if (record.Sid!= null){ExplainIDF(record.Sid, record);}}
public void Fill(E value){Fill(value);}}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_units);}
public virtual void SetUpdateFlag(bool b){update = b;}
public virtual E get(K key){return this.get(key, EEntryKind.FLOOR);}
public journey.TreewalkGenerator(options){return new journey.TreewalkGenerator(options);}
public void WriteContinueRecord(ContinueRecord record){_out.Write(record.RecordId);}
public virtual string ToString(){return GetDescription();}
public virtual int decode(byte b){return decode(b, NumberStyles.Integer, CultureInfo.InvariantCulture);}
public override int get(){return _buf.get();}
public virtual DrillDownQuery Clone(){return (DrillDownQuery)this.Clone();}
public override java.nio.ByteBuffer copy(){return copy(this.m_buf, this._buf.Offset, this._buf.Length);}
public virtual void Encode(string text, int length){Encode(text, 0, text.Length);}
public override void Write(int b){Write((long)b, b >> 0);}
public EntityRecognizer CreateEntityRecognizer(Parser parser){return new EntityRecognizer(this, parser);}
public virtual ApplicationSnapshot Create(ApplicationSnapshot other){return other;}
public virtual string GetStatistics(){return active.GetStatisticsAsString();}
public java.nio.LongBuffer newLongBuffer(int capacity){return new java.nio.LongArrayBuffer(capacity);}
public virtual void RepositoryEvent(RepositoryEvent e){RepositoryEvent.Dispatch(e);}
public override void FlushOnEnd(){this.m_flushOnEnd = true;}
public virtual string GetDescription(){return GetDescription() + " on " + this.GetName() + " (resource: " + this.GetResourceString() + ")";}
public override int parent(int ordinal){return this.parent(ordinal);}
public virtual java.nio.charset.CodingErrorAction getErrorAction(){return new java.nio.charset.CodingErrorAction(this);}
public CellRangeAddress GetCellRange(IPosition row, IColumn column){return GetCellRange(row, column);}
public virtual ICollection<ElementReference> GetHierarchies(string name){ICollection<ElementReference> hierarchies = new ArrayList<ICollection<ElementReference>(1);return Sharpen.Collections.UnmodifiableList(hierarchies).Values;}
public virtual ImageScan GetImageScanByTag(string tag){return ImageScan.GetImageScanByTag(tag);}
public override bool isStreamSupported(){return true;}
public virtual bool contains(object o){return this._enclosing.containsValue(o);}
public virtual void Clear(){_limit = 0;}
public virtual java.util.List<E> subList(){return list;}
public virtual IList<EventSource> GetEventSources(){return app.getEventSources();}
public override string ToString(){return this.GetValueOrDefault();}
public S3OriginAccessIdentity(string s3OriginAccessIdentity){_s3OriginAccessIdentity = s3OriginAccessIdentity;_domainName = s3OriginName;_s3OriginId = s3OriginId;}
public virtual StackResource GetResource(string stackName){return stackName;}
public virtual void SendBulkTemplatedEmail(string message){SendBulkTemplatedEmail(message, null, message);}
public DeleteEventRequest parameters { get; internal set; }
public PredictionContext GetCachedPredictionContext(){return _predictionContext;}
public String GetExternalName(String sheetName, String externalSheetNumber){return GetExternalName(sheetName, externalSheetNumber);}
public string getPath(){return path;}
public not_implemented(string name){not_implemented = name;}
public override void Skip(int count){SkipBytes(count);}
public virtual void Reinit(){this.lastDocID = -1;this.wordNum = -1;this.word = 0;this.isRtl = false;this.isSynchronized = false;}
public virtual void DeleteSecurityGroup(string name){throw new System.NotImplementedException();}
public virtual LookupPolicyInformation GetLookupPolicyInformation(){return lookupPolicyInformation;}
public string value(string key){return context.Get(key);}
public override void Clear(byte b){if (b!= 0){cache.Clear(b & 0x00FF);}else{cache.Clear(b & 0x00FF);}}
public GetCloudFrontOriginAccessIdentityRequest(string id){return new GetCloudFrontOriginAccessIdentityRequest(id);}
public ReadReplica(DB instance){return new ReadReplica(this, instance);}
public virtual DescribeExportResponse DescribeExport(){return DescribeExportResponse(GetExportName());}
public new _CapacityProvider_4k(this _capacityProviderType, _capacityProviderConfig){return new _CapacityProvider_4k(this._capacityProvider, _capacityProviderConfig);}
public virtual string list_get_next(){return list_get_first().key;}
public virtual ICollection<E> GetModels(){return models;}
public DVAL record(DVAL value){return new DVAL(this, value);}
public virtual NGit.Api.ParserExtension AddParserExtension(ParserExtension extension){return this;}
public virtual bool canEncode(ICharSequence text){return false;}
public virtual GroupCollection GetMatchingGroups(){return group_collection.GetAllMatchingGroups(null);}
public override string ToString(){return "0";}
public virtual ITemplateAlias CreateTemplateAlias(string name){return new ITemplateAlias(name);}
public virtual OnPremisesInstanceDetail GetInstanceDetail(){return _instanceDetail;}
public virtual string ToString(){return GetCanonicalName();}
public virtual void UpdateChannel(int channel){updateChannel(channel, ADM_CHANNEL_REQUEST);}
public virtual ICollection<Organization> GetOrganizations(){return organizations;}
public virtual void InitializeTokenStream(ITokenStream tokenStream){this.tokenStream = tokenStream;}
public virtual StackResourceStack GetStackResourceStackResponse GetStackResourceStackResponse(){return getStackResourceStackResponseUnmarshaller().GetStackResourceStackResponseUnmarshaller().GetStackResourceStackResponseUnmarshaller().GetStackResourceStackResponseUnmarshaller().GetStackResourceStackResponseUnmarshaller().GetStackResourceStackResponseUnmarshaller().GetStackResourceStackResponseUnmarshaller().GetStackResourceStackResponseUnmarshaller().GetStackResourceStackResponseUnmarshaller().GetStackResourceStackResponseUnmarshaller().GetStackResourceStackResponseUnmarshaller().GetStackResourceStackResponseUnmarshaller.GetStackResourceStackResponseUnmarshaller().GetStackResourceStackResponseUnmarshaller().GetStackResourceStackResponseUnmarshaller().GetStackResourceStackResponseUnmarshaller().GetStackResourceStackResponseUnmarshaller().GetStackResourceStackResponseUnmarshaller().GetStackResourceStackResponseUnmarshaller().GetStackResourceStackResponseUnmarshaller().GetStackResourceStackResponseUnmarshaller().GetStackResourceStackResponseUnmarshaller().GetStackResourceStackResponseUnmarshaller().GetStackResourceStackResponseUnmarshaller()
public virtual string value(){return this.buf.Get(this.off);}
public string lower(char c){return base.lower(c, 0, c.Length);}
public virtual NGit.Api.VPCAttachmentRejectRejectRequest{get();return reject(null, new NGit.Api.VPCAttachmentRejectRequest(this));}
public virtual void AcceptReservedInstanceExchangeQuote(){}
public virtual void Insert(object o){if (!(o is java.util.MapClass.Entry<K, V>)){throw new System.NotImplementedException();}this._enclosing.Insert(o.getKey(), o.getValue());}
public virtual string ToString(){return PersonIdent.ToString();}
public virtual DFA Report(string text, int start, int end){return Report(start, end, "Algorithm: " + this.GetType().Name + ", end:" + this.GetEnd(end), "Algorithm: " + this.GetType().Name);}
public virtual IList<E> GetEnumerator(){return stream.GetEnumerator();}
public override string ToString(){return this.GetType().Name + " " + GetHashCode().ToString("x") + " " + GetFilepass().GetFilepassId();}
public virtual NGit.Storage.File.Ref GetReader(){return (NGit.Storage.File.Ref)this.file.GetReader(this.options);}
public virtual void SetInstanceMetadata(IDictionary<string, string> instanceMetadata){this.m_instance = instance;}
public virtual BooleanQuery Build(IQueryNode query){return Build(query, null);}
public override string ToHex(short value){return ToHex(value, 16);}
public FreqProxPostingsArray(int size){this.size = size;}
public virtual void DeleteCacheParameterGroupName(string parameterGroupName){DeleteCacheParameterGroupName(parameterGroupName);}
public override string ToString(){return "Infinity";}
public virtual Service CreateService(){return this;}
public DirectoryInfo GetParentDirectory(string name){return parentDirectory;}
public virtual NotificationTypes GetNotificationTypes(){return notificationTypes;}
public override string GetValue(){return base.GetValue();}
public virtual int sort(int start, int end){start = start || 0;end = end || int.MaxValue;return dir < 0? -1 : dir * -1;}
public CredentialsProviderUserInfo(Session session, CredentialsProvider credentialsProvider){return new CredentialsProviderUserInfo(session, credentialsProvider);}
public virtual void PurchaseReservedInstanceOffering(ReservedInstanceOffering other){PurchaseReservedInstanceOffering(other);}
public void Clear(){_enclosing.Clear();}
public virtual int GetDeltaBaseId(){return baseId;}
public Lexicons GetLexicons(){return lexicons;}
public CompositeReaderContext SetDocumentSummaryInfoProperty(XmlReader reader, int docNum){return _documentSummaryInfoProperty = reader;}
public UnicodeString AddUnicodeString(UnicodeString str){UnicodeString dst = AddUnicodeString(str);UnicodeString ps = AddUnicodeString(ps);UnicodeString res = AddUnicodeString(ps);UnicodeString codePoint = AddUnicodeString(ps, 0);if (codePoint.Length > 0){dst.Append(codePoint).Append(ps.ToString());}else{dst.Append(codePoint).Append(ps.ToString());}return res;}
public override int copy(){return this._enclosing.copyTo(this, java.nio.ByteBuffer.MIN_VALUE);}
public override string Get(string name){return base.Get(name, StringComparison.Ordinal)?"true" : "false";}
public virtual IValidationType GetValidationType(){return _validationType;}
public virtual void Deleting(File backup){Delete(backup.GetPath());}
public FeatProtection(object data){this._enclosing = data;}
public virtual void IncrementRefCount(int refCount){count += 1;}
public override IList<Preset> GetPresets(){return presets;}
public void Update(Formula formula){_formula = formula;_updateCount = 0;}
public virtual void clear(){map.clear();}
public SeriesRecord[] SeriesRecords = { };return SeriesRecords;}
public void DeleteEndpoint(string endpointName){GatewayEndpoint endpoint = CreateGatewayEndpoint(endpointName);endpoint.Delete();}
public override Label GetSubLabel(int length){return new Label(this, length);}
public virtual void Cancel(){_ingestionOperations = null;}
public java.util.ArrayList<E> set(){this._enclosing = this.clone();this._capacity = set();}
public override string ToString(){return "no operations allowed";}
public virtual IList<ReservedInstanceOffering> GetReservedInstanceOffering[] >(){return reservedInstanceOffering;}
public virtual RevCommit GetRevision(){return current.commit.options.revCommit;}
public virtual string ToString(IFormatProvider provider){return GetCanonicalName(provider);}
public override float Evaluate(int row, int column){return _expression.Evaluate(row, column);}
public virtual T Get(){return this;}
public virtual DescribeDBInstancesResponse DescribeDBInstances(DescribeDBInstancesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDBInstancesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDBInstancesResponseUnmarshaller.Instance;return Invoke<DescribeDBInstancesResponse>(request, options);}
public virtual void Reinit(){this.lastDocID = -1;this.wordNum = -1;this.word = 0;this.isRtl = false;this.isSynchronized = false;}
public virtual void push(string uri){push(uri);}
public override void CallNotesAPI(params object[] args){if (args!= null){foreach (Note a in args){if (a.GetName() == ""){return;}}}return;}
public override void write(java.io.Writer out1){out1.write(this.GetType().GetTypeInfo().FullName);}
public RouteTable(RouteTablespec table): base(table){this.m_table = table;}
public virtual void Consume(IToken token){buf.Append(token);}
public int field_1_enum(){return _le.ReadUByte();}
public virtual UpdateUserRoutingProfileResponse UpdateUserRoutingProfile(UpdateUserRoutingProfileResponse userProfile){return UpdateUserRoutingProfile(userProfile, profileState.MaxUserIndex, profileState.MaxUserIndex, profileState.MaxRouteProfiles, profileState.MaxRouteProfilesPerRoute, profileState.MaxRouteGroupsPerRoute, profileState.MaxRouteGroupsPerRoute, profileState.MaxRouteGroupsPerRoute, profileState.MaxRouteGroupsPerRoute, profileState.MaxRouteGroupsPerRoute, profileState.MaxRouteGroupsPerRoute, profileState.MaxRouteGroupsPerRoute, profileState.RouteGroupsPerRoute, profileState.MaxRouteGroupsPerRoute, profileState.MaxRouteGroupsPerRoute, profileState.RouteGroupsPerRouteGroupsPerRoute, profileState.RouteGroupsPerRoute, profileState.RouteGroupsPerRoute, profileState.RouteGroupsPerRouteGroupsPerRoute, profileState.RouteGroupsPerRoute, profileState.RouteGroupsPerRoute, profileState.RouteGroup, profileState.RouteGroup, profileState.RouteGroupsPerRoute,
public bool contains(cell at row=0, column=0) return true;}
public virtual void Dispose(){domain.TransferLock.Dispose();}
public virtual RepositoryCache.Key CreateExactFileKey(string name){return new RepositoryCache.Key(name, true);}
public virtual NGit.Diff.EndSubRecord GetEndSubRecord(){return GetEndSubRecord(true);}
public virtual Group CreateGroup(Path name){var group = new Group(name);group.PathName = name;group.GroupType = typeof(GroupType);}
public override void SeekToNextTerm(Term term){SeekTo(term.Index);}
public virtual ICollection<E> GetSet(E @object){return this._enclosing.GetSet(@object);}
public virtual void Delete(){base.Delete();}
public bool SetDups(bool useSortedAsList){return _dedupTable.Set(useSortedAsList);}
public virtual void RestoreInstance(Instance instance){objectS3 = instance.S3;objectS3.DeleteInstance(instance);}
public virtual void Delete(Amazon.GuardDuty.AssessmentRun run){Delete(run.GetId());}
public Experiment Update(Experiment experiment){return Experiment;}
public virtual n gFor(string @name){return this.n(@"{0}is a ","true")? "true" : "false";}
public virtual IList<Link> GetLinks(){return internal.GetLinks(false);}
public void Restore(){this._enclosing.Restore();}
public formula string(IList<FormulaAttribute> operands){return _formula.generate(operands);}
public AnalyzerMain(){this.InitializeInstance();this.analyzer = new Analyzer(this);}
public virtual ObjectId GetExpectedOldObjectId(){return expectedOldObjectId;}
public virtual ConferenceProviderDetail GetConferenceProviderDetail(){return conferences;}
public void Remove(int index){RemoveRange(index, index + 1, index); }
public virtual ReceiptRule GetReceiptRule(){return receiptRule;}
public void PutUtf16LE(string s){PutUtf16LE(s, 0, s.Length); }
public virtual void SetText(ICharSequence text, int start, int end){SetText(text, start, end);}
public void ReadRightMargin(Record record){_rc4.SkipTwoRecordBytes();_rc4.WriteRecord(record.RVA);}
public virtual void ExportImage(PngImage image){_image = image;}
public virtual string GetResult(){return this.GetError();}
public virtual NGit.Api.ReflogCommand CreateReflogCommand(){return new NGit.Api.ReflogCommand(this);}
public ICharStream FindEndOfRowOutlineGroup(ITableRecord record){return FindEndOfRowOutlineGroup(record.Row, record.Column, record.RowOffset, record.IsRow, record.IsColRelative, record.IsRowRelative, record.IsRowRelative, record.IsRowRelative, record.IsRowRelative, record.IsRowRelative, record.IsRowRelative, record.IsRowRelative, record.IsRowRelative, record.IsRowRelative, record.IsRowRelative, record.IsRowRelative, record.IsRowRelative, record.IsRowRelative, record.IsRowRelative, record.IsRowRelative, record.IsRowRelative, record.IsRowRelative, record.IsRowRelative, record.IsRowRelative, record.IsRowRelative, record.IsRowRelative, record.IsRowRelative, record.IsRowRelative, record.IsRowRelative, record.IsRowRelative, record.IsColRelative, record.IsRowRelative, record.IsRowRelative, record.IsRowRelative, record.IsRowRelative, record.IsRowRelative, record.IsRowRelative, record.IsRowRelative, record.IsRowRelative, record.IsRow
public virtual void DisassociatePhoneNumbers(string phoneNumber){connection = null;}
public virtual int set_analyzers_num_words(int value){this.value = value;}
public virtual IPAddress GetIpAddress(){return _ipAddress;}
public override string ToString(){return "NotIgnored";}
public virtual SndQuery GetFields(){return new SndQuery(this);}
public vaultName and NotificationConfig for this request.{ vaultName = string.Empty }
public override bool CanExecute(FilePath file){return false;}
public virtual void putChar(char ch){buffer.putChar(ch);}
public java.util.Enumeration<K> keys(){return keys;}
public virtual void Optimize(ITree b){Optimize(b.head, b.tail, b.tail, b.tail, b.tail, b.tail, b.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c.tail, c
public override bool isReadOnly(){return false;}
public void RemoveManagedScalingPolicy(ManagedScalingPolicy policy){this.m_policy = policy;}
public virtual bool isEmpty(){return isEmpty();}
public virtual NGit.Api.VPNClientConfiguration ExportClientVPNClientConfiguration(App app){return clientVPNClientConfiguration.ExportClientVPNClientConfiguration(app);}
public TreeIterator(ITreeIterator treeIter){m_root = treeIter;}
public virtual java.nio.ByteBuffer duplicate(){return duplicate(backingArray, offset + _position);}
public virtual void Reinit(){this.lastDocID = -1;this.wordNum = -1;this.word = 0;this.isRtl = false;this.isSynchronized = false;}
public override double ReadDouble(){return delegate1.ReadDouble();}
public virtual void CreateOrUpdateAppEvents(EscherEvents app, string appName, string field_1_name, string field_2_options){CreateOrUpdateAppEvents(app, appName, field_2_options, field_3_options, field_4_options, field_5_options, field_6_options, field_7_options, field_7_options_group, field_7_options_group, field_7_options_group, field_8_options_group, field_7_options_group, string appName, string field_3_name, string field_4_name, string field_5_name, string field_6_options, field_7_options, field_7_options_group, field_7_options_group, field_7_options_group, field_7_options_group, field_7_options_group, field_7_options_group, field_7_options_group_name, field_7_options_group, field_7_options_group, field_4_name, field_5_name, field_6_name, field_7_name
public virtual void DeleteSnapshot(string dbClusterName){DeleteCluster(dbClusterName);}
public void SetUserData(IDictionary<string, object> userData){this.userData = userData;}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_options);}
public virtual DetectTextResponse DetectText(DetectTextRequest request){var options = new DetectTextRequest();options.RequestMarshaller = DetectTextRequestMarshaller.Instance;options.ResponseUnmarshaller = DetectTextResponseUnmarshaller.Instance;return DetectsText(request, options);}
public virtual void ModifySelfServicePermissions(string roleName){if (string.IsNullOrEmpty(roleName)){throw new ArgumentNullException("roleName cannot be null in ModifySelfServicePermissions()");}string roleName = string.Empty;if (string.IsNullOrEmpty(roleName)){roleName = "ROLE_USER";}else if (string.IsNullOrEmpty(roleName)){roleName = "ROLE_ADMIN";}else if (string.IsNullOrEmpty(roleName)){roleName = roleName.Replace("_", StringComparison.Ordinal);}else if (string.IsNullOrEmpty(roleName)){throw new ArgumentNullException("roleName cannot be null in ModifySelfServicePermissions()");}
public string domain and item names.are the same.  public string domainanditemnames(domainname, itemName) {domainname = domainName;itemname = itemName;}
public virtual void clear(){list.clear();}
public Iterator(Stream input){return new Iterator(this, input);}
public virtual IList<TargetGroup> GetTargetGroups(){return targetGroups;}
public virtual bool IsFastForward(){return IsFastForward();}
public virtual bool IsPeeled(ICharTerm term){return term!= null? IsPeeled(term.Value) : IsLeaf;}
public virtual void SetSecondaryProgress(Progress bar){set_secondary(bar);}
public virtual List<Contact> GetContacts(List<Contact> criteria){return GetContacts(criteria.Values);}
public EvaluationContext CreateEvaluationContext(EvaluationContext context){return null;}
public string set(data){this._input = data;this._inputLen = data.Length;this.check_length();}
public virtual void SetPrediction(double prediction){m_prediction = prediction;}
public void Register(User registerUser){user = registerUser;}
public virtual string ToString(){return GetCanonicalName();}
public override BatchPrediction Create(BatchPrediction batch): base(batch){return base.Create(batch);}
public virtual void SetBounds(IBounds bounds){_bounds = bounds;}
public override void Cancel(){base.Cancel();}
public MemAreaPtg(int len){_len = len;}
public override void SetExceptionArrays(int[] ex_array){base.SetExceptionArrays(ex_array);}
public void SetTokenSeparator(char separator){tokenSeparator = separator;}
public virtual int Decode(int v){return _le.Decode(v);}
public virtual UpdateResponse Update(UpdateRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateResponseUnmarshaller.Instance;return Invoke<UpdateResponse>(request, options);}
public void ResetImageAttribute(){lastDocID = -1;wordNum = -1;}
public virtual NGit.Storage.File.Record GetRecord(){return this._enclosing.GetRecord(this.name);}
public virtual void Add(IText text){this._enclosing.Add(text);}
public virtual void ModifyInstanceCapacityReservation(ServiceInstance instance, long capacity){capacity = capacity;}
public virtual void AddCommit(ICommit commit){this.commit = commit;}
public virtual void setValueAt(int index, V value){object[] newValues = new object[values.Length + 1];System.Array.Copy(values, 0, newValues, 0, values.Length);}
public virtual RecognizePetResponse RecognizePet(RecognizePetRequest request){return RecognizePet(request, null);}
public Permission(string name, string description, bool visible){return _permissionTable[name];}
public virtual NGit.Api.Model CreateOrUpdateModel(string name, NGit.Api.Model model){return GetOrCreateModel(name, model);}
public override void write(int value){throw new System.NotImplementedException();}
public Sheet IndexOf(ExternalReferenceIndex index_1){return _sheetIndexTable[index_1];}
public virtual IList<ReservedInstanceList> GetReservedInstanceLists(){return reservedInstanceLists;}
public virtual DescribeCustomerGatewaysResponse DescribeCustomerGateways(DescribeCustomerGatewaysRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeCustomerGatewaysRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeCustomerGatewaysResponseUnmarshaller.Instance;return Invoke<DescribeCustomerGatewaysResponse>(request, options);}
public virtual void DeleteEmailTemplate(string name){_templateName = name;}
public override bool ShouldRecurse(){return true;}
public virtual IList<Chunk> GetChunks(int start, int end){return GetChunks(start, end);}
public override object Get(int index){return this._enclosing.Get(index);}
public virtual string GetTextAsText(ICharSequence text){return GetText(text, 0, text.Length);}
public ICell GetCellAt(int column){return _cells[column];}
public virtual IQueryBuilder builder{addRange(builder.nodes.Values);}
public HSSFAnchor CreateAnchor(String hSSFName){if (hSSFName.Length == 0){hSSFName = "HSSF: " + hSSFName;}return anchor;}
public virtual AbortMultipartUploadResponse AbortMultipartUpload(AbortMultipartUploadRequest request){var options = new InvokeOptions();options.RequestMarshaller = AbortMultipartUploadRequestMarshaller.Instance;options.ResponseUnmarshaller = AbortMultipartUploadResponseUnmarshaller.Instance;return Invoke<AbortMultipartUploadResponse>(request, options);}
public virtual void SetMessage(string msg){this.m_message = msg;}
public override void Seek(int term){term = term << 3;}
public virtual string GetNewId(){return id;}
public virtual void Update(EscherRefUpdateComponent component){this._enclosing.Update(component);}
public virtual WordReading GetWordAtPosition(int pos){return _wordOffsets[pos];}
public virtual java.nio.Buffer getBuffer(){return _mbean.Buffer(false);}
public override String ToString(){return "false";}
public virtual NGit.Api.RefsChangedListenerAddsNewRefChangedListener(){return this;}
public virtual NGit.Storage.File.Entry GetEntry(string name){return entries[name];}
public void Serialize(ILittleEndianOutput out1){out1.WriteShort(this.Name);out1.WriteByte(_order);}
public virtual double GetLog2(double value){return Sharpen.Util.Log2(value, m_luceneMatchVersion);}
public virtual void Reset(){m_counter = 0;}
public virtual void Reset(State state){this._state = state;}
public override byte ReadByte(){return delegate1.ReadByte();}
public virtual NGit.Storage.File.Record GetRecord(){return this._enclosing.GetRecord(this.name);}
public virtual void StartReplicationGroupMigration(){m_start = System.DateTime.UtcNow.current;}
public virtual HealthCheckResponse GetHealthCheck(HealthCheckRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetHealthCheckRequestMarshaller.Instance;options.ResponseUnmarshaller = GetHealthCheckResponseUnmarshaller.Instance;return Invoke<HealthCheckResponse>(request, options);}
public virtual IList<AssessmentTarget> GetAssessmentTargetsForApp(string appName){return Sharpen.Collections.UnmodifiableList(assessmentTargets.Values);}
public void EnableVpcClassicLinkDNS(int use_virtual_host){_enableVpcClassicLinkDNS(use_virtual_host);}
public override java.nio.FloatBuffer compact(java.nio.FloatBuffer c){return compact(c.getShortBuffer());}
public ParserClass(ICharStream input){this.input = input;this.state = ParserClass.STATE_CHECKING;this.input.SetSyntaxError(GetSyntaxError(input)));}
public virtual AttachVpnGatewayResponse AttachVpnGateway(AttachVpnGatewayRequest request){var options = new InvokeOptions();options.RequestMarshaller = AttachVpnGatewayRequestMarshaller.Instance;options.ResponseUnmarshaller = AttachVpnGatewayResponseUnmarshaller.Instance;return Invoke<AttachVpnGatewayResponse>(request, options);}
public virtual int getColumn(){return _column;}
public virtual DriftStackData GetDrifts(int stackIndex){return _stacks[stackIndex];}
public virtual bool getReleasing(){return this._enclosing.getProperty("reINTERESTING");}
public virtual object Clone(){return (object)array.Clone();}
public java.nio.IntBuffer allocate(int capacity_1){return _java.nio.Memory.allocateIntBuffer(capacity_1);}
public virtual void putDoubleArray(double array){if (array!= null) {putDoubleArray(array, 0, array.Length);}else{putDoubleArray(array, 0, array.Length);}}
public virtual java.nio.CharSequenceBuffer subSequence(java.nio.CharBuffer @object){return new java.nio.ReadWriteCharArraySequence(this._enclosing);}
public void SetRule(string rule, int ruleIndex){this.rule = rule;}
public virtual AccountAttributes GetAccountAttributes(){return AccountAttributes;}
public virtual bool Equals(MultiFunction other){return _operator == null? false : _operator.Equals(other);}
public virtual void VisitAllRecords(Record[] records){VisitAllRecords(records, 0, records.Length); }
public virtual void Heartbeat(ActivityTask task){_heartbeat = task;}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(this.name);out1.WriteShort(this.weight);}
public override string GetDatabaseParameters(){return databases;}
public virtual void BatchUpdate(string phoneNumber){BatchUpdate(phoneNumber, 0, phoneNumber.Length);}
public virtual string get(string key){return values[get(key)];}
public virtual DescribeDisksResponse DescribeDisks(){return DescribeDisks(null, null, null);}
public static multicast.MulticastDomain CreateTransitGatewayMulticastDomain(Transitions gateway){return new multicast.MulticastDomain(gateway);}
public Parser(TokenManager tokenManager){this.tokenManager = tokenManager;}
public virtual int Available(){return _le.Available();}
public virtual E next(){return this.nextEntry();}
public virtual void Delete(StreamProcessor streamProcessor){_streamProcessors.Remove(streamProcessor);}
public virtual IList<PerfTask> GetPerfTasks(){return perfTasks;}
public virtual void Clear(){ClearInternalCache();}
public virtual SlowQueryAutomaton ConvertWildcardQueryToSlowAutomaton(string query){return ConvertWildcardQueryToSlowAutomaton(query);}
public virtual void Set(object o){if (o == null){return;}this[o] = o;}
public Scorer to be used for caching.
public virtual VPNGatewayRequest CreateVpnGatewayRequest(GatewayType gatewayType){var request = new VPNGatewayRequest();request.GatewayType = gatewayType;request.MarshallerVersion = 4;request.MarshallerVersion = 4;request.MarshallerVersion = 2;request.UseQueryString = true;return VPNGatewayRequest(request, gatewayType);}
public override int GetType(int index){return this.type;}
public virtual java.util.MapClass.View tail(){return this._enclosing.getTail(this);}
public virtual NGit.Api.ConfigChangedListener AddConfigChangedListener(ConfigChangedListener listener){return AddConfigChangedListener(listener);}
public virtual void DeleteClientVpnRoute(){clientVpnRoute.Delete(clientVpnRoute.RouteId);}
public VPNConnectionRequest Create(VpnConnectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = VPNConnectionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateResponseUnmarshaller.Instance;return Invoke<VPNConnectionRequest>(request, options);}
public virtual CacheCluster Create(Configuration config){return (CacheCluster)Create(config);}
public void Update(ICell cell){Update(cell.Value);}
public virtual bool contains(object o){return contains(o, null);}
public virtual void SetValue(int, E){values.Add(e);}
public UnknownRecord(){}
public virtual void SetAddFields(ICollection<string> fields){for (int i = 0; i < fields.Count; i++){SetField(fields[i], null);}}
public virtual IdentityVerificationAttributes GetVerificationAttributes(Identity identity){return identity.GetVerificationAttributes();}
public virtual LifecyclePolicy Update(int id){return updates[id];}
public virtual ReusableDelegationSet[] ReusableDelegationSet{ get; private set; }
public virtual void SetJoinWeight(int weight){m_joinWeight = weight;}
public virtual IList<DecideLookaheadInterval> GetDecisionLookaheadIntervals(State state){return null;}
public virtual IList<E> GetEnumerator(){return list.GetEnumerator();}
public virtual void DisassociateResolver(Object o){this._enclosing.DisassociateResolver(o);}
public virtual NGit.Api.VpcEndpointConnection[] Accept(IList<VpcEndpointConnection> connections){return Accept(connections, null, null);}
public virtual void setValue(string newValue){object temp;if (this.lastValueWasThrown)throw new InvalidOperationException("this property has already been set by the ReferenceManager instance.");this.lastValueWasThrown = newValue;this.isAwait = true;this.isAwaitOnChange = false;this.isAwaitOnChange = true;}
public virtual void AddField(string name, int value){fields[name] = new Byte(value);}
public virtual void clear(){_size = 0;}
public virtual void DisassociateRepository(DisassociatingRepository repository){Disassociate(repository);}
public override string ToString(){return "Shard Iterator (" + shardIndex + ")";}
public override void Read(RecordInputStream in1){if (in1.ReadByte()!= 0){throw new System.IO.IOException("Unexpected end of file");}}
public virtual UpdateResult Update(UpdateRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateResponseUnmarshaller.Instance;return Invoke<UpdateResponse>(request, options);}
public override string ToString(){return GetHeaderFooter().ToString();}
public virtual InterconnectLoaDetail GetInterconnectLoaDetail(){return InterconnectLoaDetail.GetInterconnectLoaDetail(this);}
public virtual int Length(char b){return a.Length(b)? a.Length : 0;}
public void RemoveCustomProperties(){_customProperties = null;}
public virtual UpdateBrokerResponse UpdateBroker(UpdateBrokerRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateBrokerRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateBrokerResponseUnmarshaller.Instance;return Invoke<UpdateBrokerResponse>(request, options);}
public virtual string GetOldPrefix(){return oldPrefix;}
public virtual string GetSendQuota(){return Sharpen.Extensions.GetValue(host, config.OUTPUT_QUOTA_BOOKE_SIZE);}
public override java.nio.DoubleBuffer getView(){return this._enclosing.getView(this);}
public virtual DescribeDeploymentGroupsResponse DescribeDeploymentGroups(DescribeDeploymentGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDeploymentGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDeploymentGroupsResponseUnmarshaller.Instance;return Invoke<DescribeDeploymentGroupsResponse>(request, options);}
public p-value(IList<object> args){return _pvalues;}
public virtual DescribeAlarmResponse DescribeAlarm(DescribeAlarmRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeAlarmRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeAlarmResponseUnmarshaller.Instance;return Invoke<DescribeAlarmResponse>(request, options);}
public GetAuthorizationTokenRequest(): base(){return new GetAuthorizationTokenRequest(defaultParameters);}
public override void WriteHeader(int level){out1.WriteShort(level);}
public virtual QueryResults GetResults(){return results;}
public virtual AppDetail GetAppDetail(){return appDetail;}
public virtual IList<Execution> GetExecutions(IList<Execution> criteria){return executionRepository.FindExecutions(criteria);}
public override byte[] GetBytes(){return base.GetBytes();}
public virtual DescribeDomainResponse DescribeDomain(DescribeDomainRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDomainRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDomainResponseUnmarshaller.Instance;return Invoke<DescribeDomainResponse>(request, options);}
public CFRecordsAggregate Get(int index){return (CFRecordsAggregate)_list[index];}
public override long Write(){return base.Write();}
public String representation(CRN crn){return string.Empty;}
public void Serialize(ImageData out1){Serialize(out1, out1);}
public void AddBefore(Record record){if (record.IsNew){AddBefore(record);}}else{AddBefore(record);}}
public virtual void append(char c){append0(c);}
public virtual ModifyCacheClusterResponse ModifyCacheCluster(ModifyCacheClusterResponse result){return ModifyCacheClusterResponse(result);}
public virtual bool Equals(object o){if (o is Document){return true;}return false;}
public virtual void Rename(FilePath file){Rename(file.FullName, file.GetName());}
public virtual void UpdateComponentConfiguration(ComponentConfiguration compConfiguration){this.lastComponentConfiguration = compConfiguration;}
public Main(){Main(null, null, null);}
public virtual char read(char c){throw new System.NotImplementedException();}
public virtual IList<Metric> GetMetrics(){return metrics;}
public CookieStickinessPolicy(string policy){_policy = policy;}
public ComposedQuery Create(SndQuery[] sndQueries){return (new ComposedQuery(this, sndQueries));}
public void writeTo(OutputStream outputStream){stream.write(this.m_buf.GetValue());}
public override long GetReadCount(){return delegate1.GetReadCount();}
public CellRangeAddressList CellRangeAddressList{ get; internal set; }
public virtual UsagePlan Describe(){return Describe(null, null);}
public virtual byte GetCRC(){return crc;}
public virtual void reset(){reader = null;}
public CompositeReaderContext SetShapeType(int shapeType){return (_shapeType == REAL_RECT )? _plainShapeType : _plainObjectType;}
public virtual void Purge(){_delegate.Purge();}
public virtual VPNConnection[] GetVPNConnections(){return VPNConnection.VPNConnections;}
public void Close(){_writer.Release();}
public virtual IList<string> GetEvents(){return listEvents();}
public void Close(){_connection = null;}
public virtual DescribeDataRepositoryTasksResponse DescribeDataRepositoryTasks(DescribeDataRepositoryTasksRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDataRepositoryTasksRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDataRepositoryTasksResponseUnmarshaller.Instance;return Invoke<DescribeDataRepositoryTasksResponse>(request, options);}
public virtual java.util.ListIterator listIterator(int index){return new java.util.ArrayList.ListIterator(this, index);}
public font family family(id) {return family(id) || null;}
public virtual java.util.List<E> subList(){return list;}
public virtual void UpdateWeightsAndCapacities(int capacity, int capacityCount){UpdateWeightsAndCapacities(capacityCount, capacityCount);}
public virtual DescribeWorkspacesResponse DescribeWorkspaces(){return DescribeWorkspaces(null, null);}
public void DeleteAlarms(List<Alarm> alarms){Delete(allarms, 0, alarms.Count);}
public virtual string ToString(IFormatProvider provider){return GetCanonicalName(provider);}
public health check(){this.checkName = GetUniqueName(GetUniqueName());}
public void CreateImage(File file){this.File = file;this.Mode = FileMode.Create;this.File = file;this.File2 = file;this.File3 = file;this.File2 = file;this.File4 = file;this.File5 = file;this.File6 = file;this.File7 = file;this.File6 = file;this.File7 = file;this.File6 = file;}
public virtual java.lang.StringBuilder insert(char[] chars, int start, int length_1){return insert(chars, start, length_1);}
public QueryConfigHandler(QueryConfigHandler queryConfigHandler){_queryConfigHandler = queryConfigHandler;}
public virtual IList<Gateway> GetGateways(){return gateways;}
public virtual SMSTemplate CreateTemplate(string name){return new SMSTemplate(this, name);}
public override string ToString(){return fontName;}
public string GetAccessKeyId(string accessKeyId){return userAccessKeyId;}
public string nameAt(int index){return referenceNames[index];}
public virtual int GetIndex(int nameIndex){return names.Get(nameIndex);}
public virtual ModifyVpcPeeringConnectionOptionsResponse ModifyVpcPeeringConnectionOptions(ModifyVpcPeeringConnectionOptionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyVpcPeeringConnectionOptionsRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyVpcPeeringConnectionOptionsResponseUnmarshaller.Instance;return Invoke<ModifyVpcPeeringConnectionOptionsResponse>(request, options);}
public void SetRule(string rule, int ruleIndex){this.rule = rule;}
public virtual string GetPushMode(){return mode;}
public void DeleteVPCAssociationAuthorization(string associationId){_associationId = associationId;_vpcAssociationAuthorization = null;}
public CellReference CompareCellReference(CellReference other){return CellReference.Compare(this, other);}
public virtual void RemoveLastAuthor(){GetLastAuthor().Remove();}
public ord(){return ord;}
public void DeletePreset(Preset preset){this.Preset = preset;this.IsNew = true;this.IsEditing = false;this.RemoveAt(preset.ID);}
public ListMultipartUploadsRequest(string vaultName){return new ListMultipartUploadsRequest(vaultName, null);}
public retention policy group name { get; set; }
public virtual IList<EntityRecognizer> GetEntityRecognizer(Parser recognizer){return new List<EntityRecognizer>(m_entityRecognizer, null, null, null);}
public virtual Networks DescribeNetworks(){return networks;}
public virtual NGit.Api.StatusCommand GetStatus(){return status;}
public java.lang.NormalisedDecimal getUnit(){return new java.lang.NormalisedDecimal(getUnits());}
public virtual java.util.Iterator<E> iterator(object o){return list.iterator(o);}
public virtual void Diff(int start, int end){Begin:start;End:end;}
public virtual ManagedScalingPolicyDetail GetManagedScalingPolicyDetail(){return _managedScalingPolicyDetail;}
public virtual void DeleteBatch(int size){DeleteRange(size, 0, size);}
public virtual void Attach(object o){AppInstance = o;}
public virtual string GetStateString(){return this.phase.ToString();}
public void Remove(Record record){list.Remove(record);}
public virtual void DeleteKnownHostKeys(string appID){DeleteHostKeys(appID, null);}
public new StemmerTerm(WeightedSpanWeight weight, Term term){return new StemmerTerm(this, weight, term);}
public virtual E next(E e){return this.nextEntry();}
public virtual IList<reservedCacheNode> GetReservedCacheNodes(){return reservedCacheNodes;}
public virtual DeploymentGroup CreateDeploymentGroup(DeploymentGroup deploymentGroup){return deploymentGroup;}
public int valueAt(int index){return array[index];}
public virtual SecurityGroup AuthorizeIngressClusterSecurityGroup(string SecurityGroupId){return new SecurityGroup(SecurityGroupId, "Ingress cluster group with security group ID " + SecurityGroupId);}
public virtual IList<string> GetNodesInCluster(){return GetNodesInClusterInternal(null);}
public FilterInstance(): base(){lastDocID = -1;wordNum = -1;word = 0;}
public virtual string GetPayload(){return this.Payload;}
public virtual void RemoveParseTreeListener(IParseTreeListener listener){list.Remove(listener);}
public void DeleteLambdaTemplateAlias(){LambdaAliasTemplate a = new LambdaTemplateAlias();a.DeleteAlias(FunctionName);}
public virtual void DeleteDirectConnectGateway(string gatewayName){_gatewayName = gatewayName;}
public VoiceConnectorUpdate(ConnectorUpdateRequest request){var options = new InvokeOptions();options.RequestMarshaller = InvokeOptionsMarshaller.Instance;options.ResponseUnmarshaller = InvokeOptionsMarshaller.Instance;return Invoke<ConnectorUpdateResponse>(request, options);}
public ValueEval GetExpressionAt(int sourceRow, int sourceColumn){return GetExpressionAt(sourceRow, sourceColumn);}
public override void Fill(byte[] b){Fill(b, 0, b.Length);}
public String ToString(){return "Empty Workbook";}
public virtual void SetNormValue(double v){m_norm = v;}
public void DeleteDatasetGroup(DatasetGroup datasetGroup){Delete(datasetGroup.Name, null, null);}
public override object Get(int index){return this._enclosing.Get(index);}
public virtual DiffEntry.AnyDiff GetAnyDiff(){return ANY_DIFF;}
public virtual string GetEditListAsString(){return list.GetEditListAsString();}
public virtual char[] getChars(int start, int length){return getChars(start, length);}
public virtual Instances GetInstances(){return new List<Instance>(){ { GetInstance}};}
public virtual NGit.Storage.File.Record GetRecord(){return this._enclosing.GetRecord(this.name);}
public override String ToString(){StringBuilder sb = new StringBuilder(64);sb.Append(this.GetType().Name);sb.Append(", ").Append(this.Formula.Value);sb.Append("]");return sb.ToString();}
public virtual string GetKey(){return this.enclosing.get(this.keyIndex);}
public void Register(DomainRegistration d){records.Add(d);}}
public virtual void PushMode(IToken mode){pushMode(mode);}
public SimpleResponse Create(SimpleResponse response){return Create(response);}
public virtual DescribeVpnConnectionsResponse DescribeVpnConnections(DescribeVpnConnectionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeVpnConnectionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeVpnConnectionsResponseUnmarshaller.Instance;return Invoke<DescribeVpnConnectionsResponse>(request, options);}
public void put(byte[] b){if (m_len >= m_buf.size){throw new java.nio.BufferOverflowException();}p.buffers[m_len++] = b;}
public virtual TreeFilter Clone(){return this;}
public virtual string getRawValue(){return rawValue;}
public void Set(EscherResource resource){this._resource = resource;}
public SimpleQueryParser(){this.analyzer = null;this.field = null;this.type = typeof(TokenScanQueryParser);}
public virtual void DeleteService(Service service){this._enclosing.DeleteService(service);}
public override string GetValue(){return base.GetValue();}
public virtual short[] GetShorts(){return short.Values;}
public virtual void Start(){base.Start();}
public virtual void SetDimensions(IDictionary<string, IList<object>> parameters){this.m_parameters = parameters;}
public virtual DataSet[] ListDataSets(){return dataSets;}
public override FontEncoding GetFontCharset(int value){return font.GetEncoding(value);}
public virtual string ToString(){return ToUniversalString(this);}
public void ReadNext(){_rc4.SkipTwoBytes();}
public override void Validate(){base.Validate();}
public virtual IList<Tag> GetTags(string appName){return list.Tags(appName, StringComparison.Ordinal);}
public virtual void Replace(string replacement){replace(0, replacement);}
public virtual int codepointsInRange(int range){return codepointsInRange(range);}
public SheetReferenceEvaluator SetSheetReferenceEvaluator(SheetReferenceEvaluator evaluator){_evaluator = evaluator;}
public ProposalsResponse GetAllProposals(List<Proposal> proposals){return GetAllProposals(proposals);}
public void RemoveCell(ICell cell){RemoveCell(cell);}
public BitField InstanceForMask(int mask){return InstanceForMask(mask);}
public virtual IList<Script> GetScripts(){return scripts;}
public virtual bool ShouldTraverse(BreadthFirstNode node){return true;}
public virtual int length(char[] text, int offset, int length_1){return length_1.Length;}
public virtual UpdateResult Update(UpdateRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateResponseUnmarshaller.Instance;return Invoke<UpdateResult>(request, options);}
public void RemoveBreak(int break_1){_break = break_1;}
public virtual SpanTerm GetWeightedSpanTerm(IToken token){return GetWeightedSpanTerm(token.Values[0].Value);}
public virtual void SetNoteRefs(int @ref){notes = @ref;}
public virtual int GetLookaheadCount(){return _lookaheadCount;}
public virtual DescribeJobResponse DescribeJob(DescribeJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeJobRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeJobResponseUnmarshaller.Instance;return Invoke<DescribeJobResponse>(request, options);}
public override void SetUp(FieldConfig field){base.SetUp(field);}
public void RemoveCategoryProperty(){_category = null;}
public void SetEmpty(string value){_result = value;}
public virtual bool CheckTransferability(DomainRecord record){return internal.CheckTransferability(record.domainInfo, record.startOffset, record.length, record.endOffset, record.recordId);}
public vertical_border(FieldIndex7dX){this.field_1_vertical_border = null;}
public int capacity ( int capacity){return _capacity = capacity;}
public virtual bool IsThin(ICharStream stream){return GetBoolean(termiatin, "thin");}
public virtual List<ScalingActivity> GetScalingActivities(){return scalingActivities;}
public override bool isReadOnly(){return true;}
public virtual IList<AdjustmentType> GetAdjustments(){return adjustmentTypes;}
public virtual DescribeWorkspaceBundlesResponse DescribeWorkspaceBundles(DescribeWorkspaceBundlesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeWorkspaceBundlesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeWorkspaceBundlesResponseUnmarshaller.Instance;return Invoke<DescribeWorkspaceBundlesResponse>(request, options);}
public virtual IList<SemanticContext> GetTerminologies(){return terminologies;}
public virtual UpdateDataRetentionResponse UpdateDataRetention(UpdateDataRetentionResponse response){return UpdateDataRetention(response.LastModified, response.TotalRetentionTime, response.TotalRetentionUnits, response.TotalDataRetentions, response.TotalDataRetentions);}
public IList<IAMPolicyAssignment> GetUserPolicyAssignments(){return IAMPolicyAssignment[] { };}
public DateTime GetDate(){return GetDate(null, false);}
public virtual PlacementGroup[] GetPlacementGroups(){return placementGroupState.GetPlacementGroups();}
public virtual int GetLength(FilePath file){return GetFilePointer(file);}
public virtual void SetRanges(){range = Ranges.None;end = RangeEnd.None;}
public virtual bool? Evaluate(OperatorToken token){return _operator.Evaluate(token, null);}
public virtual void SetMaxObjectSize(int max){m_max = max;}
public virtual int RamUsageCount(){return _rc4.MemoryUsage().GetUsedInBytes();}
public RuleSet.RuleAt(int index){return _rules[index];}
public override IList<BlockHeader> GetWorkerBlocks(){return base.GetWorkerBlocks();}
public string GetFilePath(int generation){return GetFilePath(generation, 0);}
public virtual void SetApplicationName(string name){this.applicationName = name;}
public virtual void SetSort(string field){this.m_sort = field;}
public GetDownloadUrlRequest(): base(){return new GetDownloadUrlRequest(defaultParameters);}
public virtual IList<Photo> GetPhotos(){return FacebookPhotos;}
public virtual void Enable(bool enabled){this.enabled = enabled;this.disabling = disable;this.enhanced = enabled;}
public virtual Recommendations Report(){return List<Recommendations>(default(Recommendations));}
public override ObjectId GetObjectId(){return this.GetObjectId().GetObjectId();}
public void WriteLong(long value){_out.WriteLong(value);_size += value;}
public override string ToString(){return "0x" + (long)toHexString(fromString());}
public virtual void SetAccessPoint(int accessPoint){objectRef = createReference(accessPoint);}
public bool isEmpty(){return map.isEmpty();}
public override void SeekTo(int index){object[] snapshot = elements;if (index < 0 || snapshot.Length == 0){throw new ArgumentOutOfRangeException("index=" + index + " is out of bounds");}this.position = index;this.closed = true;}
public virtual string GetNonBlankText(XmlElement element){return GetNonBlankText(element);}
public virtual void SetUserName(string user){_user = user;}
public virtual int GetHostedZoneCount(){return 0;}
public RecyclingByteBlockAllocator(){return (RecyclingByteBlockAllocator)_new(this);}
public virtual IEncoding Parse(byte[] b){return _encoders[b.GetIndex()];}
public override long ReadLong(){return delegate1.ReadLong();}
public override long TotalBytesUsed(DocumentDocument doc){return doc.TotalBytesUsed();}
public override int length(){return this._enclosing._size;}
public WikipediaTokenizer: base(){this.tokenizerClass = typeof(WikipediaTokenizer);}
public virtual AmazonGuardDutyAlias ResolveAlias(){return _aliases[0];}
public virtual string get(string key){return path.get(key, StringComparison.Ordinal)? path.get(key, StringComparison.Ordinal) : string.Empty;}
public virtual int GetSLLATNLookaheadOperationsCount(){return _lucene.atn.lookaheadOperationsCount;}
public IPv6AddressArray(byte[]){return new IPAddressArray(address1, address2, address3, address4, address5, address6_len);}
public virtual void ForgetSmartHomeAppliancesForApp(string app){ForgetSmartHomeAppliancesForApp(app);}
public virtual string ToString(IFormatProvider provider){return "Unknown Tree Type: " + GetType().FullName;}
public PatternCaptureGroupTokenFilter CreatePatternCaptureGroupTokenFilter(PatternToken input){return new PatternCaptureGroupTokenFilter(input);}
public virtual void UpdateClusterVersion(){this.node.UpdateClusterVersion();}
public virtual void SetChangeSkipFlag(bool b){changeSkip = b;}
public virtual Vault CreateVaultRequest: base(){return new VaultRequest(this, vaults, null, null);}
public virtual bool contains(object o){return this._enclosing.containsValue(o);}
public ScandinavianFoldingFilter(ScandinavianFoldingFilter source){this.scandinavianFoldingFilter = source;this.scandinavianFoldingFilter = source;this.scandinavianFoldingFilter = source;this.scandinavianFoldingFilter = source;this.scandinavianFoldingFilter = source;this.scandinavianFoldingFilter = source;}
public virtual TelemetryMetadata GetTelemetryMetadata(string appName){return telemetryMetadata;}
public override void fill(object[] values, int value, int arrayOffset, int arrayOffset, int arrayOffset, int arrayOffset, int arrayOffset, int arrayOffset, int arrayOffset, int arrayOffset) {for (int i = 0; i < arrayOffset + arrayOffset; i++){values[i] = values[i];}}
public override string ToString(){return Term.Utf8ToString();}
public override bool IsUserObject(){return true;}
public override ObjectId GetObjectId(int stream){return base.GetObjectId(stream);}
public GetDownloadUrlsRequest(string url){_url = url;}
public void Encode(char b){Encode(b, 0, b.Length, 0);}
public virtual void clear(){map.clear();}
public void SetTokenType(string type){this.Type = type;}
public void SetEnableEbs(bool enable){isEbs = enable;}
public virtual JGitTextBundle GetBundle(){return bundle;}
public override object GetValue(){return this.GetRawValue();}
public virtual bool print(bool b){return b;}
public int size(){return this._enclosing._size;}
public override TreeFilter Clone(){return this;}
public virtual string quote(string s){return quote(s, CultureInfo.InvariantCulture);}
public override char get(char ch){return get(ch, 1);}
public resolver resolver policy { get; private set; }
public virtual int width(char c){return this.characterWidth(c);}
public BeiderMorseFilter(TokenStream input){return new BeiderMorseFilter(input);}
public string GetInflectionForm(int id){return inflectionForm[forId];}
public HIT(string name, HIT_TYPE_PTR): base(name, TYPE_PTR){return HIT_UNASSIGNED;}
public virtual void clear(){map.clear();}
public virtual NGit.Api.Connection AllocateConnection(NGit.Api.Interconnect other){return allocConnection(other);}
public virtual void AddSourceIdentifier(string source){Subscription e = _parent.AddSourceIdentifier(source);}
public virtual string ToString(){return GetInstance().GetName();}
public SimpleRateLimiter(int limit){limit = limit;}
public formula as a string{@link String}
public override object Decode(byte b){return this.Decode(b, 0, b.Length);}
public PagedBytes(int block_bits){return this.Initialize(block_bits, 0);}
public override void Write(IToken t){if (m_len >= m_buf.Length){Resize(m_len + 1);}UnsafeWrite(t);}
public virtual IList<int> Attachments(object o){return appIndexes.Values;}
public override IList<Task> GetExportImages(){return base.GetExportImages(){get_export_image_tasks();}
public override void Validate(Codec codec){CheckCodecName(codec.Name);if (codec.MAGIC!= null){throw new System.IO.IOException("Codec " + codec.MAGIC + " does not exist");}}
public char get(int index){return chars[index];}
public override void SetStemmerAndMinLength(Stemmer stemmer, int minLength){base.SetStemmer(stemmer);}
public default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default operator is AND.The default
public virtual Version CreateDetectorVersion(){return new Version(this, detectorVersion);}
public virtual int Read(byte b){return buf.ReadUpto(b);}
public virtual void SeekTo(File target){SeekTo(target.GetFile(), FileMode.START);}
public int valueAt(int index){return elements[index];}
public ImportRESTAPIsHelper(TypeToken tokenProvider) throws Exception{return Import(tokenProvider.ImportToken());}
public virtual ModifyVpcAttributeResponse ModifyVpcAttribute(ModifyVpcAttributeResponse modifyVpcAttributeResponse){return ModifyVpcAttribute(modifyVpcAttributeResponse.VpcAttributeId);}
public void Set(object o){this._enclosing.Set(o);}
public virtual string Get(string name){return Sharpen.StringHelper.Get(values, name);}
public virtual string GetSourceText(ICharTerm term){return GetSourceText(term);}
public virtual void SetRef(Ref @ref){@ref = @ref.GetRef();}
public virtual IList<GuardDutyFinding> GetGuardDutyFinding(){return null;}
public Portuguese minimal stem filter{get; private set; }
public void Delete(IDictionary<string, V> identityPool){Delete(identityPool.Name, identityPool);}
public int ValueCount(ValueCountType valueCountType){return valueCountType.BitsPerValue;}
public virtual int GetPropertyCount(PropertyInfo info){return _blockList.GetPropertyCount(info.GetAddress());}
public virtual void UpdateClusterSettings(ClusterSettings settings){this.settings = settings;}
public virtual NGit.Storage.File.Record GetRecord(){return this._enclosing.GetRecord(this.name);}
public void SetPassword(Password password){this.password = password;this.SetState(PASSWORD_INITIALIZER);}
public static IList<string> GetSchemaNames(){return new List<string>(){ HOST_NAME_REGEX };}
public virtual string ToString(IFormatProvider provider){return "PackWriter.State[" + this.phase + ", memory=" + this.bytesUsed + "]";}
public virtual void Deregister(StreamConsumer consumer){_consumer = null;}
public virtual IList<TrainingJob> GetTrainingJobs(){return trainingJobs;}
public virtual UpdateClientCertificateResponse UpdateClientCertificate(UpdateClientCertificateRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateClientCertificateRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateClientCertificateResponseUnmarshaller.Instance;return Invoke<UpdateClientCertificateResponse>(request, options);}
public virtual StashCreateCommand StashCreateCommand(){return new StashCreateCommand(this);}
public virtual int Read(int count){return _buf.Read(count);}
public virtual void DeleteFilter(string name){m_filterNames.Remove(name);}
public virtual void Grow(int size){for (int i = size; i < size; i++){System.Array.Copy(elements, i, _array, i + _position, _array.Length);_array[i] = _array[i++];}}
public void Reset() {iterator = null;}
public virtual bool SetFollowFileNames(bool useFileNames){m_followFileNames = useFileNames;}
public void allocate(address @in){throw new System.NotImplementedException();}
public string GetFullYear(DateTime date){return GetFullYear(date);}
public int indexOf(object o){return indexOf(o, this.elements, 0, o.Length);}
public payload token filter { get; set; }
public virtual void append(char c){append0(c);}
public virtual void remove(object key){remove(objectId, true);}
public virtual string GetReferenceLogMessage(){return referenceLogMessage;}
public virtual bool IsAboveMinRep(Significand significand){return Significand.IsAboveMinRep(significand);}
public NGit.ObjectId GetParentOf(Ref @ref){return parent;}
public virtual void append(E e){throw new System.NotImplementedException();}
public Route(string path, string path1, string path2,... args){this.path1 = path1;this.path2 = path2;this.path3 = path3;this.path4 = path4;this.path5 = path5;this.path6 = path6;this.path7 = path7;this.path8 = path8;this.path9 = path9;this.pathN = pathN;this.pathN = pathN;this.pathN = pathN;this.pathN = pathN;this.pathN = pathN;this.pathN = pathN;this.pathN = pathN;this.pathN = pathN;this.pathN = pathN;this.pathN = pathN;this.pathN = pathN;this.pathN = pathN;this.pathN = pathN;this.pathN = pathN;this.pathN = pathN;this.pathN = pathN;this.pathN = pathN;this.pathN = pathN;this.pathN = pathN;this.pathN = pathN;this.pathN =
public virtual PeeringAttachments DescribePeeringAttachments(){return DescribePeeringAttachments(null, null, null);}
public virtual object[] newArray(int length){return newArray(length, 0, length);}
public POIFSDocumentPath(string path){this.m_path = path;}
public ValueEval GetInnerValueForSheetIndex(int sheetIndex){return _innerValues[sheetIndex];}
public virtual string GetDescription(){return GetErrorElement().GetDescription();}
public virtual RenewDomainResponse RenewDomain(RenewDomainResponse response){return ResponseRenewal(response.ToString(), 200);}
public virtual string RevisionOf(IndexCommit commit){return Revision;}
public virtual void ReferenceInvalid(){CheckCallable();}
public virtual float Get(int field){return internal.Get(field, FST.INPUT_TYPE.FLOAT);}
public virtual UpdateMethodResponse UpdateMethod(UpdateMethodResponse methodResponse){return Invoke<UpdateMethodResponse>(methodResponse, methodResponse.Headers);}
public virtual string ToString(){return $"{this.GetType().Name } @{this.GetId().Name}";}
public override int Decode(int n){return _le.Decode(n);}
public override string ToString(){return ExpPtg.ToString(null, null, null);}
public virtual void SetMaxLength(int maxLen){m_maxLen = maxLen;}
public string getRawFragment().Append("<raw_fragment>").Append(EHTMLMessages.RawFragmentHeader).Append(": ").Append(EHTMLMessages.RawFragmentText).Append(":").Append(EHTMLMessages.RawFragmentText).Append(":").Append(EHTMLMessages.RawFragmentText).Append(":").Append(EHTMLMessages.RawFragmentText).Append(":").Append(EHTMLMessages.RawFragmentText).Append(":").Append(EHTMLText).Append(")").Append(EText).Append(EText).Append(ETextContent).Append("]").Append(EHTMLTextFragmentHeader).Append(":").Append(EHTMLTextFragmentText).Append(":").Append(EHTMLTextFragmentText).Append(":").Append(EHTMLTextFragmentText).Append(":").Append(EHTMLTextFragmentText).Append(":").Append(EHTMLTextFragmentText).Append(":").Append(EHTMLText).Append(")").Append(EText).Append(EText).Append(ETextContent).Append(ETextContent).Append(ETextContent).Append(ETextContent
public int FormatIndex(){return formatIndex;}
public override TreeFilter Clone(){return this;}
public virtual IList<string> GetRulesPackages(){return rulesPackages;}
public void Open(){transport = NGit.Transport.Create(transportId);}
public void AddCellRangeAddress(CellRangeAddress rangeAddress){_cells.Add(rangeAddress);}
public virtual string ToString(){return ToUniversalString(this);}
public virtual void SetReaderValue(TextReader value){this.readerValue = value;}
public StreamingDistributionConfigurationDefinitionId(int value){_value = value;}
public virtual E next(E e){return this.nextEntryInTheMap(e.getKey(), e.value);}
public override ICollection<String> GetFunctions(){return supportedFunctions;}
public virtual void SortFinished(){this._enclosing.FinishSorting();}
public virtual int size(){return this._enclosing._size;}
public override bool markSupported(){return false;}
public virtual string GetClusterVersions(){return clusterVersions;}
public virtual float FV(INDArray row, int column, int row_1, int row_2, int row_3, int row_4, int row_5, int row_6, int row_7, int row_8, int row_7, int row_8, int row_9, int row_10, int row_11, int row_12, int row_11, int row_12, int row_11, row_12, row_18, row_18, row_18, row_12, row_18, row_20, row_21, row_24, row_28, row_27, row_28, row_27, row_28, row_27, row_28, row_28, row_29, row_30, row_27, row_27, row_27, row_27, row_27, row_27, row_27, row_27, row_27, row_27, row_27, row_27, row_27, row_27, row_27, row_27, row_27, row_28, row_28, row_28,
public HCenterScenarioProtectRecord GetHCenterScenarioProtectRecord(){return hcenter.getProtectRecord();}
public virtual void append(E e){throw new System.NotImplementedException();}
public virtual java.nio.FloatBuffer buffer(float array_1){return new java.nio.ReadWriteFloatArrayBuffer(array_1);}
public virtual void readFully(byte[] buffer, int offset, int length){throw new System.NotImplementedException();}
public void AddBSERecord(BSERecord record){records.Add(record);}
public override long available(){return delegate1.available();}
public virtual int GetOffsetGap(string field){return 0;}
public virtual void DeleteSnapshotSchedule(SnapshotSchedule schedule){_schedule = schedule;}
public virtual void diagnosticInterrupt(int reason){diagnosticInterrupt(reason, false);}
public virtual string GetTagString(){return GetTagString(true);}
public virtual UpdateReputationMetricsResponse UpdateReputationMetrics(UpdateReputationMetricsRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateReputationMetricsRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateReputationMetricsResponseUnmarshaller.Instance;return Invoke<UpdateReputationMetricsResponse>(request, options);}
public void FillRectangle(IRectangle rectangle){FillRectangle(rectangle);}
public VoiceConnector(VoiceConnectorConfig config){this.connection = createVoiceConnector(config);}
public virtual ModifyNetworkServicesTrafficMirrorFilterRequest networkServices = null;
public virtual string key_1(){return keys[_size++];}
public virtual void Start(){token = TokenConstants.Begin;}
public virtual char[] getChars(){return new char[getChars()].Values;}
public virtual void SetRetentionPeriod(long retentionPeriod){retentionPeriod = retentionPeriod * 2;}
public RemoveFacePhotosRequest(Collection<string> defaultParams){return new RemoveFacePhotosRequest(defaultParams);}
public override void Set(int v){if (m_val!= -1){Set(v);}}
public bool IsRowGroupHiddenByParent(RowGroupElement parent){return Parent is null;}
public virtual void SetFilePointer(long filePointer){filePointer = filePointer;}
public override void Convert(Int32sRef value){Convert.ToInt32s(value.Value);}
public virtual DeliveryStream CreateDeliveryStream(StreamConfig config){return deliveryStreams.CreateDeliveryStream(config);}
public virtual void append(E e){throw new System.NotImplementedException();}
public int get_binary_exponent(){return _exponent;}
public java.lang.StringBuffer append(char c){append0(c);return this;}
public virtual double Min(double[] values){return Min(values, 0);}
public static int PPMT(QuadraticFunction q){return PPMT(q.x, q.y, q.z, q.z_len);}
public virtual CreditSpecification[] GetCreditSpecifications(){return new List<CreditSpecification> { credit_specification_for_instances };}
public virtual IList<string> GetDistributionIDs(){return distributionIDs;}
public virtual void Clear(){_limit = 0;_set.Clear();}
public int Get(int pos){return fields[pos].Value;}
public override bool HasMoreData(){return base.HasMoreData();}
public override string ToString(){return GetDescription();}
public FormulaGroup Create(SharedFormulaRecord record, CellReference first_cell, int first_cell_offset, int first_cell_offset, int first_cell_offset, int first_cell_offset, int first_cell_offset, int first_cell_offset, int first_cell_offset, int first_cell_offset_flags, int first_cell_offset_flags, int first_cell_offset_flags, int first_cell_offset_flags, first_cell_offset_flags, first_cell_offset_flags, first_cell_offset_flags,_cell_offset_flags,_cell_offset_flags,_cell_offset_flags,_cell_offset_flags,_cell_offset_flags,_cell_offset_flags,_cell_offset_flags,_cell_offset_flags,_cell_offset_flags_flags,_cell_offset_flags_flags_flags_flags_flags_flags_flags_flags_flags_flags_flags_flags_flags_flags_flags_flags_flags_flags_flags_flags_flags_flags_flags_flags_flags_flags_flags_flags_flags_flags
public vpc peering authorization { get; private set; }
public void Reset() {ringBuffer.Reset(Constants.RING_BUFFER_STATE_INITIAL);}
public LoginProfileRequest(string user, string password){return ProfileRequest(user, password, "password");}
public virtual void readFully(byte[] buffer, int offset, int length){throw new System.NotImplementedException();}
public Amazon GuardDutyExpression(string expression){_expression = expression;}
public virtual string GetVersion(){return Version.Get(null);}
public virtual int set_max_value(int value){return this._enclosing.set_max_value(value);}
public SelectionRecord CreateSelectionRecord(){return SelectionRecord.Create(this);}
public virtual NGit.Query CreateNamedQuery(string name){return (_query == null)? null : _query.Clone(); }
public virtual DescribeReservedInstances offerings(){return _reservedInstances;}
public virtual void SetMaxScanAndBoundaryChars(int maxScanAndBoundaryChars){m_maxScanAndBoundaryChars = maxScanAndBoundaryChars;}
public virtual VoiceConnectorGroup GetVoiceConnectorGroupResponse GetVoiceConnectorGroupResponse(string voiceConnectorGroupName){return GetConnectorGroupResponseInternal(voiceConnectorGroupName, null);}
public static NGit.Transport.Win32FileSystem NewInstance(){return (new NGit.Transport.Win32FileSystem(null));}
public ResolverEndpoint Update(ResolverEndpoint existingResolverEndpoint){return existingResolverEndpoint;}
public virtual void UpdateSecurityGroups(SecurityGroup securityGroup){updateSecurityGroups(securityGroup.PrivateGroup, securityGroup.RuleDescriptions);}
public void Fill(int nItems){_le.Fill(nItems);}
public virtual bool Equals(LexerActionExecutor other){return _expr == other._expr;}
public TermQuery(){return new TermQuery(this);}
public override void close(){_writer.close();}
public override string ToString(){return this.GetType().Name + "()";}
public virtual bool IsGreatEnough(int level){return _log.IsGreater(level);}
public virtual NGit.Api.CherryPickCommand CreateCherryPickCommand(string command){return new NGit.Api.CherryPickCommand(command);}
public virtual void setLength(int length_1){buffer.length = length_1;}
public virtual void AddTags(IList<string> tags){_tags = tags;}
public virtual void Reset(Session session){_session = session;}
public virtual TrialComponent Info(string component){return trials[component];}
public virtual DescribeLoadBalancerPoliciesResponse DescribeLoadBalancerPolicies(DescribeLoadBalancerPoliciesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLoadBalancerPoliciesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLoadBalancerPoliciesResponseUnmarshaller.Instance;return Invoke<DescribeLoadBalancerPoliciesResponse>(request, options);}
public virtual void SetClassAndScore(string assigned_class, int assigned_score){this.assigned_class = assigned_class;this.assigned_score = assigned_score;}
public virtual IList<string> GetTemplateAliases(){return Sharpen.Collections.UnmodifiableList(templateAliases);}
public java.nio.ByteBuffer slice(java.nio.ByteBuffer offset,_limit) {return byteBuffer.slice(offset, _limit);}
public void WriteByte(int b){out1.WriteByte(b);}
public override void reset(){this._reader.reset();this._enclosing.reset();}
public void ExportJournal(S3Journal export){_export = export;}
public virtual bool isUnmAPPABLE_CHAR(char c){return _em.isUnmAPPABLE_CHAR(c);}
public virtual void DeleteBroker(){_broker = null;}
public virtual ImportVolumeResponse ImportVolume(ImportVolumeRequest request){var options = new InvokeOptions();options.RequestMarshaller = ImportVolumeRequestMarshaller.Instance;options.ResponseUnmarshaller = ImportVolumeResponseUnmarshaller.Instance;return Invoke<ImportVolumeResponse>(request, options);}
public void Read_DeletedArea3DPtg(FieldIndex2FieldData row, int column){_DeletedArea3DPtg = row.FieldIndex2FieldData;}
public char get(int index){return chars[index];}
public SuggestWordQueue(int size, SuggestWordComparer<T> comparer){return new SuggestWordQueue(size, comparer);}
public virtual string substring(string str){return new string(str, 0, str.Length);}
public virtual void SetCommitUserData(string newUserData){m_commitUserData = newUserData;}
public List<HsmConfiguration> GetHsmConfigurations(){return listResource(null, null, null, null, null);}
public virtual void AddPositionSpans(List<PositionSpan> positionSpans){positions.AddRange(positionSpans);}
public CommonToken(TokenSource tokenSource, CharStream stream){return new CommonToken(this, tokenSource);}
public virtual void put(int[] array_1){if (array_1!= null){put(array_1, 0, array_1.Length);}}
public Analyzer CreateAnalyzer(Analyzer analyzer){return analyzer;}
public GetOnlineServiceResultRequest(): base("{serviceName}", StringUtils.FromString(serviceName)){return GetOnlineServiceResult(null, null);}
public virtual void SetStartTime(long val){startTime = val;}
public virtual int fSD(){return fSD;}
public FileOutputStream CreateFileOutputStream(string path){return new FileOutputStream(path, FileMode.Create, path);}
public bool Matches(AnyValue Value){return Value == null? true : Value.Equals(Value);}
public virtual int[] GetV(){return values;}
public virtual void deleteCharAt(int index){char[] text = buffer.Delete(index, this.start, this.end);this.start = null;this.end = null;}
public override long Get(int index){return this.Get(index, out long value)? this._enclosing.Get(index) : null;}
public virtual void Start(){start = true;}
public CellRangeAddress CopyValue(CellRangeAddress other){return other.CopyValue(this);}
public virtual void Start(BundleContext ctx){this.m_ctx = ctx;this.m_preStartCbs = new HashMap<string, IPreStartCbs>();this.m_preStartCbs = new HashMap<string, IPreStartCbs>();this.m_preStartCbs = new HashMap<string, IPreStartCbs>();this.m_postStartCbs = new HashMap<string, IPreStartCbs>(m_preStartCbs), this.m_preStartCbs);this.m_postStartCbs = new HashMap<string, IPreStartCbs>();this.m_preStartCbs = new HashMap<string, IPreStartCbs>();this.m_preStartCbs = new HashMap<string, IPreStartCbs>();this.m_postStartCbs = new HashMap<string, IPreStartCbs>(m_preStartCbs), this.m_preStartCbs);this.m_postStartCbs = new HashMap<string, IPreStartCbs>();this.m_preStartCbs = new HashMap
public void SetChecksumAndBufferSize(int capacity){m_bufferSize = capacity;}
public void DeleteGroup(int groupId){if (groupId == 0){throw new ArgumentException("groupId is a required property and must be set before deleting this group.", "groupId");}if (groupId < 0){throw new ArgumentException("groupId=" + groupId + " and must be positive integer, " + "maxGroupIds=" + groupIds.ToString("x") + " and maxGroupIds=" + maxGroupIds.ToString("x") + " are mutually exclusive");}groupRev = (groupRev)group.Clone();if (groupRev!= 0){throw new InvalidOperationException("group rev must be set before deleting this group.", "group");}if (groupRev > 0){throw new ArgumentException("group rev is a required property and must be positive integer, " + "maxGroupIds=" + groupRev
public void ReadLabelRecord(RecordInputStream in1){ReadLabelRecord(in1);}
public virtual void SetError(String msg){SetError(msg);}
public virtual ValueSource MakeDistanceValueSource(IQueryPoint queryPoint){return GetDistanceValueSource(queryPoint);}
public EditPhotoStoreRequest(File file){return new EditPhotoStoreRequest(file, "GET", true);}
public virtual ExtensionField BuildExtensionField(string key, string field){return BuildExtensionField(key, field, true);}
public virtual bool StartsWith(string prefix, int start){return startsWith(prefix, start);}
public virtual void SetTerminateJobFlowList(List<JobFlow> jobFlowList){terminateJobFlowList = jobFlowList;}
public ExpressionResult Evaluate(int row, int column){return Evaluate(row, column);}
public virtual void DeprecateActivityType(ActivityType type){DeprecateActivityType(type);}
public Formula String(IList<string> str1){return CreateFormulaString(str1, str2, str3, str4, str5, str6, str7, str8, str9, str10, str11, str12, str18, str18, str18_lo, str18_hi, str18_hi, str18_lo, str18_hi, str18_hi, str18_hi, str18_lo, str18_str18_str18_str18_str18_str18);}
public void DisassociateGroup(string groupId){this.Group = null;this.AccountId = null;}
public TreeFilter Create(ICollection<PathFilter> pathFilters){foreach (PathFilter pathFilter in pathFilters){if (pathFilter is TreeFilter){return Create(pathFilter);}}return Create(null, pathFilter.ToArray());}
public override long Read(){return delegate1.Read();}
public override bool Equals(object o){if (o == this){return true;}return false;}
public IAMPolicyAssignment Update(IAMPolicyAssignment policyAssignment){return policyAssignment.Update(iamPolicy);}
public string getResourceUri(){return resourceUri;}
public virtual void SetEncoding(Encoding enc){this.enc = enc;}
public virtual UpdateProfileResponse UpdateProfile(UpdateProfileRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateProfileRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateProfileResponseUnmarshaller.Instance;return Invoke<UpdateProfileResponse>(request, options);}
public override void Serialize(byte[] b, int position, int length){SerializeSimplePart(b, position, length);}
public virtual DescribeClusterSubnetGroupsResponse DescribeClusterSubnetGroups(DescribeClusterSubnetGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeClusterSubnetGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeClusterSubnetGroupsResponseUnmarshaller.Instance;return Invoke<DescribeClusterSubnetGroupsResponse>(request, options);}
public override java.nio.IntBuffer slice(){return new java.nio.ReadWriteIntBuffer(remaining(), backingArray, offset + _position);}
public PersonIdentifierAttribute(string value){this.m_value = value;}
public virtual void SetInstanceGroupsAndJobFlowId(string group, string jobFlowId){_instanceGroups = group;_jobFlowId = jobFlowId;}
public virtual NGit.Storage.FileSnapshot CreateDatabaseSnapshot(NGit.Storage.FileSnapshot fileSnapshot){return new NGit.Storage.FileSnapshot(this, fileSnapshot);}
public virtual void Send(IToken message){throw new System.NotImplementedException();}
public virtual UpdateJourneyResponse Update(UpdateJourneyRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateJourneyRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateJourneyResponseUnmarshaller.Instance;return Invoke<UpdateJourneyResponse>(request, options);}
public virtual BuildDetail GetBuildDetail(){return BuildDetail;}
public void AttachTo(Amazon.GuardDuty.Application app){AttachTo(app.GetGatewayGateway());}
public virtual java.util.ListIterator listIterator(){return new java.util.ArrayList<E>(this._enclosing);}
public virtual string ToString(IFormatProvider provider){return GetCanonicalName(provider);}
public override object Create(IndexableShape shape, int[] shapeValues){return base.Create(shapeValues, 0, shapeValues.Length);}
public override long Read(){return delegate1.Read();}
public virtual bool IsDiffEntry(EntryCt mode, RawMode rawMode){return mode!= rawMode.Value;}
public virtual NGit.Ref Get(string name){return this.Get(name, null);}
public virtual UpdateWorkteamResponse UpdateWorkteam(UpdateWorkteamRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateWorkteamRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateWorkteamResponseUnmarshaller.Instance;return Invoke<UpdateWorkteamResponse>(request, options);}
public virtual void Delete(StreamingDistribution distribution){Delete(distribution.Name, distribution.Version, null);}
public override bool Include(TreeWalk t){return false;}
public FSTTermsReader(TermsIndexReader reader){termAtt = AddAttribute<ICharTermAttribute>();}
public void SetGroup(int group_1){this.group_1 = group_1;}
public virtual Member Create(MemberConfig config){return (Member)Create(config.MemberConfig, config.MemberConfig1);}
public virtual SumAttribute GetSumAttribute(){return sumAttribute;}
public override bool Equals(object o){if (o == this){return true;}return false;}
public override TreeFilter Clone(){return this;}
public virtual void AddCherryPickedObject(object o){AddCherryPickedObject(o);}
public DeleteDomainDomainConfigRequest(string domain, List<DeleteDomainRequest> deletableItems){_domain = domain;_deletableItems = deletableItems;}
public override void Load(DictionayDictionary dictionary){this.load(dictionary);}
public static SelectionRecord Create(RecordInput in1){return new SelectionRecord(in1);}
public virtual User Get(string username){return userInfo.Get(username, null);}
public virtual void Unlink(EscherIdentityRef identity){_identity = identity;}
public virtual TextDetectionInfo GetTextDetection(){return _textDetection;}
public virtual FilterFactory LookupFilterFactory(string name){return _filterFactories.GetOrAdd(name, out FilterFactory factory);}
public override void Encode(int b){EncodeInt32(b, 0, b.Length);}
public virtual bool IsIndexTerm(Term term){return base.IsIndexTerm(term);}
public virtual int GetEncodedSize(){return m_buf.GetEncodedSize();}
public virtual void print(object obj){print(Sharpen.StringHelper.GetValueOf(obj, AbstractPrintStream.OBJECT_KEY)));}
public virtual ICollection<Change> GetChanges(){return changes;}
public virtual string ToString(){return GetCanonicalName();}
public override int GetVersion(){return _version;}
public override FieldInfo GetField(int field){return field;}
public override map: map(string, overridemap: override){this.overrideMap = overrideMap;}
public virtual BindInstance2VpcRequest parameters { get; private set; }
public virtual void Unprecate(WorkflowType type){Deprecate(type);}
public IAMRoleModifications RoleModifications(string role){_role = role;_role = role;_isA = true;return _role;}
public java.net.URI scheme = java.net.URIScheme.UNKNOWN;set_scheme(scheme);}
public virtual ICollection<Face> FindFacesInImage(IMG image, ICollection<Attachment> customHeaders = null, IList<Attachment> customHeaders = null, IList<Attachment> customHeaders = null, IList<Attachment> customHeaders = null, IList<Attachment> customHeaders = null, IList<Attachment> customHeaders = null, IList<Attachment> customHeaders = null, IList<Attachment> customHeaders = null, CancellationToken){GetGraphicFallbacksForGroupsForGroupsForGroupsForGroups=null, List<Attachment> customHeaders = null, CancellationToken cancellationToken = null, CancellationToken.AddCustomHeaders=customHeaders, IList<Attachment> customHeaders = customHeaders, IList<Attachment> customHeaders = customHeaders.AddCustomHeaders, List<Attachment> customHeaders = customHeaders.Add
public virtual void DeleteConfigurationTemplateRequest(string templateRequest, string templateName){DeleteConfigurationTemplateRequest(templateRequest, string.Format(J2N.Text.StringFormatter.InvariantCulture, "{0}
public virtual RouteTablePropagation[] GetRouteTablePropagation(){return null;}
public FieldsConsumer GetFieldsConsumer(){return new BloomFilteredFieldsConsumer(this);}
public int oldModeForParent(int nthParent){return (oldMode & ~(CHILDREN_BY_PARENTS_MASK)).Value;}
public override string ToString(){return "0.0";}
public void Set(T value){this.value = value;}
public void Serialize(StreamOutput out1){out1.Write(this.PackWriter.Buffers[index].Serialize(this));}
public virtual bool Equals(MutableValueDouble other){return _value == other._value;}
public virtual UpdateOrganizationConfigurationResponse UpdateOrganizationConfiguration(UpdateOrganizationConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateOrganizationConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateOrganizationConfigurationResponseUnmarshaller.Instance;return Invoke<UpdateOrganizationConfigurationResponse>(request, options);}
public virtual void SetConditionalFormatting(IConditionalFormatting format){m_conditionalFormatting = format;}
public override int size(){return backingArray.size();}
public virtual IngestionAccountDetail GetIngestionAccountDetail(){return IngestionAccountDetail;}
public ValueEval GetValueEval3D(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9, int arg10, int arg11, int arg12, int arg11, int arg12, int arg11, int arg12, int arg13, int arg13, int arg14, int arg15, int arg16){return GetValueEval3D(arg) + (arg12 * arg11 + arg12 + arg16 + arg12 + arg13 + arg14 + arg15 + arg16 + arg17 + arg18+ arg18+ arg19 + arg19 + arg19 + arg19 + arg19 + arg19 + arg19 + arg19 + arg19 + arg19 + arg19 + arg20 + arg21,
public virtual void append(int b){append0(b? "true" : "false");}
public override void VisitAll(Record[] records){VisitAll(records, 0, records.Length);}
public virtual IXmlDocument Load(Stream input){return Load(input, 0, input.Length);}
public void end(){pos = endOfFile;}
public CRC32(byte[] b){return CRC32(b, 0, b.Length);}
public virtual NGit.Schemas.Property Properties { get; internal set; }
public book sheet index and column index. Convert(book sheet index, column index) to book sheet column index. Convert(book sheet column, index); return book.column;}
public override char get(char ch){return get(ch, 1);}
public ICollection<K> Keys(){return dictionaryNameToID.Keys;}
public virtual RecipeDetail GetRecipeDetail(){return _recipeDetail;}
public Message(string topic, int[] events){_topic = topic;_events = events;}
public virtual WorkGroupDetail GetWorkGroupDetail(){return _workGroupDetail;}
public virtual string Evaluate(int row, int column){return GetString(row, column);}
public virtual int lastIndexOf(object o){if (o == null){return -1;}return lastIndexOf(o, o.GetHashCode());}
public override void Delete(){base.Delete();}
public virtual void Stop(){m_current = null;m_walk = null;}
public virtual bool IsFacetLabelComparer(FacetLabelComparer facetLabelComparer){return facetLabelComparer.Compare(this, facetLabelComparer);}
public void Complete(BioContainer container){container.FinishUpload(container);}
public CodepointCountFilter(TokenStream stream){return new CodepointCountFilter(stream);}
public TagIdParameters(string id){_id = id;}
public virtual void reset(){current.reset();}
public override Font GetFont(){return base.GetFont();}
public void DeleteRecommenderConfiguration(){_recommenderConfigurations = null;}
public virtual CapacityInfo GetCapacityInfo(){return capacity;}
public virtual string[] GetNames(string text){return names;}
public override CommonGramsFilterFactory Create(CommonGramsFilterFactory factory){return new CommonGramsFilterFactory(factory);}
public virtual string GetIndexAsString(){return index.ToString();}
public virtual void Add(IText text){this._enclosing.Add(text);}
public virtual void Stem(IToken token){if (token.IsFinal){SetFinal(token.Stem());}else{SetFinal(token.Stem);}}
public MetricAlarm CreateOrUpdateMetricAlarm(MetricAlarm other){return other;}
public bool ShouldCreateCells(){return empty_cells;}
public virtual void compact(long b){compact(b, 0, b.Length);}
public SpotDatafeedSubscriptionRequest Create(string bucket, int start, int end){return Create(bucket, start, end, null);}
public virtual bool Equals(Toffs other){return outerInstance.Equals(other);}
public RowRecord CreateRow(int row){return new RowRecord(this, row);}
public override void Serialize(EscherObject o){Serialize(o.SerializeView(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null) ||!(o is EscherObject || o is EscherPrimitive) ||!(o is EscherPrimitiveValue) || (o is EscherPrimitiveValue/ null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null); }
public virtual NGit.Diff.Info GetDiff(){return GetDiff(null);}
public virtual void Associate(string address){if (address!= null){unregister(address);}}
public override void markAsRead(){delegate1.markAsRead();}
public virtual void UpdateRuleMetadata(Rule rule){this.rule = rule;this.updateRuleMetadataInternal(rule);}
public escherClientAnchorRecord = new EscherClientAnchorRecord();this.escherClientAnchorRecord = escherClientAnchorRecord;}
public java.util.regex.Matcher matcher(byte[] buffer, int bufferOffset, int bufferLength) { return new java.util.regex.Matcher(buffer, 0, bufferOffset, bufferLength);}
public Azure.Storage.ACS.V1.ACSClient Create(AWSCredentialsProvider provider){return Create(provider, provider.GetClientProfile());}
public virtual IPAddress Deprovisions(IPAddress address){return deprovisions(address.Subnet, address.Ip) || deprovisions(address.UnicastAddress, address);}
public EscherRecord(byte[] data, int offset, int length){Array.Copy(_data, _escherRecordOffset, data, _escherRecord._data, _escherRecord._data, _escherRecord._offset,length);}
public override StemFilter Create(TokenStream stream){return new StemFilter(stream, 0, stream.Length);}
public override bool ToString(){return bool.Parse(this.ToString(CultureInfo.InvariantCulture));}
public virtual int GetOffset(int codePoint){return source.GetOffset(codePoint);}
public virtual IList<PendingMaintenanceAction> GetPendingMaintenanceActions(){return pendingMaintenanceActions;}
public virtual TokenFilter CreateTypeAsPayloadTokenFilter(string typeAsPayloadTokenFilter){return new TokenFilterAnonymousInnerClass(typeAsPayloadTokenFilter, registry, this);}
public virtual void SetDataOutput(DataOutput dataOutput){this._dataOutput = dataOutput;}
public virtual void SetReceiveCommandResult(int result){this._enclosing.SetReceiveCommandResult(result);}
public override void Join(string text, ICharStream input){if (text == null){throw new ArgumentNullException("text");}this.m_text = text;this.m_pos = input.Seek(0);this.m_limit = input.Length;this.m_buf.Append(m_start);this.m_start = 0;this.m_end = 0;this.m_buf.Append(m_end);}
public virtual IList<TestReport> GetDeliveredTestReports(){return GuardDuty.ListTestReports(this);}
public List<Operation> GetOperations(){return operations;}
public override float Get(){return this.GetNative().GetFloat();}
public Font(FontStyleSheet fontStyleSheet): base(fontStyleSheet){lastStyleSheet = fontStyleSheet;fontStyleSheet = new FontStyleSheet(this);}
public virtual void ClearFlags(int c){Clear(c, 0, c.Length);}
public override void ReadFully(byte[] buffer, int offset, int count){int end = offset + count;for (int i = offset; i < count; i++){buffer[i] = _buf[i++];}}
public virtual DescribeNetworkAclsResponse DescribeNetworkAcls(){return DescribeNetworkAcls(new DescribeNetworkAclsRequest());}
public virtual E copy(){return this.copy(null, (E)null);}
public virtual java.util.Set<E> view(E_SET){return _copy(i_set, 0, _size);}
public virtual void SetProductName(string product){ProductName = product;System.IO.WriteLine("Set: ").Append(product);}
public NPOI.SS.UserModel.IDataFormat CreateInstance(String dataFormatName){return CreateInstance<HSSFDataFormat>(dataFormatName, dataFormatNames);}
public virtual NGit.RemoteUpdate GetRemoteUpdate(string name){return GetRemoteUpdate(name, null);}
public ValueSource(List<ValueSource> valueSources){_valueSources = valueSources;}
public void WritePassword(String password){_writer.WritePassword(password);_reader.Refresh(password);}
public virtual Snapshots Describe(){return snapshots;}
public DocsEnum(){this.state = DocsEnum.Initial;}
public NameRecord Get(int index){return records[index];}
public GetLogEventsRequest(GetLogEventsRequestParameters parameters){var request = new GetLogEventsRequest();request.Parameters = parameters;return request;}
public virtual DescribeInstanceRequest request(DescribeInstanceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeInstanceRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeResponseUnmarshaller.Instance;return Invoke<DescribeInstanceRequest>(request, options);}
public virtual void EnterKeypad(int keypad){EnterKeypad(keypad);}
public static double PPMT(IMatrix4x4 matrix){return PPMT(matrix.Row, matrix.Column, 0.5f, 0.8f, 0.8f, 0.8f, 0.8f, 0.8f, 0.8f, 1.8f, 1.8f, 1.8f, 0.8f, 0.8f, 0.8f, 0.8f, 0.8f, 0.8f, 0.8f, 0.8f, 0.8f, 0.8f, 0.8f, 0.8f, 0.8f, 0.8f, 0.8f, 0.8f, 0.8f, 1.8f, 255f, 127f, 127f, 127f, 127f, 127f, 127f, 127f, 127f, 127f, 127f, 127f, 127f, 127f, 127f, 127f, 127f, 127f, 127f, 127f, 127f, 127f, 127f, 127f, 127f, 127f, 127f, 127f, 127f,
public virtual void AssociateIpAddress(){if (_ipAddress!= null){_ipAddress = IPAddress.Parse(_ipAddress, NumberStyles.Integer, _ipAddress);_ipAddress = IPAddress.Parse(_ipAddress, NumberStyles.Integer, _ipAddress);_ipAddress = IPAddress.Parse(_ipAddress, NumberStyles.Integer, _ipAddress);_ipAddress = IPAddress.Parse(_ipAddress, NumberStyles.Integer, _ipAddress);_ipAddress = IPAddress.Parse(_ipAddress, NumberStyles.Integer, _ipAddress);_ipAddress = IPAddress.Parse(_ipAddress, NumberStyles.Integer, _ipAddress);_ipAddress = IPAddress.Parse(_ipAddress, NumberStyles.Integer, _ipAddress);_ipAddress = IPAddress.Parse(_ipAddress, NumberStyles.Integer, _ipAddress);}
public virtual void Disconnect(){end++;}
public virtual IDocumentationPart GetDocumentationPart(){return GetDocumentationPart(null);}
public virtual Member Get(string member){return member == null? null : GetMember(member, null).GetMemberDetails();}
public override string ToHex(int v){return ToHex(v, 2);}
public virtual QueryParser NewQueryParser(ICharStream input){return new QueryParser(this, input);}
public virtual PurchaseReservedDBInstancesResponse PurchaseReservedDBInstances(PurchaseReservedDBInstancesRequest request){var options = new InvokeOptions();options.RequestMarshaller = PurchaseReservedDBInstancesRequestMarshaller.Instance;options.ResponseUnmarshaller = PurchaseReservedDBInstancesResponseUnmarshaller.Instance;return Invoke<PurchaseReservedDBInstancesResponse>(request, options);}
public override float Evaluate(int row, int column){return _function.Evaluate(row, column);}
public virtual void Initialize(BundleContext bundleContext){this.m_bundleContext = bundleContext.Create(m_inputDirectory, m_inputDirectory.Name, m_inputDirectory.NameIndex);this.m_bundleContext.SetInitialDirectoryContext(m_bundleContext.InitialDirectoryContext, m_inputDirectory.NameIndex);this.m_bundleContext.SetInitialDirectoryContext(m_bundleContext.InitialDirectoryContext, m_inputDirectory.NameIndex);}
public List<string> trustedSigners { get; set; }
public virtual IList<StackInstance> GetStackInstances(){return stackInstances;}
public IndexDeletionPolicy GetIndexDeletionPolicy(){return deletionPolicy;}
public override TreeFilter Clone(){return this;}
public static void CreateInstance(object o){CreateInstance(o);}
public virtual ILeafNode createNode(ITreeData node){return new JCG.LeafNode(this, node);}
public virtual string GetSourceAuthor(int index){return sourceAuthor[index];}
public override object Decode(byte b){return this.Decode(b, 0, b.Length);}
public virtual MergeBatchResult Merge(MergeBatchResult * r){return Merge(r.Batch, n);}
public ExternalBookBlock CreateExternalBookBlock(){return ExternalBookBlock.CreateExternalBookBlock(this);}
public virtual void SetExternalRef(ExternalRef @ref){_externalRef = @ref;}
public virtual void DeleteIndex(int index){DeleteInternal(index, true);}
public virtual int lastIndexOf(object o){if (o == null){return -1;}return lastIndexOf(o, 0, o.GetHashCode());}
public void Reset(PARARecordRecord[] h5){H5.Reset(null);}
public virtual Cluster Create(ClusterConfig config){return (Cluster)Create(config, null, 0, 0);}
public virtual List<LifecyclePolicy> GetAppLifecyclePolicies(){return list.GetAppLifecyclePolicies();}
public virtual void setValueAt(int index, V value){object[] newValues = new object[values.Length + 1];System.Array.Copy(values, 0, newValues, 0, values.Length);}
public virtual string GetDisplayName(){return user.GetDisplayName();}
public virtual IIndexableFields CreateIndexableFields(IShape shape, int x, int y){return CreateIndexableFields(shape, x, y, _position, _scale, _offset, _isIndexable);}
public VCenterRecordReader(RecordStream in1){return new VCenterRecordReader(in1);}
public virtual void onAbsorb(object animation){if (animation == null){return;}if (animation.isAbsolute()){animation = android.view.animation.Animation.FRONT.Add(animation);}}
public virtual int indexOf(object o){return indexOf(o, a.Length - indexOf(o));}
public virtual IList<ReservedInstance> GetReservedInstances(){return reservedInstanceList;}
public virtual void append(char c){append0(c);}
public virtual ICollection<E> GetSet(E @object){return this._enclosing.GetSet(@object);}
public override float Get(int row, int column){return 0.0f;}
public override bool ShouldRetainBody(){return true;}
public virtual string GetText(){return marked.Text;}
public virtual NQuery WQuery | NQuery | WQuery | WQuery | NQuery | WQuery | WQuery | NQuery | WQuery | WQuery | NQuery | WQuery | NQuery | WQuery | NQuery | WQuery | NQuery | WQuery | NQuery | WQuery | NQuery | WQuery | NQuery | WQuery | NQuery | WQuery | NQuery | WQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | NQuery | N
public virtual string GetPrefixTerm(){return prefix;}
public virtual void SetInputStream(java.io.InputStream @is){throw new System.NotImplementedException();}
public virtual E set(E e){object[] newElements = new object[elements.Length + 1];System.Array.Copy(elements, 0, newElements, 0, elements.Length);newElements[elements.Length] = e;elements = newElements;return this;}
public virtual void SetReceivePack(Pack pack){this.rpack = pack;}
public Name(){return "built-in";}
public virtual string GetVCenter().GetName(){return VCenter.GetName();}
public virtual string GetScriptText(){return scriptText;}
public void Write(SID x){_out.Write(x);}
public override string ToString(){return base.ToString() + " " + this.GetType().Name;}
public virtual bool remaining(double value){return remaining(value);}
public virtual void Stop(){_contact = null;}
public virtual void DeleteGameServerGroup(string groupName){this.gameServers.Remove(groupName);}
public virtual RecallDetail RecallDetail(Component component){return RecallDetail(component, "recommendation");}
public CJKBigramFilterFactory(){return (CJKBigramFilterFactory)Create(null, CJKBigramFilter.DEFAULT_CHAR_BUFFER_SIZE, CJKBigramFilter.DEFAULT_PARA_SET_SIZE);}
public virtual float v(){return v;}
public override FieldFragList CreateFragList(FieldPhraseList other){return new FieldFragList(other);}
public override bool Include(T path){return Include(path.GetPath(path));}
public virtual string GetRuleContextText(RuleContext ruleContext){return _ruleContext.GetText(ruleContext);}
public override void putDouble(double value){if (value!= 0){throw new System.NotImplementedException();}buffer[offset + _position++] = double.Parse(value, CultureInfo.InvariantCulture);}
public virtual NotificationConfiguration[] GetNotificationConfigurations(){return notificationConfigurations;}
public virtual void Delete(DeleteItemEventArgs args){var o = new DeleteItemEventArgs(args);o.Name = args.Name;o.Attributes = args.Attributes;}
public override ObjectId GetObjectId(){return null;}
public virtual UserGroupsCollection GetUserGroups(){return userGroups;}
public void SetRange(int range){_range = range;}
public virtual V evaluate(double x){return evaluate(x, y);}
public virtual FindingsList Findings(FindingsRequest request){var options = new InvokeOptions();options.RequestMarshaller = FindingsRequestMarshaller.Instance;options.ResponseUnmarshaller = FindingsListUnmarshaller.Instance;return Invoke<FindingsList>(request, options);}
public Rule Rule(List<FormattingRule> rules){return AddRule(rules);}
public virtual BatchWriteResponse BatchWrite(BatchWriteRequest request){var options = new InvokeOptions();options.RequestMarshaller = BatchWriteRequestMarshaller.Instance;options.ResponseUnmarshaller = BatchWriteResponseUnmarshaller.Instance;return Invoke<BatchWriteResponse>(request, options);}
public virtual object CopyRange(object[] array, int arrayIndex, int arrayIndex, int arrayIndex, int arrayIndex, int arrayIndex, int arrayIndex, int arrayIndex, int arrayIndex, int arrayIndex, int arrayIndex, int arrayIndex, int arrayIndex, int arrayIndex, int arrayIndex, int arrayIndex, int arrayIndex, int arrayIndex, int arrayIndex, int arrayIndex, int arrayIndex, int arrayIndex, int, int, bool isFinite, bool isFinite, bool, bool, bool, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, bool, float, float, float, float, float, float, float, float, float, float, float, float, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float,
public void WriteInt64(int value){_out.WriteInt64(value);_size += 8;}
public virtual string Format(IPosition position, string text) {return GetRuleNames(position);}
public bool HasMoreKeys(){return _keys.Count > 0;}
public string representation(Automaton automaton_1){return Sharpen.StringHelper.GetAutomatonName(automaton_1);}
public VaultAccessPolicy(string vaultName, string accessPolicy){_vaultName = vaultName;_accessPolicy = accessPolicy;}
public virtual void DisassociateIPAddr(string address){_networkingEndpoint.DisassociateIPAddr(address);}
public virtual void Clear(){map.Clear();}
public virtual Function FindFunction(String name){return FindFunction(name, true);}
public virtual void SetStartCommit(string startCommit){m_startCommit = startCommit;}
public override string ToString(){return "window(" + _windowIndex + ")";}
public int value(Pattern pattern){return value(pattern.AllTokensAndOffsets[0])? value(pattern.AllTokensAndOffsets[0]) : -1;}
public virtual ClientCertificate GenerateClientCertificate(X509EncodedCertificate2 certificate){return ClientCertificate.Create(certificate);}
public VPNConnectionRoute(string VPNConnectionName){_vpnConnectionRoute = new VPNConnectionRoute(VPNConnectionName);}
public override void putDouble(double value){if (value!= 0){throw new System.NotImplementedException();}buffer[offset + _position++] = double.Parse(value, CultureInfo.InvariantCulture);}
public virtual void StartWorkspaces(){StartWorkspaces(null);}
public override void putDouble(double value){if (value!= 0){throw new System.NotImplementedException();}buffer[offset + _position++] = double.Parse(value, CultureInfo.InvariantCulture);}
public int[] GetValues(byte b){return new int[values.Length];}
public BeiderMorseFilter(Input input, PhoneticEngine engine, languages): base(input){this.engine = engine;this.languages = languages;return new BeiderMorseFilter(this, input);}
public virtual DescribeProjectResponse DescribeProject(DescribeProjectRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeProjectRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeProjectResponseUnmarshaller.Instance;return Invoke<DescribeProjectResponse>(request, options);}
public virtual string substring(string str){return new string(str, 0, str.Length);}
public virtual AcceptVpcPeeringConnectionResponse AcceptVpcPeeringConnection(AcceptVpcPeeringConnectionResponse response){return AcceptVpcPeeringConnection(response);}
public virtual UpdateDistributionRequest UpdateDistributionRequest(UpdateDistributionRequest request){return request;}
public StopSet GetDefaultStopSet(){return defaultStopSet;}
public string getAbsolutePath(){return path.GetAbsolutePath();}
public string toString(){return this.getPath().toString();}
public virtual RecipesCollection Recipes(List<RecipEntry> recipes){return recipes;}
public virtual StartTopicDetectionJobRequest StartTopicDetectionJobRequest(string topic, string topic2, int topic3, int topic4, int topic5, int topic6, int topic7, int topic8, int topic9, int topic10, int topic11, int topic12, int topic18, int topic18, int topic18, int topic18, int topic18, int topic19, int topic18, int topic18, int topic19, int topic18, string key18, string18, string18, string18, string18, string18, string18", string18"){return StartTopicDetectionJobRequest(topic, topic, topic, topic, topic, topic, topic, topic, topic0, topic18, topic18, topic18, topic18, topic18, topic18, topic18_description, topic18_description, topic18_description_offset, topic18_description_length, topic18_description_length, topic18_description_length, topic18_description_length, topic18_description_length, topic18_description_length,
public virtual DirectoryConfig[] GetDirectoryConfigList(string appName){return directoryConfigList;}
public bool Contains(Object o){if (o == null){return false;}return base.Contains(o);}
public virtual float GetSimilarityScore(int doc, float freq){return 0.0f * doc * freq;}
public virtual void Start(BundleContext ctx){this.m_ctx = ctx;this.m_enclosing.Start(ctx);}
public string GetText(IVocabulary vocabulary){return vocabulary.ToString(null, NumberStyles.Integer, vocabulary);}
public virtual ScheduledInstanceResponse ScheduledInstance(ScheduledInstanceRequest request){var options = new InvokeOptions();options.RequestMarshaller = ScheduledInstanceRequestMarshaller.Instance;options.ResponseUnmarshaller = ScheduledInstanceResponseUnmarshaller.Instance;return Invoke<ScheduledInstanceResponse>(request, options);}
public String ToString(){return _cell.ToString();}
public override bool IsSupported(object @object){return true;}
public virtual bool IsConflict(Set<AltSet> altsets){var conflict = GetConflict(altsets);if (conflict!= null){return conflict.IsConflict;}return false;}
public override bool Equals(Stemmer other){return stemmer == other.Stemmer;}
public virtual void SetId(object id){this.id = id;}
public bool IsFirstCellOfRange(ICellRangeElement_1 cellRangeElement_1){return CellRangeElement_FirstCellOfRange(cellRangeElement_2);}
public void Set(T value){throw new System.NotImplementedException();}
public virtual bool Equals(Transition otherTransition){return _other!= null? _other!= null : false;}
public virtual bool TestFailover(ReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplication
public virtual void setComponents(string value){path = new GrowableStringBuilder(value);}
public override void write(ByteBuffer b){throw new System.NotImplementedException();}
public virtual bool Equals(QualityQuery other){return base.Equals(other);}
public virtual NGit.Storage.FileDataSource CreateDataSource(DataSource dataSource){return new NGit.Storage.FileDataSource(dataSource);}
public override string ToString(){return base.ToString();}
public virtual string GetChannel().GetName(){return channel.GetName();}
public override bool RequiresCommit(string message){return base.RequiresCommit(message, 0);}
public ProfilingATNSimulator(data): base(data){this.lastDocID = -1;this.dataIndex = -1;this.dataIndex = -1;this.dataIndex = -1;this.dataIndex = -1;this.dataIndex = -1;this.dataIndex = -1;this.dataIndex = -1;this.dataIndex = -1;this.dataIndex = -1;this.dataIndex = -1;}
public int GetExternalNameRecordIndex(){return _externalNameRecords.Get(InternalNameRecord.INDEX);}
public new CapitalizationFilter(filters){_capitalizationFilters = filters;}
public virtual IList<FieldEncryptionProfile> GetEncryptedProfiles(){return field_level_encryption_profiles;}
public virtual NGit.Api.StashListCommand StashListCommand(){return new NGit.Api.StashListCommand(this);}
public virtual void Send(IToken token){throw new System.NotImplementedException();}
public string groupName { get; set; }
public virtual void ModifyGlobalCluster(string clusterName){ModifyCluster(clusterName, true);}
public void allocate(address @in){throw new System.NotImplementedException();}
public virtual byte[] Decode(byte[] bytes, int offset, int length){for (int i = offset; i < length; i++){byte b = Decode(bytes[i], 16);if (b!= null){int b1 = Decode(bytes, i + offset, length);int b2 = Decode(bytes, i + offset, length);int b3 = Decode(bytes, i + offset, length);for (int i = i + length; i < b3; i++){b3 = Decode(bytes, i + offset, length);}}return b3;}
public virtual usageReport GetSubscriptionsForAppDRVAction GetSubscriptionsForAppDRVAction(){return _usageReport.GetSubscriptionsForAppDRVAction();}
public new shape(parent, anchor){return new shape(parent, anchor);}
public string GetHex(){return HSSFErrorConstants.GetText(gadget);}
public virtual void RevokesInvitation(Invitation invitation){Invitation msg = Invitation(inviteId, invitation);}
public virtual void IndexChanged(IndexChangedEventArgs e){Dispatch(e.getSource(), e);}
public override string[] GetUnsupportedFunctions(){return unsupportedFunctions;}
public virtual void grow(int count){for (int i = 0; i < count; i++){grow(count);}}
public SrndQueryBuilderFactory(IQueryBuilderFactory factory){this.factory = factory;}
public virtual UpdateStreamingDistributionResponse UpdateStreamingDistribution(UpdateStreamingDistributionRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateStreamingDistributionRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateStreamingDistributionResponseUnmarshaller.Instance;return Invoke<UpdateStreamingDistributionResponse>(request, options);}
public virtual OptionGroup[] GetOptionGroups(){return optionGroupList;}
public virtual int GetAppHealthCheckCount(string appName){return appHealthCheckCount;}
public virtual IConfigurationOptions GetConfigurationOptions(IConfigurationOptions options){return options;}
public virtual DescribePlayerSessionsResponse DescribePlayerSessions(){return DescribePlayerSessions(null, null);}
public virtual UpdateDestinationResponse UpdateDestination(UpdateDestinationRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateDestinationRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateDestinationResponseUnmarshaller.Instance;return Invoke<UpdateDestinationResponse>(request, options);}
public GraphicsClass (Object name){this.name = name;}
public virtual string GetUsagePlanKey(string appName){return usagePlanKey;}
public DimensionsRecord CreateDimensionsRecord(Bbox dimensionsRecord){return CreateDimensionsRecord(dimensionsRecord);}
public virtual E remove(E @object){lock (this._enclosing){int oldSize = this._enclosing._size;this._enclosing.remove(oldSize);this._enclosing._size = oldSize;this._enclosing.notifyDataSetRemoved();return this._enclosing._size!= oldSize;}}
public virtual void Start(){lastDocID = -1;wordNum = -1;word = 0;}
public int FormatCode(int index){return formatCode;}
public void Release(){_reader.Release();}
public void WriteU32(int v){WriteU32(v, _position, _order);_position += 4;}
public reset_password_for_app(){return reset_password_for_app_inner(_user, _password);}
public override void fill(char[] array, int value, int arrayOffset, int arrayOffset, int arrayOffset, int value2, char[] values){fill(array, value, arrayOffset, value2, arrayOffset, value2, arrayOffset, value2, arrayOffset, value2, value3, value4, value5, value6, value7, value8, value8, value9, value10, value11, value12, value18, value18, value18, value18, value18, value18, value18, value18, value19, value19, value20, value21, value22, value22, value22, value22, value22, value22, value3, value3, value4, value5, value4, value5, value5, value6, value7, value7, value7, value7, value8, value9, value12, value12, value18, value19, value20, value19, value19, value19, value19, value19, value20, value21, value20, value21, value22, value22, value22, value22, value22, value22, value3,
public virtual bool IsPeeled(ICharTerm term){return term!= null? IsPeeled(term.Value) : IsLeaf;}
public bool Get(int index){return _bitMap[index];}
public bool Contains(object o){return map.ContainsKey(o);}
public override FuncVarPtg Create(int arg_1, int arg_2, int arg_3, int arg_4, int arg_5, int arg_6, int arg_7, int arg_8, int arg_7_index, int arg_8_index, int arg_7_index, int arg_8_index, int arg_7_index, int arg_7_index, int arg_8_index, int arg_7_index_name, arg_7_index_name, arg_7_index_name, arg_8_index, arg_8_index, arg_7_index_name, arg_7_index_name, arg_8_index, arg_9_index_name, arg_10_index_name, arg_11_index, arg_12_index, arg_12_index, arg_12_name, arg_12_name, arg_12_name, arg_12_name, arg_12_name,
public virtual DetectDominantLanguageResponse DetectDominantLanguage(DetectDominantLanguageRequest request){var options = new DetectOptions();options.DetectDominantLanguage = DetectDominantLanguageRequest;return DetectDominantLanguage(request, options);}
public virtual void DeleteGlobalCluster(){Cluster c = (Cluster)Get(c.GetGlobalCluster());}
public override int size(){return this._enclosing.size();}
public override java.io.Writer getWriter(){return new java.io.BufferedWriter(this);}
public GetPrivateAccessUrlsRequest(): base("{PathSegment}", PathSegmentType.STATIC, true, false, false)){return new GetPrivateAccessUrlsRequest(this, PathSegmentType.STATIC, false, false);}
public virtual ILexerActionExecutor GetLexerActionExecutor(){return lexerActionExecutor;}
public virtual PrefixOperatorQuery Query(){return new PrefixOperatorQuery(this);}
public int subRecordIndex { get; set; }
public virtual DescribeResourceResponse DescribeResource(DescribeResourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeResourceRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeResourceResponseUnmarshaller.Instance;return Invoke<DescribeResourceResponse>(request, options);}
public override long size(){return this._enclosing._size;}
public FederationTokenRequest(string tokenRequestName){var request = new FederationTokenRequest(tokenRequestName);request.Name = tokenRequestName;return request;}
public void WriteByte(int b){WriteByte(b & 0xff);}
public virtual IList<Tag> GetTags(){return new List<Tag> { GetTag(resource); };}
public virtual DescribeAuditStreamResponse DescribeAuditStream(DescribeAuditStreamRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeAuditStreamRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeAuditStreamResponseUnmarshaller.Instance;return Invoke<DescribeAuditStreamResponse>(request, options);}
public FetchMomentPhotos request(){return new FetchMomentPhotosRequest(this);}
public virtual string ToString(){return GetCanonicalName();}
public virtual IList<State> GetStates(){return states.Values;}
public DistributionRequest(DistributionConfig distributionConfig){return new DistributionRequest(this, distributionConfig);}
public virtual string ToString(){return GetCanonicalName();}
public override void SetLexerActionExecutor(LexerActionExecutor lexerActionExecutor){base.SetLexerActionExecutor(lexerActionExecutor);passedThroughNonGreedyDecision = true;}
public override StemFilter Create(TokenStream stream){return new StemFilter(stream, 0, stream.Length);}
public Lexicon CreateOrUpdate(Lexicon icon){if (icon == null){Lexicon = new Lexicon(this);}else{Lexicon = new Lexicon(this, icon);}return lexicon;}
public override TreeFilter Clone(){return this;}
public ObjectDirectoryInserter(){return new ObjectDirectoryInserter(this);}
public string GetTagName(){return tagName;}
public virtual string GetOldId(){return oldId;}
public virtual string GetCodepage().Name{get; internal set; }
public identity pools(){return _pools;}
public java.nio.ByteBuffer slice(java.nio.ByteBuffer start, int length_1){return new java.nio.ByteBuffer(data, start, length_1);}
public string getPathName(){return path.GetName();}
public override object GetPasswordData(string password){return base.GetPasswordData(password);}
public virtual double Log(double x){return Math.Log(x) + (x == null? 0.0 : x) + (y == null? 0.0 : x.Log(y));}
public subnet_update_attributes(){_subnetAttributes = new subnet_attributes();}
public virtual IList<Job> GetJobs(){return GetJobsByAccountOrKey(new GetAccountOrKey());}
public void SetFlushPendingFlag(ThreadContext threadContext){SetFlushPendingFlag(threadContext.FflushPendingFlag);}
public override void Write(int b){Write((long)b, b >> 0);}
public virtual void Enable(DirectoryInfo dir){m_dir = dir;}
public NGramTokenFilter Create(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9, int arg10, int arg11, int arg12, int arg13, int arg13, int arg12, int arg13, int arg13, int arg14, int arg15, int arg16, int arg17, int arg18, arg18, arg18, arg18, arg19, arg18, arg19, arg20, arg20, arg21, arg22, arg22, arg21, arg22, arg22, arg22, arg20, arg20, arg20, arg21, arg22, arg22, arg23, arg24, arg24, arg20, arg22, arg22, arg22, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg
public virtual IList<Blueprint> GetBlueprints(){return BlueprintsEnum.Values;}
public virtual void write(char b){if (m_len >= m_buf.size){throw new System.IO.IOException("Buffer is full");}m_len += b;}
public override float GetScore(){return score;}
public virtual void SetExecutor(Executor executor){this.executor = executor;}
public void AddChildHSSFListener(IHSSFListener listener){AddChildHSSFListener(listener);}
public virtual RenameCallback GetRenameCallback(){return renameCallback;}
public string GetWildcardName(){return "*";}
public void Flush(byte b){if (m_buf.Length > 0){_out.Flush(b);_out.Flush(b);_buf.Length = 0;}
public void UnlinkAll(ATNModificationList modifications){foreach (ATNModificationList item in modifications){Link(item.A_parser_entry);}}
public virtual ReplicationGroupCollection ReplicationGroups(){return replicationGroups;}
public CellRangeAddress GetCellRangeAddress(){return _data.GetCellRangeAddress();}
public virtual void SetIndexOutput(IndexOutput indexOutput){this.indexOutput = indexOutput;}
public void SetInterfaceHeaderPage(int page){this.m_interfaceHeader.SetCodePage(page);}
public virtual void Update(void){base.Update(void.ReferenceCount, 0);}
public virtual ListSubscriptionsResponse ListSubscriptions(string arn){return ListSubscriptionsResponse( arn, null);}
public certificate authorities list. public ICollection<CertificateAuthority> list_certificate_authorities(ICollection<string> categories){return _certificate_authorities;}
public virtual void RecoverFromLexerException(){RecoverFromUncheckedException();}
public override java.nio.FloatBuffer put(float c){if (m_buf.hasArray()){for (int i = m_buf.index; i < m_buf.count; i++){m_buf[i] = c.array[i];}}return this;}
public OpenNLPChunkerFilter Create(TokenStream tokenStream){return Create(tokenStream, 0, tokenStream.Length);}
public DistributionConfigurationDefinitionId(int value){id = value;}
public virtual void write(java.io.OutputStream outputStream){throw new System.NotImplementedException();}
public override char read(char ch){throw new System.NotImplementedException();}
public virtual NGit.Storage.File.Record GetRecord(){return this._enclosing.GetRecord(this.name);}
public java.nio.CharBuffer getReadOnlyCharBuffer(){return getReadOnlyCharBuffer(true);}
public virtual IList<Snapshot> GetSnapshots(string appName){return list.New("App " + appName, null, "apps");}
public virtual NGit.Api.Template CreateOrUpdateTemplate(string name, NGit.Api.Template payload){this.Name = name;this.Payload = payload;return Templates.CreateOrUpdate(name, payload.Length, payload.Length, payload.TemplateOptions, payload.TemplateOptionsUpdateListener);}
public virtual double Asinh(double value){return Math.Asinh(value) ;}
public override Object Clone(){return this;}
public virtual bool GetTrackingRefUpdate(){return trackingRefUpdate;}
public virtual void removeAt(int index){removeAt(index);}
public override java.nio.CharBuffer copy(){return copy(this);}
public Credential FetchCredentials(){return credentials;}
public java.util.Iterator.Builder builder { get; internal set; }
public TextComparer(IComparer<char> comparer){m_comparer = comparer;}
public FormulaRecord Create(FormulaRecord record){return Create(record, null);}
public virtual void append(bool b){append0(b? "true" : "false");}
public virtual SnapshotCopyGrant CreateSnapshotCopyGrant(){return new SnapshotCopyGrant(this);}
public virtual ProposalProposal GetProposalInformation(){return proposalInformation;}
public virtual double Asinh(double value){return Math.Asinh(value) ;}
public Amazon GuardDutyTypeRegisters(){return _registry.RegisterType(typeof(AmazonGuardDutyType));}
public override void Validate(){base.Validate();}
public KeywordRepeatFilter(IDictionary<string, string> parameters){return this;}
public virtual void SetResourceIdAndTagKeys(string[] keys){if (keys == null){throw new ArgumentNullException("keys" must not be null");}for (int i = 0; i < keys.Length; i++){SetResourceIdAndTagKeys(keys[i]);}}
public virtual bool Equals(MergeInfo m_mergeInfo){return m_mergeInfo == null? false : m_mergeInfo.Equals(m_mergeInfo);}
public override void Format(int v){if (m_len >= m_buf.Length){Resize(m_len + 1);}m_buf[m_len++] = v;}
public virtual void unread(char ch){throw new System.NotImplementedException();}
public int size(){return this._enclosing._size;}
public virtual NGit.Api.SubmoduleUpdateCommand Initialize(SubmoduleUpdateCommand command){this.command = command;return this;}
public override TreeFilter Clone(){return this;}
public virtual IPAddressGroup CreateIPGroup(IPAddress group){return CreateIpv4Group(group, null);}
public override int maximumBytesUsed(int capacity){return _limit - _limit;}
public IEnumerator<K> GetKeys(){return keys.GetEnumerator();}
public virtual Query CreateFuzzyQuery(Term term){return new Query(term);}
public virtual List<Journey> GetJourneys(){return Sharpen.Collections.UnmodifiableList(GetJourneys()));}
public virtual string ToString(){return GetCanonicalName();}
public virtual ReceiveChannel Information(ReceiveChannel channel){return channel.Details;}
public virtual void Attach(object o){Attach(o);}
public TextReader(TextReader input){this.m_input = input;}
public virtual ResolverInfo GetResolverInfo(){return _resolver;}
public virtual IList<StackSet> GetStackSet(){return stackSetInstance.GetAllStackSet(null);}
public virtual string GetTypeString(int type){return GetTypeString(type);}
public virtual float median(float v){return median(v, start, end);}
public virtual void push(E e){push(e);}
public override Signer GetSigner(){return signer;}
public virtual void SetDbInstance(string dbInstance){_dbInstance = dbInstance;}
public virtual void SetTransliterationConvention(TransliterationConvention other){m_transliterator = other;}
public QueryConfigHandler(FieldBoostMapQueryConfigHandler handler){this.configHandler = handler;}
public void Clear(){_data = null;}
public virtual ATNState ParseAtnRule(ATNContext context){ATNState atn = new ATNState(null, null);parseRule(atn, null);return atn.state;}
public virtual ListTagsCommand ListTags(){return new ListTagsCommand(this);}
public virtual Dictionary<string, List<E>> CheckOutMap{ get; internal set; }
public virtual void SetObjectId(ObjectId id){field_1_objectId = id;}
public DefaultCredentialsProvider(CredentialsProvider provider){_provider = provider;}
public BatchPutRequest(string path, string in1){return BatchPut(path, in1, in1, in1, in1, in1, in1, in1, in1, in1, in1, in1, in1, in1, in1, in1, in1, in1, in1, in1, in1, in1, in1, in1, in1, in1, in1, in1, in1, in1, in1);}
public virtual Ledger Update(Ledger l){return l.Update(null);}
public virtual NGit.Storage.File.Log GetDBLogFile(){return dbLogFile;}
public virtual void RegenerateSecurityToken(){RegenerateSecurityToken(null);}
public DhcpOptions(FileOptions options){return new DhcpOptions(options);}
public virtual void clear(){hash.clear();}
public DescribeSpotDatafeedSubscriptionResponse DescribeSpotDatafeedSubscription(DescribeSpotDatafeedSubscriptionRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeSpotDatafeedSubscriptionRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeSpotDatafeedSubscriptionResponseUnmarshaller.Instance;return Invoke<DescribeSpotDatafeedSubscriptionResponse>(request, options);}
public virtual EC2InstanceLimits GetLimits(){return _limits;}
public virtual void DeleteAutoScalingGroup(AutoScalingGroup group){DeleteAutoScalingGroupWithHttpMessages(group.GroupName, group.DefaultGroupName, group.AutoMinorVersion, group.AutoMinorName, group.AutoMinorNameType, group.AutoMinorNameType, group.AutoMinorNameType, group.AutoMinorNameType, group.AutoMinorNameType, group.AutoMinorNameType, group.AutoMinorNameType, group.AutoMinorNameType, group.AutoMinorNameType, group.NameType, group.NameType, group.NameType, group.NameType, group.NameType, group.AutoMinorVersion, group.NameType, group.AutoMinorName, group.AutoMinorNameType, group.AutoMinorNameType, group.AutoMinorNameType, group.AutoMinorNameType, group.AutoMinorNameType, group.AutoMinorNameType, group.AutoMinorNameType, group.AutoMinorNameType, group.AutoMinorNameType, group.AutoMinorNameType, group.NameType, group.NameType, group.NameType, group.NameType, group.NameType, group.AutoMinorName,
public formula string(IList<FormulaAttribute> operands){return _formula.CreateFormulaString(operands);}
public void WriteUShort(int v){WriteUShort(v);}
public CompositeShape.Anchor anchor { get; set; }
public virtual void Deregister(){DBProxyTarget[] targets = { };foreach (DBProxyTarget target in targets){Deregister(target);}}
public bool IsHorizontalBorder(){return field_1_horiz;}
public virtual NGit.Api.StreamCopyThread SetUp(StreamCopyThread thread){return new NGit.Api.StreamCopyThread(thread);}
public override void Read(Record input){try{int field_1_ticks = _in.ReadUShort();int field_2_ticks = _in.ReadUShort();_in.ReadByte();field_3_ticks = field_4_ticks;_in.ReadFully();}catch (IOException ex){throw ex;}}
public virtual void SetTag(string v){tags[v] = new string(IdHelper.GetId(this, v));}
public void CloneStyle(ISheetRecord s){return;}
public void SaveRecalc(Record rec){RecalcRecord rec = new RecalcRecord();rec.Recalc = rec.Recalc;}
public virtual void NextSentence(){MoveTo(sentenceEnd);}
public void DeleteConfiguration(DeleteConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteConfigurationResponseUnmarshaller.Instance;returnOrCreateInstance(request, options);}
public virtual string Referencestring(int referenceCount){return (_referenceCount == 0)? "0" : _referenceCount.ToString();}
public virtual string{get, path_info}
public virtual void Grow(int size){for (int i = size; i < size; i++){System.Array.Copy(array, i, array.Length, _array.Length, _array.Length - i);_array.Length = i + 1;}}
public virtual WQuery WQuery = PrimaryQuery DistanceQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | WQuery | WQuery | WQuery | WQuery | WQuery | WQuery | WQuery | WQuery | WQuery | WQuery | WQuery | WQuery | WQuery | WQuery | WQuery | WQuery | WQuery | WQuery | WQuery | WQuery | WQuery | WQuery | WQuery | WQuery | WQuery | WQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery | PrimaryQuery
public bool Get(int index){return _bitMap[index];}
public virtual IList<ClientVPNEndpoint> GetClientVPNEndpoints(){return VPNEndpoint.ListClientVPNEndpoints(){client = VPNEndpoint.CreateClient(this);}
public virtual INodeGroup Create(INode group){return (m_nodeGroup = new NGit.Util.CreateChildNodeGroup(group));}
public virtual ICollection<E> elementsFromStartUpToAndElementsFromStartUpToAndElementsFromStartUpToAndElementsFromStartUpToAndElementsFromStartUpToAndElementsFromStartUpToAndElementsFromStartUpToAndElementsFromStartUpToAndElementsFromStartUpToAndElementsFromStartUpToAndElementsFromStartUpToAndElementsFromStartUpToAndElementsFromStartUpToAndElementsFromStartUpToAndElementsFromStartUpToAndElementsFrom
public virtual E remove(K key){lock (this){int oldSize = this._enclosing.size;this._enclosing.remove(key);this._enclosing.size = oldSize;this._enclosing.notifyDataSetRemoved();return this._enclosing._size!= oldSize;}}
public virtual void StartExportTask(Task task){this.task = task;}
public virtual FVFunction GetFVFunction(){return FV;}
public virtual NGit.Api.WorkDirectoryMessage SetWorkingDirectoryMessage(string m_workingDirectoryMessage){this.m_workingDirectoryMessage = m_workingDirectoryMessage;}
public virtual ErrorEval GetErrorEval(int errorCode){return null;}
public virtual float GetProbability(Stats stats){return GetProbability(stats.Values, stats.Index);}
public virtual void Start(BundleContext ctx){this.m_ctx = ctx;this.m_preStart = true;this.m_preStart = false;this.m_preStart = true;this.m_postStart = true;this.m_preStart = false;this.m_preStart = false;this.m_postStart = false;this.m_preStart = false;this.m_postStart = false;this.m_postStart = false;this.m_postStart = false;this.m_preStart = StartSingleStep(ctx, this.m_preStart, this.m_postStart, this.m_postStart, this.m_postStart, this.m_postStart, this.m_postStart, this.m_postStart, this.m_postStart, this.m_postStart, this.m_postStart, this.m_postStart, this.m_postStart, this.m_postStart, this.m_postStart, this.m_postStart, this.m_postStart, this.m_postStart, this.m_postStart
public bool getValue(){return _complexData!= null;}
public virtual IList<Update> GetUpdates(){return list.Empty;}
public virtual float[] copy (float[] array_1, int[] array_2, int[] array_3, int[] array_4, int[] array_5, int[] array_6_used){return copy(array_5, 0, array_6, 0, array_5.Length);}
public virtual void Push(E element){elements.Insert(0, e);}
public virtual void DeleteScript(){_enterpriseInstance.DeleteScript(null);}
public virtual DatasetGroup GetDatasetGroupResponse GetDatasetGroup(DatasetGroupResponse result){return datasetGroupResponse.ToDatasetGroup(false);}
public void RemoveScaleProperty(){_scale = null;_size = 0;}
public Filter CreateFilter(params) {return new FilterAnonymousFilter(this, parameters);}
public override void SetFilePointerThreshold(long filePointerThreshold){filePointerThreshold = filePointerThreshold;}
public virtual E next(){return this.nextEntry();}
public string GetSubscriptionId(){return _subscriptionId;}
public DefaultIndexConfig(Analyzer analyzer){this.analyzer = analyzer;this.defaultField = DEFAULT_ANALYZER_FIELD_NAMES;}
public virtual void CreateReservedInstances(List<ReservedInstance> reservedInstances){CreateReservedInstances(reservedInstances);}
public virtual void insert(int offset, float value){string p = m_buf.Insert(offset, Sharpen.StringHelper.GetOffsetForString(offset));buffer.Append(value);}
public virtual void AttachVolumeToApp(Volume volume){this.app = volume;this.attachVolumeToApp(volume);}
public virtual void UpdateSecurityGroups(SecurityGroup securityGroup){updateSecurityGroups(securityGroup.PrivateGroup, securityGroup.RuleDescriptions);}
public MoveFacePhotosRequest(CloudPhotoMoveFacePhotosParameters parameters){var request = new CloudPhotoMoveFacePhotosRequest();request.Parameters = parameters;return CreateCloudPhotoMoveFacePhotosRequest(request);}
public bool IsSeriesKeyShowing(){return seriesKeyShowing;}
public virtual void ModifyEndpoint(Endpoint endpoint){Cluster.UpdateEndpoint(endpoint);}
public virtual UpdateGroupRequest Update(UpdateGroupRequest group){var options = new InvokeOptions();options.RequestMarshaller = UpdateGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateGroupRequestUnmarshaller.Instance;return Invoke<UpdateGroupRequest>(group, options);}
public virtual string ToString(){return GetCanonicalName();}
public override long BytesUsed(){return delegate1.BytesUsed();}
public Network Create(NetworkingConfiguration configuration){this.configuration = configuration;}
public void SetFormatFlags(int flags){formatFlags = flags;}
public key and secret to use.  public void SetPublicKey(PublicKey publicKey, string privateKey){this.publicKey = publicKey;this.secret = privateKey;}
public int valueAt(int index){return array[index];}
public virtual double Get(int srcRowIndex, int srcColumnIndex){return _gsm.Get(srcRowIndex, srcColumnIndex);}
public override java.nio.FloatBuffer put(java.nio.FloatBuffer buffer){return put(buffer);}
public byte[] CreateCopyOnWriteArrayList(byte[] array, int start, int end){return CreateCopyOnWriteArrayList(array, start, end);}
public virtual bool ShouldKeepScores(){return scoresToKeep;}
public AssociateDhcpOptionsRequest(VpcId vpcId){var request = new AssociateDhcpOptionsRequest();request.VpcId = vpcId;request.UseDhcpOptions = true;return request;}
public DefaultProfile NewDefaultProfile(){return (DefaultProfile)NewDefaultProfile(regionID, credential);}
public NotImplementedFunctionException(String functionName){return NotImplementedFunctionException(functionName);}
public virtual void remove(object o){list.remove(o);}
public virtual IList<Snapshot> GetSnapshots(){return DBCluster.getSnapshots(this);}
public virtual void Enable(HealthcareService healthcareService){_healthcareService = healthcareService;}
public virtual int GetHeadId(){return headId;}
public void MergeCells(XCellRecord rec){_mergeCells(rec.Cells);}
public virtual EntityDetectionJob GetDetails(string jobId){return GetDetails(jobId, null);}
public virtual void SetUp(XmlNode ignoreNode){this.n = 0;}
public virtual void SetLastFailedRefreshTime(DateTime refreshTime){lastFailedRefresh = refreshTime;}
public virtual void SetPattern(string pattern){m_patterns.Add(pattern);}
public virtual string subsequence(string str){return split(str, str.Length - 1);}
public override void SetMultivaluedFields(string field_1){addAttribute<IQueryAttribute>(field_1, field_2_attributes);}
public ICollection<ObjectId> GetAllIds(){return dictionaryNameToID.Keys;}
public virtual void UnprecateActivityType(){DeprecateActivityType(typeof(Fragment));}
public override void Execute(int arg){if (arg > 0){throw new ArgumentException("arg must be 0 for a positive integer");}if (arg > 0){throw new ArgumentException("arg list cannot be followed by a negative integer");}if (arg > 0){throw new ArgumentException("arg list cannot be followed by a negative integer");}if (arg > 0){throw new ArgumentException("arg list cannot contain negative numbers");}int endArg = arg - endArg;if (arg_start_pos + 1 == arg_end_pos){throw new ArgumentException("arg list cannot contain negative numbers");}if (arg_start_pos < end_pos){throw new ArgumentException("arg list cannot have negative start pos");}if (arg_start_pos < end_pos){return;}return;}
public virtual IType GetTypeInfo(){return _typeInfo;}
public virtual string ToString(){return GetCanonicalName();}
public AttributeDefinition GetAttributeFactory(){return _attributeFactory;}
public virtual ReviewPolicyResponse ReviewPolicy(ReviewPolicyRequest request){var options = new InvokeOptions();options.RequestMarshaller = ReviewPolicyRequestMarshaller.Instance;options.ResponseUnmarshaller = ReviewPolicyResponseUnmarshaller.Instance;return Invoke<ReviewPolicyResponse>(request, options);}
public void Blame(){Blame(null);}
public override long GetSize(){return file.GetSize();}
public virtual void Update(Journey journey){this.journey = journey;}
public CFRuleRecord CreateCFRuleRecord(FormulaText formulaText){return CreateCFRuleRecord(formulaText, 0, formulaText.Length);}
public override string ToString(){return Format(this.Get(FormatKey()));}
public virtual int precision(){return _precision;}
public override void WriteByte(int b){if (m_len >= m_buf.Length){Resize(m_len + 1);}UnsafeWrite(b);}
public override FieldFragList CreateFragList(FieldPhraseList other){return new FieldFragList(other);}
public StringRecord Read(RecordInputStream in1){return _in1.ReadUTF16LE();}
public virtual void copyTo(byte[] array, int offset, int length_1){copyTo(array, offset, length_1);}
public void clearCharCount(){_chars.Clear();}
public DescribeInstanceHealthRequest(string loadBalancerName){return new DescribeInstanceHealthRequest(loadBalancerName, null);}
public TreeIterator(ITreeIterator treeIter){m_root = treeIter;}
public virtual int listenerType(){return _listenerType;}
public virtual int count(){lock (this._enclosing){return _enclosing._size;}}
public override int WordCost(int id){return base.WordCost(id);}
public void Enable(){this.enabled = true;this.disabled = false;}
public virtual void SetSigned(bool b){m_signed = b;}
public virtual Stage Update(Stage stage){return stage;}
public scaling_policy_create(string policyName){_policyName = policyName;}
public override void Set(E elementAt, E elementTo) {base.Set(elementAt, elementTo);}
public virtual void DeleteVersion(string version){Delete(version, 0, version.Length);}
public virtual ICollection<string> GetNames(string section){return GetNames(section, null);}
public virtual void DisassociateSkillGroupFromRoom(SkillsGroup group){this.DisassociateSkillGroup(group);}
public void Delete(ILicon icon){Delete(icon.Entry);}
public virtual void CancelCluster(){this.node.Dispose () ;this.isCancelling = true;this.node = null;this.isTerminating = false;}
public virtual QueryParser ParseQuery(string query){return new QueryParser(query, 0, query.Length, false);}
public virtual IList<Workteam> GetWorkteams(){return workteams;}
public int get(byte b) {return contents[index].get(b);}
public IList<Tuple<K, V>> GetPairs(){return backingMap.GetPairs(this);}
public virtual string ToString(){return GetCanonicalName();}
public int GetRowAndColumn(int row, int column){return row*_row + column* _column;}
public virtual AssociateVpcAssociationAuthorizer ListVPCAssociationAuthorizer(){return new List<AssociateVpcAssociationAuthorizer>(this);}
public override java.nio.ByteBuffer get(char c){return backingArray[offset + _position];}
public virtual void SetConfiguration(Configuration config){base.SetConfiguration(config);}
public override V set(string cs){return this._enclosing.set(cs);}
public virtual string GetLastCommitGeneration(){return directoryCommit.GetLastCommitGeneration();}
public virtual void copy(){throw new System.NotImplementedException();}
public virtual bool IsNonZero(int index){return 0;}
public virtual Commit.Head GetNewHead(){return head;}
public virtual void append(E e){throw new System.NotImplementedException();}
public CompositeReaderContext SetProperty(string name, bool value){return _set.GetProperty(name);}
public Amazon GuardDutyAccount Create(CreateAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateAccountResponseUnmarshaller.Instance;return Invoke<AmazonGuardDutyAccount>(request, options);}
public java.util.regex.MatcherType setBoolean(bool value){return this;}
public bool ContainsCellRange(CellRangeAddress cellRangeAddress){return CellRangeAddress.ContainsCellRange(cellRangeAddress);}
public virtual string GetBufferAsString(){return buf.GetBufferAsString();}
public virtual void RegisterMulticastGroupSources(IMulticastGroupSource[] groupSources){foreach (MulticastGroupSource source in groupSources){RegisterMulticastGroupSource(source);}}
public Type GetType(){return type;}
public virtual Attributes GetQueueAttributes(){return queue.GetAttributes();}
public virtual List<RouteResponse> GetResponses(){return internal.ListResponses(){}
public override void CopyInt32s(int count, byte[] array, offset, int count2){if (count2 > 0){Array.Copy(array, offset2, array, offset3, count4);}Array.Copy(array, offset3, array, offset4, count5 - offset5);}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(this.Name);out1.WriteByte(this.Type);out1.WriteShort(this.DefaultLength);}
public override WAH8DocIdSet GetTopLevelContext(WAH8DocIdSet parent){return ((H8DocIdSet)parent).GetTopLevelContext();}
public virtual string GetSymbolText(){return symbolText;}
public virtual void AssociateIpAddressBlock(string addressBlock){VPC.AssociateIpAddressBlock(addressBlock);}
public Query Create(ID queryId, string name, string valuePairs){var args = new string[queryId];args.Values = nameValues;return _create(queryId, valuePairs, 0, queryId.Length, name, valuePairs, 0, valuePairs.Length);}
public virtual void Cancel(){Cancel(null);}
public QualificationType(String name){_name = name;}
public virtual IList<DocDescription> GetDocs(){return docs;}
public virtual string ToString(){return GetCanonicalName();}
public virtual IEnumerator<FileHeader> GetFilesIterator(Repository repository){return new RepositoryFileHeaderEnumerator(repository);}
public virtual Policy Policy { get; internal set; }
public int ReadSid(Record record){return _rc4.Xor(record.Sid, record.Value);}
public void Write(SID x){_out.Write(x);}
public virtual void Delete(MethodInfo method){if (method.HasBody){_body = null;}else{_body = new MethodInfo(MethodDescriptor.Empty);}}
public virtual IList<Target> GetTargetsForRule(Rule rule){return GetTargetsForRuleInternal(rule.RuleIndex);}
public override bool Equals(object o){if (o is StemmerPrefix){return base.Equals(o);}return false;}
public override bool markSupported(){return false;}
public AnalyzerInstance Create(Type analyzerType){return AnalyzerInstance(analyzerType, null);}
public virtual int GetWeekNumber(int serial){return _smsc.GetWeekNumber(serial);}
public override void limit(int value){limit(value);}
public virtual string listText(){return listText();}
public virtual StreamConsumer Information(StreamConsumer consumer){return null;}
public virtual float std(int v){return std(v)? stdev(v) : float.Epsilon;}
public virtual void DeleteRouteTable(RouteTable table){DeleteInternal(table.RouteTableLocation, table.RouteTablePart, null, null);}
public virtual NGit.MessageDigest CreateMessageDigest(MessageDigest msgDigest){return new NGit.MessageDigest(msgDigest);}
public virtual void SetDelimiters(string delimiters){_delimiters = delimiters;}
public void ReadRawRecordData(){_rc4.SkipTwoBytes();_rc4.StartRecord(this);}
public virtual byte[] GetAsByteArray(){return GetAsByteArray(false);}
public override string ToString(){return z-ticks.ToString(CultureInfo.InvariantCulture);}
public override java.nio.IntBuffer get(){return this._enclosing.getIntBuffer(this.position, this.order);}
public Row(String name, DataRow data): base(name, data){return new Row(this, name, data);}
public override void Serialize(byte[] b, int offset, int byteCount){SerializeInt32(b, offset + _position, byteCount);}
public virtual void Start(ProgessCommand command){this.command = command;this.startInfo = new StartInfo(this);this.startInfo.isNew = true;this.startInfo.isNewScript = true;this.startInfo.isNewScript = true;this.startInfo.isNewScript = true;this.startInfo.addScript(new StartInfo());this.startInfo.addScript(new StartInfo());this.startInfo.addScript(new StartInfo());this.startInfo.AddScript(new StartInfo());this.startInfo.AddScript(NewInfo());}
public virtual string GetBaseForm(int index){return _baseForm;}
public ListFacesRequest(ListFacesRequest request){return new ListFacesRequest(request, "GET", "/faces", "openAPI"){Endpoint = "https://{Endpoint}";}
public virtual IList<Build> GetBuilds(){return Sharpen.Collections.UnmodifiableList(builds.Values);}
public IIdentityCredentialSubmitRequest(string credentialName, string result, IIdentityCredentialSet customHeaders){return request(domainName, credentialName, 'domainName', 'credentialSet', 'credentialSetResponse', customHeaders, 'credentialSetDefault');}
public virtual void SetGroupName(string groupName){this.groupName = groupName;}
public virtual NGit.Diff.ListCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnListContentChanged:AddItemOnContentChangedChanged(addedItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreateItemOnCreate
public override void Read(Record record){try{ReadInternal(record);}catch (IOException ex){throw ex;}}
public virtual int Available(){return _le.Available();}
public virtual int b(int v){return (v >= 0)? (v >> 1) : (v >> 1)? (v >> 1) : (v >> 1)? (v >> 1) : (v >> 1)? (v >> 1) : (v >> 1)? (v >> 1)? (v >> 1) : (v >> 1)? (v >> 1)? (v >> 1) : (v >> 1)? (v >> 1) : v
public override void ReadViewFields(RecordInput in1){_in1.Read(viewFields, 0, viewFields.Length);_in1.Read(viewFields, 1, viewFields.Length);}
public virtual string ToString(){return GetCanonicalName();}
public virtual void remove(object @object){remove(@object);}
public override void close(){_is = false;}
public virtual void UpdateClusterConfiguration(ClusterConfiguration existingClusterConfiguration){this.clusterConfiguration = existingClusterConfiguration;}
public virtual int[] keys(){return keys();}
public virtual void Clear(){map.Clear();}
public virtual void SetBucket(string bucket){if (bucket == null){_bucket = boto.s3.objects.CreateBucket(S3BucketName);}Set(bucket, true);}
public virtual void RemoveFlag(int flag){Revision c = (Revision)GetRevision(flag);if (c!= null){Revision e = c.RemoveFlag(Revision.DEFAULT_BRANCH);}Revision.Flag = null;}
public virtual ModifyVPCEndpointConnectionNotificationResponse ModifyVPCEndpointConnectionNotification(ModifyVPCEndpointConnectionNotificationResponse response){return ModifyVPCEndpointConnectionNotification(response.VpcEndpointConnectionNotificationResponse.VpcEndpointConnectionNotificationId);}
public DecisionInfo[] getDecisionInfos(){return new DecisionInfo[0];}
public virtual int get_time_zone_offset(){return offset;}
public STSClient(Transport communication){protocols = new Protocols(TransportProtocol.HTTPS, TransportProtocol.HTTPS_MUTATOR_ENABLED);}
public virtual void Open(){this.m_instance = null;this.m_openFlags = 0;this.m_openReader = OpenReader(null, m_instance, 0);this.m_openReader = OpenReader(null, m_instance, 0);this.m_openWriter = OpenWriter(null, m_instance, 0);this.m_openReader = OpenReader(m_instance, 0);this.m_openReader = OpenReader(m_instance, 0);this.m_instance = null;this.m_instance2 = null;this.m_openReader = OpenReader(null, m_instance2, 0);this.m_openWriter = OpenWriter(null, m_instance2, 0);this.m_openWriter = OpenWriter(null, m_instance2, 0);this.m_openWriter = CloseWriter(m_instance2, 0);}
public virtual IntegrationDetail GetIntegrationDetail(){return detail;}
public override bool Equals(BookSheetKey key){return base.Equals(key);}
public override HindiNormalizationFilterFactory CreateFilterFactory(FilterFactory config){return base.CreateFilterFactory(config);}
public virtual ReceiptRuleSet Details(){return this._enclosing.GetDetails(new GetReceiptRuleSetRequest());}
public virtual void Register(Repository repository){this.repository = repository;}
public override StemFilter Create(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9, int arg10, int arg11,... arg12,... argN){return new BrazilianStemFilter(arg0, arg0, arg11, arg12, arg11, arg12, arg13, arg13, arg12, arg13, arg12, arg13, arg13, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg18, arg19, arg19, arg19, arg19, arg20, arg20, arg21, arg20, arg20, arg20, arg20, arg22, arg22, arg22, arg22, arg22, arg22, arg22, arg22, arg23, arg23, arg23, arg23, arg24, arg22, arg22, arg22, arg22, arg22, arg22, arg22, arg22, arg22, arg22, arg22, arg22, arg22, arg22, arg22, arg
public OrdinalsIndexReader(ObjectReader ordinalsIndexReader){_ordinalsIndexReader = ordinalsIndexReader;}
public java.net.URI copy(){return copy(this);}
public virtual void SetProgressMonitor(ProgressMonitor m){m.useMains = true;}
public int indexOf(E e){return indexOf(e.element, e.start, e.end);}
public override java.nio.CharBuffer copy(){return copy(this);}
public string name and value { get; set; }
public override JBoss.EvaluationContext GetParentContext(int index){return _parent;}
public virtual float Evaluate(T value){return Evaluate(value);}
public MeetingDeletionMeetingID, DeleteMeetingByIdRequest, ISet<MeetingDeletionMeetingID> customHeaders = null, ISet<string> customHeaders = null, ISet<string> customHeaders = null, ISet<string> customHeaders = null, ISet<string> customHeaders = null, ISet<string> customHeaders = null, ISet<string> customHeaders = null, ISet<string> customHeaders = null, ISet<string> customHeaders =null,ISet<string> { "CustomHeaders" => customHeaders, "Settable" => table}
public void StartAlarmTimer(){startAlarmTimerInternal(TimeSpan.FromMilliseconds(startAlarmTimer()));}
public virtual void AddProcessor(Processor processor){processors.Add(processor);}
public GetPhotosRequest(): base(){return new GetPhotosRequest(null, null, null);}
public virtual int RowCount(IDataInput in1){return this._enclosing.RowCount(in1);}
public virtual NGit.ObjectCreationResponse NGit.ObjectCreation(NGit.ObjectCreationOptions options){return NGit.ObjectCreationOptions.Create(options);}
public virtual void putShorts(short[] values){for (int i = 0; i < values.Length; i++){putShorts(values[i]);}}
public virtual void Initialize(PerfTask task){this.host = task.GetTaskManager().CreatePerfTaskHost(task.GetContext());this.task = task;}
public virtual void DetachInstances(IList<Instance> instances){foreach (Instance instance in instances){DetachInstance(instance);}}
public virtual ABSOLUTE_OBJECT_ID CreateAbsoluteObjectId(string id){return CreateObjectId(id, Constants.ABSOLUTE_OBJECT_ID_CHAR);}
public virtual IList<MultipartUpload> GetMultiUploads(){return multiparts;}
public void DeleteFileSystem(){Open().DeleteFileSystem(this);}
public virtual CreateLoadBalancerListenersRequest CreateLoadBalancerListenersRequest(IList<LoadBalancerListener> listeners){return new InvokeOptions();}
public virtual IList<Endpoint> GetEndpoints(){return endpoints;}
public int ReadInt(){return _in.ReadInt();}
public virtual NGit.Api.App Create(string name){return Create(name, null, true);}
public PagedBytesDataInput(){return (PagedBytesDataInput)_new(this);}
public virtual bool EndsWith(string s, char[] suffix){return s.EndsWith(suffix, StringComparison.Ordinal);}
public int get(byte b, byte c){return bytes[b] & MASK;}
public java.nio.DirectBuffer allocate(int capacity_1){return allocation(capacity_1, _eng.NATIVE_ORDER);}
public override string ToString(CultureInfo culture){return culture.ToString(CultureInfo.InvariantCulture);}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_x_column_width);}
public ValueEval GetValueEval3D(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9, int arg10, int arg11, int arg12, int arg11, int arg12, int arg11, int arg12, int arg13, int arg13, int arg14, int arg15, int arg16){return GetValueEval3D(arg) + (arg12 * arg11 + arg12 + arg16 + arg12 + arg13 + arg14 + arg15 + arg16 + arg17 + arg18+ arg18+ arg19 + arg19 + arg19 + arg19 + arg19 + arg19 + arg19 + arg19 + arg19 + arg19 + arg19 + arg20 + arg21,
public virtual void DeleteCluster(){Cluster c = (Cluster)GetDBCluster();c.Delete();}
public virtual IList<Detector> GetDetectors(){return detectors;}
public void CreateResourceGroup(string groupId){if (groupId == null){groupId = Sharpen.Util.CreateResourceGroup(groupId);}else{groupId = groupId.Group(groupId);}CreateResourceGroup(groupId, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null,
public bool Contains(object o){return map.ContainsKey(o);}
public VPCEndpointServiceConfiguration CreateVPCEndpointServiceConfiguration(string endpointName){return CreateVPCEndpointServiceConfiguration(endpointName, null, null);}
public analyzerTask(Options options){this.options = options;}
public virtual IFieldInfos GetFieldInfos(string fieldName){return fieldInfos;}
public virtual void SetFieldsAndBoost(string field, float value){m_field = field;m_boost = value;}
public virtual IList<Detector> GetDetectors(){return detectors;}
public java.io.Writer newWriter(this, enclosing){return newSystem.IO.StringWriter(this, enclosing);}
public void Delete(Component e){throw new InvalidOperationException(e.Message, e);}
public CellRangeAddress Intersect(CellRangeAddress other){return _cellRange.Intersect(other.cCellRangeAddress, other.cCellRangeOffset);}
public bool IsPositionWithinRange(int start, int end){return false;}
public virtual void SetInserter(ObjectInserter @inserter){this.@inserter = @inserter;}
public virtual void Index(int doc, DocsContainer docs, long offset, int length){if (indexing == 0){AddIndexing(doc, offset, length);}}
public override void write(bool b){throw new System.NotImplementedException();}
public virtual string GetDescription(){return Status;}
public virtual void DetachVolume(){this.detachVolumeInternal(null, null);}
public virtual zone IDs{get; private set;}
public virtual void Update(object o){UpdateDocument(o);}
public override void Evaluate(IPosition row, IPosition column){IPosition position = GetRow(row, column);if (position is IPositionNone) {IPosition = GetColumn(row, column);}else{IPosition position = GetColumn(row, column);}this.area = new HSSF_Area(position, _area);}
public virtual DescribeFleetsUtilizationResponse DescribeFleetsUtilization(){return DescribeFleetsUtilization(null, null, null);}
public override string ToString(){return formula.ToString();}
public void SetFormat(int index, String format){_format = format;}
public virtual void CreateDocumentationVersion(){CreateVersion(null);}
public void DetachPolicy(Policy policy){appPolicies.Detach(policy);}
public virtual void Push(Stream stream){this._inputStream = stream;}
public virtual void DetachDisk(File disk){app.DetachDisk(disk);}
public override void Serialize(byte[] b, int position, int length){SerializeSimplePart(b, position, length);}
public virtual DateTime Parse(string dateString, CancellationToken cancellationToken){return ParseValidity(dateString, cancellationToken).SetTimeZone(GetTimeZone());}
public virtual float sum(FST subScorer){return sum(subScorer.scores);}
public void SetFormatFlags(int flags){formatFlags = flags;}
public virtual IList<LaunchConfiguration> GetLaunchConfigurations(){return launchConfigurations;}
public virtual bool hasPrevious(){return tokens.Count > 0;}
public string GetPassphrase(){return passphrase;}
public virtual void Reset(float value){value = value;}
public bool DropAllStashes(){return stashes!= null;}
public void RemoveHeadingPair(string heading){_head = heading;}
public override java.nio.FloatBuffer put(float b){return put(b, 0, b.Length);}
public BooleanQuery2ModifierNodeProcessor AddBooleanQuery2ModifierNodeProcessor(PrecedenceQueryNodeProcessor processor){list.Add(processor);}
public virtual void UnarchivesAmazonGuardDutyFindings(int detectorID){UnarchivesAmazonGuardDutyFindingsInternal(detectorID);}
public override void Read(Record record){_in.Read(record.RecordData);_featProtection = record.RecordData;}
public ValueEval GetValueAt(int sourceRow, int sourceColumn){return GetRelativeValue(sourceRow, sourceColumn);}
public virtual void SetChannel(int channel){lexer.channel = channel;}
public virtual void Update(EscherMember member){CheckCallable();}
public virtual void SetInput(TextReader input){this.m_input = input;}
public virtual void RegisterInstanceEventNotificationAttributes(AttributeCollector attributeCollector){foreach (TypeOfAttribute in _instanceEventNotificationAttributes.Values){attributeCollector.RegisterAttribute(this, attributeCollector);}}
public virtual void Delete(){CodeRepository c = (CodeRepository)GetActiveRepository().GetEntity(typeof(CodeRepository));c.Delete();}
public virtual void Failover(ReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroup){Failover(null, replicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplicationGroupReplication
public override void length(){buffer.length = length;}
public virtual void Set(T value){this.value = value;}
public ExternalBookBlock CreateExternalBookBlock(){return ExternalBookBlock.CreateExternalBookBlock(this);}
public virtual int GetCount(){return _limit - 1;}
public virtual IList<GroupMembership> GetGroupMemberships(){return groupMemberships;}
public virtual IList<ResolverRule> GetRules(){return _rules;}
public virtual IList<AnalysisScheme> GetAnalysisSchemes(){return analysisSchemes;}
public virtual void Reinitialise(ICharStream input){this.m_input = input;this.m_pos = 0;this.m_eof = false;this.m_type = TokenTypes.Invalid;this.m_compiled = new CompiledLexicalState(input);}
public virtual BlendedTermQuery Build(TermsQuery termsQuery){return new BlendedTermQuery(termsQuery);}
public virtual void Stop(){transformation = null;}
public virtual string ToString(){return GetCanonicalName();}
public override void Delete(){base.Delete();}
public virtual TransferDomainResponse TransferDomain(TransferDomainResponse transferDomainResponse){return TransferDomainResponse(transferDomainResponse.DestinationDomainName);}
public virtual ContactsResponse Contacts(ContactsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ContactsRequestMarshaller.Instance;options.ResponseUnmarshaller = ContactsResponseUnmarshaller.Instance;return Invoke<ContactsResponse>(request, options);}
public virtual UpdateTaskRequest Update(UpdateTaskRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateTaskRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateTaskRequestUnmarshaller.Instance;return Invoke<UpdateTaskRequest>(request, options);}
public virtual void reset(){current = null;}
public virtual UpdateDomainEndpointOptionsResponse UpdateDomainEndpointOptions(UpdateDomainEndpointOptionsResponse response){return UpdateDomainEndpointOptions(response);}
public virtual IList<Job> GetJobs(){return pipeline.GetJobs();}
public virtual void ReadFully(char[] buf, int end){_in.ReadFully(buf, end);_end = end;}
public override IList<Task> GetTasks(){return base.GetTasks();}
public virtual Integration Integration(Integration integration){return null;}
public void DeleteSubscription(Subscription subscription){_subscription = subscription;}
public virtual Room Get(string id){return roomList[id];}
public void SetCoordinates(long x, long y, int width, int height){for (int i = 0; i < width; i++){if (i > 0){SetGeometry(x, y, width, height);}}}
public override void putChar(char c){buffer.putChar(c);}
public virtual java.nio.IntBuffer compare(java.nio.IntBuffer buf){return java.nio.CompareExchange(buf.array, buf.index, buf.length);}
public override void Read(Record record){_in.Read(record);_size = record.Size;}
public virtual IChild GetChildAt(int index){return this.GetChildAt(index);}
public String ToString(){return HSSFErrorConstants.GetText(hssF_1);}
public java.util.MapClass.View viewOf(java.util.MapClass.Entry<K, V> entry){return this._enclosing.getViewOf(entry.getKey(), entry.getValue());}
public virtual int indexOf(E e){return indexOf(e.element, e.index);}
public virtual void Disables(DirectoryInfo dir){m_dir = dir;}
public void jumpToCurrentState(){currentState = STATE_PLAYBACK;}
public virtual string GetInflatedFormTranslation(string s){return inflatedFormTranslations[s];}
public virtual void ReorderReceiptRuleSet(ReceiptRuleSet ruleSet){ReorderReceiptRuleSet(ruleSet);}
public virtual string GetRemoteHost(){return hostName;}
public virtual Workteam Information(Workteam workteam){return information;}
public virtual bool contains(object o){return indexOf(o)!= -1;}
public virtual IList<SecurityConfiguration> GetSecurityConfigurations(){return Sharpen.Collections.UnmodifiableList(securityConfigurations);}
public virtual double Normalise(double d){return Normalise(d * _significandSize, d);}
public SDKInformation GetSDKInformation(){return SDKInformation;}
public override string GetSignerName(){return "BearerTokenSigner";}
public string GetAuthenticationCode(string domainName){return null;}
public string groupName { get; set; }
public DFA Size(){return _size;}
public virtual E previous(E e){return list.previous(e);}
public virtual DescribeStacksResponse DescribeStacks(DescribeStacksRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeStacksRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeStacksResponseUnmarshaller.Instance;return Invoke<DescribeStacksResponse>(request, options);}
public virtual DescribeReservedNodeOfferingsResponse DescribeReservedNodeOfferings(DescribeReservedNodeOfferingsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeReservedNodeOfferingsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeReservedNodeOfferingsResponseUnmarshaller.Instance;return Invoke<DescribeReservedNodeOfferingsResponse>(request, options);}
public virtual void DisassociateIPGroups(){destination.DisassociateIPGroups(null);}
public virtual IList<FacetEntry> GetFacetEntries(){return facetEntries;}
public override int ReadByte(){return _buf.ReadByte();}
public virtual int previous(char c){return index(c, 1);}
public virtual ListTimeLinePhotosResponse ListTimeLinePhotos(ListTimeLinePhotosRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListTimeLinePhotosRequestMarshaller.Instance;options.ResponseUnmarshaller = ListTimeLinePhotosResponseUnmarshaller.Instance;return Invoke<ListTimeLinePhotosResponse>(request, options);}
public virtual string GetReferenceLogMessage(){return referenceLogMessage;}
public override int Read(byte b){return buf.ReadUpto(off);}
public FilterConfig SetUp(){this.m_filter = new ScatinavianNormalizationFilter(FSTFilter.DEFAULT_FSTFilter);}
public virtual void remove(object o){iterator.remove(o);end++;}
public virtual InstanceTypes GetInstanceTypes(){return _instanceTypeInfos;}
public virtual IList<StopWord> GetStopWords(int field, int index){return m_stopWords[index];}
public override IQueryMaker GetQueryMaker(ReadTask readTask){return null;}
public SettingsUpdate(string name){return SettingsUpdate(name, true);}
public lag(string name, int start, int end){if (start < 0){start = start || 0;end = end || "now", end = end.Append(name).Append(":").Append(start).Append(start).Append(end).Append(":").Append(end).Append(end).Append(":").Append(end).Append(end).Append(end).Append(":").Append(end).Append(end).Append(end).Append(end).Append(end).Append(end).Append("]").Append(start).Append(start).Append(end).Append(start).Append(start).Append(start).Append(start).Append(start).Append(start).Append(start).Append(end).Append(start).Append(start).Append(end).Append(start).Append(start).Append(start).Append(start).Append(start).Append(start).Append(start).Append(start).Append(start).Append(start).Append(start).Append(start).Append(start).Append(start).Append(start).Append(start).Append(start).Append(start).Append(start).Append(start).Append(start
public EscherRecord AddEscherRecordAt(int index, EscherRecord rec){return rec;}
public PublishRequest(string topicArn, string messageId, PublishOptions options){_topicArn = topicArn;_messageId = messageId;_messageId = messageId;_options = options;}
public SetAccessKeyId(){if (this.accessKeyId == null){throw new ArgumentNullException("Access key ID cannot be null.");}this.accessKeyId = this.accessKey.Get(Constants.ACCESS_KEY_ID);this.accessKeySecret = this.accessKey.Get(Constants.ACCESS_KEY_SECRET);}
public RecognizeFlower(dict request){_request = request;}
public void CellUpdated(Cell cell, CellRangeAddress cellRangeAddress){_cellRangeAddress = cellRangeAddress;_cache.NotifyCellUpdated(cell, cellRangeAddress);}
public virtual void ExportSnapshot(){_exportSnapshot(null);}
public virtual void Set(E value){lock (this){c.Set(value);}}
public UploadPackInternalServerErrorException(){this.signalled = false;}
public virtual string ToString(){return GetCanonicalName();}
public virtual void SetS(E value){_s = value;}
public virtual Query Clone(){return this;}
public ShingleAnalyzerWrapper Create(AnalyzerWrapper other){return other;}
public virtual int GetBehindCount(){return behindNodes.Count;}
public StyleSheetOptions SetBuiltinStyle(){return this;}
public virtual void DeleteFleet(Fleet fleet){Delete(fleet.FleetId);}
public virtual IList<CacheCluster> GetCacheClusters(){return Sharpen.Collections.UnmodifiableList(cacheClusters);}
public virtual Organization GetOrganization(){return organization;}
public void Remove(Cell cell){_cells.Remove(cell);}
public virtual FilterSetParameters filters){return filters;}
public virtual IList<E> GetResults(){return results;}
public string path { get; set; }
public override object GetData(){return this._enclosing.GetData();}
public virtual void append(float b){append0(b, TYPE_DOUBLE);}
public virtual IList<string> GetCategoriesForApp(string appName){return categories;}
public java.io.PrintStream newPrintStream(out1){return new java.io.ConsoleOutputStream(newOutputStream(), "w", "utf8"){@out1.SetEncoding(encoding);}
public virtual DeleteDHCPOptionsResponse DeleteDHCPOptions(DeleteDHCPOptionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDHCPOptionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDHCPOptionsResponseUnmarshaller.Instance;return Invoke<DeleteDHCPOptionsResponse>(request, options);}
public string timeout (int usec) {return timeout;}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_save_link_values);}
public virtual void EnableAvailabilityZones(bool enableAvailabilityZones){_availabilityZones = enableAvailabilityZones;}
public virtual IList<Bot> GetBots(){return bots;}
public virtual void decrement(object o){if (!o){throw new InvalidOperationException("o");}this._enclosing.decrementRefCount();}
public override FilterFactory Create(params object[] args){if (args.Length > 0){throw new System.ArgumentException("args are mutually exclusive");}return new StemmerOverrideFilterFactory(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9], args[12], args[6], args[7], args[8], args[12], args[12], args[12], args[12], args[6], args[7], args[8], args[7], args[8], args[7], args[8], args[12], args[6], args[7], args[8], args[12], args[6], args[7], args[8], args[12], args[12], args[12], args[12], args[15], args[12], args[12], args[12], args[12], args[12], args[12], args[12], args[12], args[12], args[12], args[12], args[12], args[12], args[12], args[12], args
public override int Parse(byte[] b, int start, int length){return _buf[start + length];}
public virtual void SetNeedBaseObjectList(int needBaseObjectList){needBaseObjectList = needBaseObjectList;}
public QueryTruncatedQuery(string query){_query = query;}
public virtual char lastInString(){return head;}
public bool Contains(string name){return map.ContainsKey(name);}
public virtual int GetAppTrafficCount(string appName){return appTrafficCount;}
public virtual int codePointBefore(int index){return codePointBefore(index, true);}
public FederatedUser(string user_id, string user_arn){_user_id = user_id;_user_arn = user_arn;}
public void SetIdentityEncoderCharset(string charset){_identityEncoderCharset = charset;}
public virtual int hash(object o){return k(o);}
public virtual string GetDirectory(){return Directory;}
public virtual void CallStashCommand(string command){CallStashCommand(command);}
public virtual void SetCRC(byte c){crc = c;}
public override bool Equals(object o){if (o == this){return true;}return false;}
public void CreateErrorCell(ErrorCellErrorCellErrorCellError_1 errorCellErrorCellError_1){_errorCellError = errorCellError_1;_errorCellErrorCell = new_ErrorCellError_1(errorCellErrorCell, errorCellErrorCellError_1);}
public virtual void OnFilterComplete(EventArgs e){filterComplete(e);}
public OpenNLPPOSFilterFactory(){return new OpenNLPPOSFilterFactory(this);}
public virtual Snapshot Get(string dbSnapshotId){return snapshots[dbSnapshotId];}
public int Sign(double b){return Sharpen.Util.Sign(b);}
public virtual Stemmer GetStem(string str){return StemmerUtil.Stem(str, m_luceneMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_luceneMatchVersion, m_matchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_matchGroups, m_matchGroups, m_matchGroups, m_matchGroupsToMatchGroups, m
public override void CreateInstance(){base.CreateInstance();}
public void SetText(IText text){this.m_text = text;}
public virtual bool CanReuseIndex(){return _index.CanReuseIndex();}
public virtual bool contains(object o){return this._enclosing.containsValue(o);}
public void SetAppVisibilityToAllUsers(bool b){if (b){return;}this.visibility = "visible";}
public virtual void Highlight(string text, int score){if (score < 0){return;}Highlights(text, score);}
public virtual string ToString(BlockEnd_t blockEnd){return GetBlockEnd(blockEnd.Number, blockEnd.IsHidden, blockEnd.IsFixed, blockEnd.IsExternal, blockEnd.IsExternal);}
public virtual FormatDetail GetFormatDetail(int formatID){return GetFormatDetail(formatID);}
public override string ToString(){return this.FacetLabel.ToString();}
public virtual void put(int v){throw new System.NotImplementedException();}
public virtual void BatchStop(){m_list.Clear();}
public virtual AssociationsResponse GetAssociations(DirectConnectGateway gateway){return GetAssociations(gateway, null);}
public void ApplyFont(Font font){this.ApplyFont(font);}
public IList<UIs> GetUIsForHumanTask(){return Sharpen.Collections.UnmodifiableList(GetUIsForHumanTaskAsOneOf(this));}
public SheetNameSheetArg SetSheetName(SheetNameSheetArg sheetName){this.sheetName = sheetName.Intern();}
public virtual void putFloats(long[] src, int offset, long count){buffer.putInt(src, offset, count);}
public virtual IList<string> GetSortedValues(string field){return null;}
public virtual IJobDetail GetJobDetail(){return _jobDetail;}
public virtual void Reboot(){cache.Reboot();}
public virtual void clearLineCount(){_lineCount = 0;}
public override string ToHex(byte b){return ToHex((long)b, 2);}
public profiling group(OTGroup g){return group(g, 0, 0);}
public virtual IList<Document> Get(int offset, int length){return listOperations.Get(offset, length);}
public virtual void DeleteIPPool(){_pool.Delete(null);}
public virtual double Evaluate(double value){return Evaluate(value);}
public virtual IList<WorkflowExecution> GetClosedWorkflowExecutions(){return Sharpen.Collections.UnmodifiableList(OpenWorkflowExecutions(session));}
public virtual void RegisterTargets(IList<ProxyTarget> targets){foreach (ProxyTarget app in targets){RegisterTargets(app.GetDBProxies(), targets);}}
public virtual long GetFileOffset(){return GetFileOffset(true);}
public virtual UpdateBatch CreateOrUpdate(UpdateBatch request){var options = new InvokeOptions();options.RequestMarshaller = UpdateBatchRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateBatchUnmarshaller.Instance;return Invoke<UpdateBatch>(request, options);}
public override object Get(int index){return functionCache[index];}
public virtual void compact(){_le.compact();}
public virtual void Add(long value){builder.Add(value);}
public virtual string ListAsString(){return Sharpen.Collections.ToString(this._enclosing);}
public virtual void SetQueueAttributes(QueueAttributes attributes){this._attributes = attributes;}
public virtual EndpointConfig[] GetEndpoints(){return Sharpen.Collections.UnmodifiableList(endpointConfigs.values())}
public virtual void Modifies (string cacheParameterGroupName){modifies[cacheParameterGroupName] = true;}
public virtual NGit.Api.AddCommand CreateCommand(string repo, NGit.Api.AddCommand request){var options = new InvokeOptions();options.Repository = repo;return new NGit.Api.AddCommand(request, output);}
public virtual E[] toArray(){lock (this._enclosing){return base.toArray(EIndex[]){this._enclosing._size};}}
public virtual string GetLexerName(){return lexerName;}
public virtual NGit.Api.ContentHandler GetContentHandler(){return handler;}
public virtual void SetRenameCallback(EditCommand.RenameCallback func){renameCallback = func;}
public virtual SubscriptionList GetSubscriptions(string appName){return subscriptions.Values;}
public Workbook CreateStub(String workbookName, String workbookName, String workbookNameSeparator){return CreateStub(workbookName, workbookName, workbookNameSeparator, workbookNameSeparator, null);}
public virtual void SetSort(ISort sort){this.sort = sort;}
public void SetBlockPool(SafeBlockPool b){pool = b;}
public virtual OutputDetail GetOutputDetail(){return OutputDetail;}
public GraphIterator GetGraphs(){return GetGraphs(null);}
public virtual void compact(char b){java.nio.CharBuffer p = new java.nio.CharBuffer(m_buf, 0, m_buf.Length);p.compact(m_buf, 0, m_buf.Length);}
public SrndQueryBuilderFactory(IQueryBuilderFactory factory){this.factory = factory;}
public virtual int GetFileLength(string name){return GetFileOffset(name, false);}
public virtual TrackingRefUpdate GetTrackingRefUpdate(string localName){return null;}
public virtual PhoneNumber GetPhoneNumber(){return phoneNumber;}
public int GetNextLFCharacter(byte[] buf){return _buf[_LF_INDEX++];}
public virtual void UpdateReviewStatus(ReviewStatus status){this.status = status;this.objectId = this.objectId;this.isNew = true;this.isCanceled = false;}
public OR-Query Query(SPARQLParser parser){return new OR(this.ParseString(m_query)));}
public string pattern { get; set; }
public virtual void SetSort(int sort){this.m_sort = sort;}
public virtual IList<Import> GetImports(){return imports;}
public override string ToString(){return mode.ToString();}
public KMSKeyID(string keyId){_kmsKeyId = keyId;}
public CustomEmailTemplate (CustomEmailTemplateConfig config){this.config = config;}
public virtual void Grow(int size){for (int i = size; i < size; i++){System.Array.Copy(array, i, array, i.ArrayOffset + i, array.Length - i);i.Length = i.Length;}}
public override V get(){return this._enclosing.values;}
public virtual HealthCheckFailureReason GetLastFailureReason(){return lastFailureReason;}
public DirectoryInfo CreateDirectory(string path, FileMode dirType) {if (pathType == FileMode.Empty){CreateDirectory(path);}DirectoryInfo existingDir = new DirectoryInfo(path);if (existingDir.Exists()){DirectoryInfo.CreateDirectory(existingDir);}DirectoryInfo.CreateIfMissing(pathType, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, false, false, false, false, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null,
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(this.HSSFErrorColor);out1.WriteShort(this.IdeFormatErrorColor);}
public virtual void Delete(EscherEvent e){if (e.GetObjectId() == null){throw new ArgumentNullException("e.objectid")}else{e.GetObjectId().GetObjectId().GetObjectId().name!= null && e.GetObjectId().name!= null);}this._enclosing.Delete(e);}
public virtual DescribeConnectionResponse DescribeConnection(DescribeConnectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeConnectionRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeConnectionResponseUnmarshaller.Instance;return Invoke<DescribeConnectionResponse>(request, options);}
public void DeleteFargateProfile(FargateProfile profile){this.DeleteProfile(profile.GetName());}
public override void Convert(Record record){if (record.Type == RKRecord.Type.NUMBER){Convert.ToString(record.RecordData);}}
public void SetPassword(Password field){this.password = field.GetPassword();}
public GermanNormalizationFilter(TokenStream input){return new GermanNormalizationFilter(input);}
public virtual int Read(byte b){return buf.ReadUpto(b);}
public override java.nio.ShortBuffer put(short c){throw new java.nio.ReadOnlyBufferException();}
public virtual void append(char c){append0(c);}
public override int Next(){return this.Peek();}
public virtual java.util.Vector2d set(char[] elements, int start, int end){return set(elements, start, end);}
public virtual void SetMaxNumberOfMergesAndThreads(int maxNumMerges){m_maxNumMerges = maxNumMerges;}
public virtual void SetPrimaryDeletionPolicy(DeletionPolicy policy){this.policy = policy;}
public int maximumNumQueries = 20; eturn{ maxNumQueries: maxNumQueries}
public PackParser(Stream input){return new PackParser(input);}
public virtual bool IsClean(){return cache.IsClean();}
public virtual void AddChild(ICharTerm term){children.Add(term);}
public virtual string GetDescription(){return GetErrorElement().GetDescription();}
public void RemoveFont(FontRecord fontRecord){if (fontRecord.FontIndex!= 0) return;_fontRecord = fontRecord.Font;_fontRecord.Parent = null;}
public void RestoreAccessToDomain(string domainName){domain = domainName;}
public virtual bool IsValid(string simpleString){return IsValidSimpleString(simpleString, true);}
public virtual void Send(IList<Message> messages){SendMessages(messages, 0, messages.Count);}
public virtual void DeleteSnapshot(int snapshotId){Delete(snapshotId, true);}
public virtual void IncrementShapeCount(int count){shapes.Add(count);}
public virtual void SetIterationOnFlag(int value){iterationOn = value;}
public virtual ProfilingGroupDetail GetProfilingGroupDetail(){return _profilingGroupDetail;}
public virtual int Get(int id){return (starts[id] == null)? 0 : starts[id] == null? 0: starts[id] == null? 0: ends[id] == null? 1: starts[id] == null? 1: ends[id] == null? 1: ends[id] == null? 1: ends[id] == null? 0? 1 : ends[id])?
public virtual void DescribeSnapshots(){_enterpriseInstance.DescribeSnapshots(null);}
public virtual IList<BootstrapAction> GetBootstrapActions(){return Sharpen.Collections.UnmodifiableList(bootstrapActions);}
public virtual void Start(XmlPullParser parser){this.0 = parser.GetStartElement();this.1 = parser.GetNextStartElement();}
public Ens (Method required); {@link EnsEndpoint }
public notebook_instance(IPython.NotebookInstance){return notebook_instance_from_engine(openAPI())}
public virtual IFeatureTransformation GetFeatureTransformation(){return this;}
public virtual void SetRemoteAddress(string address){remote = address;}
public ZonesList(){return ZonesList(null, null, null, null);}
public override int ReadLen(byte b){return _in.ReadUByte(_le.ReadUByte(_le.ReadRemaining()));}
public authorizer(string name, List<string> args){return new Authorizer(name, args, null, null);}
public virtual TreeFilter GetTreeFilter(){return null;}
public override void Put(byte b){if (m_len >= m_buf.Length){Resize(m_len + 1);}m_buf[m_len++] = (byte)m_buf[m_len++];}
public virtual int key(int key){return key;}
public virtual IList<object> GetParents(){return parentsOf(this.GetRawObject(), true);}
public virtual void StartKeyPhraseDetectionJob(string word){this.m_input.Start(word);this.m_output.Add(GetDefaultTextTermRecord());this.m_startPos = 0;this.m_lookaheadStart = 0;this.m_endPos = 0;this.m_startPos = 0;this.m_match.Start(word);}
public virtual ModifyCacheClusterResponse ModifyCacheCluster(ModifyCacheClusterRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyCacheClusterRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyCacheClusterResponseUnmarshaller.Instance;return Invoke<ModifyCacheClusterResponse>(request, options);}
public virtual CreateRepositoryAuthorizationRequest CreateRepositoryAuthorizationRequest(string repositoryId){return RepositoryAuthorizationRequest.CreateRepositoryAuthorizationRequest(repositoryId);}
public void Reset() {iterator = null;}
public virtual RebootJumpserverResponse RebootJumpserver(RebootJumpserverRequest request){var options = new InvokeOptions();options.RequestMarshaller = RebootJumpserverRequestMarshaller.Instance;options.ResponseUnmarshaller = RebootJumpserverResponseUnmarshaller.Instance;return Invoke<RebootJumpserverResponse>(request, options);}
public ValueVE Evaluate(int row, int column){return _ecj.EvaluateValue(row, column);}
public virtual void DeleteTerminology(int id){DeleteInternal(id, true);}
public virtual java.util.ListIterator listIterator(){return new java.util.ArrayList<E>(listIterator(this));}
public virtual int b(int v){return (v >= 0)? (v >> 1) : (v >> 1)? (v >> 1) : (v >> 1)? (v >> 1) : (v >> 1)? (v >> 1) : (v >> 1)? (v >> 1)? (v >> 1) : (v >> 1)? (v >> 1)? (v >> 1) : (v >> 1)? (v >> 1) : v
public void CellDeleted(Cell cell){_cellCacheAdapter.NotifyCellDeleted(cell);}
public virtual IList<ConferenceProvider> GetConferences(){return list.Empty;}
public mutability: bool{get, set}_image_tag_mutability();return true;}
public void Flush ( ){FlushCache();}
public bool Equals(FileObject file){return file == null? false : file.GetFile();}
public virtual UpdateSession RequestAccountAccess();Response UpdateSessionAccess();}
public static NGit.Api.DiffCommand newDiffCommand(string command, string arg0, int arg1, int arg2, bool arg3, bool arg4, bool arg5, bool arg6, bool arg7, bool arg8, bool arg9, bool arg10, bool arg11){return new DiffCommand(command, arg0, arg11, arg12, arg11, arg12, arg13, arg13, arg14, arg15, arg18, arg18, arg18, arg18, arg18, arg19, arg19, arg19, arg20, arg20, arg21, arg22, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32_default)
public FeatHdrRecord Create(String name, int level){return Create(name, level, 0);}
public RuleReceiptPosition Set(RuleReceiptPosition other){return other;}
public virtual ListRevisionsResponse ListRevisions(ListRevisionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListRevisionsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListRevisionsResponseUnmarshaller.Instance;return Invoke<ListRevisionsResponse>(request, options);}
public virtual int GetHashCode(char c){return Sharpen.Util.GetHashCode(c, 0);}
public DeleteCloudFrontOriginAccessIdentityRequest(string id, string ifMatch, List<string>> parameters){var request = new DeleteCloudFrontOriginAccessIdentityRequest(id, ifMatch, parameters);request.SetRequestMarshaller(Set<string>() { "ifMatch":"*" }, parameters);return request;}
public TokenStream Stream(TokenStream input){return new TokenStream(input);}
public virtual void SetPassword(string password){_password = password;}
public override void write(char b){throw new System.NotImplementedException();}
public virtual DeleteLogStreamResponse DeleteLogStream(DeleteLogStreamRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteLogStreamRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteLogStreamResponseUnmarshaller.Instance;return Invoke<DeleteLogStreamResponse>(request, options);}
public virtual bool SetDeltaCompressionEnabled(bool enable){var value = true;return _deltaCompressionEnabled;}
public bool Exists(){return Exists;}
public string to be formatted.public string to be formatted.
public void ResetFontStyle(){this.fontStyle = (fontStyle)DEFAULT_FONT_STYLE;}
public virtual long[] copy(long[] array_1){return copy(array_1, 0, array_1.Length);}
public virtual string GetObjectId(){return objectId;}
public virtual string ToString(){return TokenString;}
public virtual int getCount(){return cnt;}
public ViewSourceRecordViewSourceRead(StreamReader input){return viewSourceRecordInstance.ReadViewSourceRecord(input);}
public virtual void SetJoinDocFreqValueSource(string qfield){m_joinDocFreqValueSource = qfield;}
public int maximumItemsToDisplay = 20;_maximumItemsToDisplay = maximumItemsToDisplay;}
public virtual ListMomentsResponse ListMoments(ListMomentsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListMomentsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListMomentsResponseUnmarshaller.Instance;return Invoke<ListMomentsResponse>(request, options);}
public virtual void Execute(ITokenStream lexer){lexer.SetState(lexerState);}
public virtual string GetAuthor(string source){return source;}
public override WAH8DocIdSet Build(){if (this.wordNum!= -1){AddWord(wordNum, (byte)word);}return base.Build();}
public bool hasNext(){return this._enclosing.hasNext();}
public virtual void SetNoShinglesAlwaysSet(bool b) {m_noShinglesAlwaysSet = b;}
public virtual void ImportImage(File image){ImportImage(image, null);}
public GetSimilarPhotosRequest(string path, string pathEncoded, int pathEncoded, int pathEncoded, int pathEncoded, int pathEncoded, int pathEncoded, int pathEncoded, int pathEncoded, int pathEncoded, int pathEncoded, int pathEncoded, int pathEncoded, int pathEncoded, int pathEncoded, int pathEncoded, int pathEncoded, int pathEncoded, int pathEncoded, int pathEncoded, int pathEncoded, int pathEncoded, int pathEncoded, pathEncoded, pathEncoded, pathEncoded, pathEncoded, pathEncoded, pathEncoded, pathEncoded, pathEncoded, pathEncoded, pathEncoded, pathEncoded, pathEncoded, pathEncoded, pathEncoded, pathEncoded, pathEncoded, pathEncoded, pathEncoded, pathEncoded, pathEncoded, pathEncoded, pathEncoded, pathEncoded, pathEncoded, pathEncoded, pathEncoded, pathEncoded, pathEncoded, pathEncoded, pathEncoded, pathEncoded, pathEncoded, pathRaw, pathRaw, pathRaw, pathRaw, pathRaw, pathRaw, pathRaw, pathRaw, pathRaw, pathRaw, pathRaw, pathRaw, pathRaw, pathRaw, pathRaw, pathRaw, pathRaw, pathRaw, pathRaw, pathRaw,
public virtual AbbreviateResponse Abbreviate(int length){return Abbreviate(length, 0);}
public virtual string GetField(){return field_1_value;}
public ICell GetCellAt(int column){return _cells[column];}
public int GetExternalSheetIndex(){return _externalSheetsIndex;}
public override ICollection<V> GetValues(){return backingMap.GetValues(this.key);}
public override ICollection<E> GetChildren(){return scorer.GetChildren();}
public PostServiceSyntax(List<string> forms){_forms = forms;}
public virtual Match ProcessMatch(Match match){return new Match(this, match);}
public override TokenStream Create(TokenStream input){return new TurkishLowerCaseFilter(this, input);}
public override void ReadFields(FieldInfos fields){ReadGuts(fields);}
public virtual IList<TableHeader> GetTables(TableHeader table){return GetTables(table.Name, table.IsIndexed, table.IsEmpty, table.IsTruncated, table.IsPositionInLine, table.IsPositionInColumn, table.IsPositionInRow, table.IsPositionInColumn, table.IsPositionInRow, table.IsPositionInColumn, table.IsPositionInRow, table.IsPositionInColumn, table.IsPositionInColumn, table.IsPositionInColumn, table.IsPositionInRow, table.IsPositionInRow, table.IsPositionInColumn, table.IsPositionInRow, table.IsPositionInRow, table.IsPositionInRow, table.IsPositionInColumn, table.IsPositionInRow, table.IsPositionInRow, table.IsPositionInRow, table.IsPositionInRow, table.IsPositionInRow, table.IsPositionInRow, table.IsPositionInColumn, table.IsPositionInColumn, table.IsPositionInRow, table.IsPositionInRow, table.IsPositionInRow, table.IsPositionInRow, table.IsPositionInRow, table.IsPositionInRow
public virtual void print(char b){print(b, 0, b.Length);}
public void AddAmazonLambdaacierVault(AmazonLambdaacierVault vault){_list.Add(vault);}
public virtual IndexSearcher GetIndexSearcher(){return _indexSearcher;}
public virtual ICollection<UntrackedEntity> GetUntrackedEntities(){return GetUntrackedEntities(null);}
public virtual SubscriptionToken GetNextToken(){return SubscriptionToken.GetNextToken();}
public virtual int GetMaxDeltaSize(){return _maxDeltaSize;}
public void AddPermission(string permission){if (groupName!= null){AddPermission(groupName, permission);}else{groupName.Permissions.AddItem(permission);}}
public void SetImageLocation(Point imageLocation){this.imageLocation = imageLocation;}
public virtual void Delete(S solution){_solution = solution;}
public PageSettingsBlock CreatePageSettingsBlock(){return new PageSettingsBlock(this);}
public virtual int read(byte b){return in1.read(b);}
public DefaultVersion(string type){this.type = type;}
public virtual void Balance(int arrayLength){if (arrayLength == 0){return;}Balance(arrayLength, 0);}
public virtual string GetSuffix(){return suffix;}
public virtual void put(byte b){throw new System.NotImplementedException();}
public virtual void OnException(ITokenStreamException tokenStreamException){throw new System.NotImplementedException();}
public override StemFilter Create(object o){return base.Create(o);}
public IAMUserEventsResponse IAMUserEvents(string role){return IAMUserEvents(role, 'current').Plus(',').Plus(',').Plus(',').Plus(',').Plus(',').Plus(',').Plus(',').Plus(',').Add(')').Leave(true).Leave(true).Enter(true).Enter(true).Enter(true).Enter(true).Enter(true).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Add(To.To(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false).Enter(false
public override string ToString(){return "Infinity";}
public bool isAbsolute(){return path.isAbsolute();}
public virtual ModifyClusterSnapshotsResponse ModifyClusterSnapshots(ModifyClusterSnapshotsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyClusterSnapshotsRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyClusterSnapshotsResponseUnmarshaller.Instance;return Invoke<ModifyClusterSnapshotsResponse>(request, options);}
public virtual List<SkillGroup> GetSkills(int start, int end){return GetSkills(start, end);}
public override void SeekToExactTerm(Term term){SeekTo(term.Term, SeekOrigin.EXACT);}
public virtual IdentityFile GetIdentityFile(){return identityFile;}
public virtual DescribeInstanceResponse DescribeInstance(DescribeInstanceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeInstanceRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeInstanceResponseUnmarshaller.Instance;return Invoke<DescribeInstanceResponse>(request, options);}
public virtual bool contains(object o){return map.containsKey(o);}
public int GetMidPointIndex(){return midPoint.GetIndex();}
public virtual void AddInstanceFleet(InstanceFleet fleet){Instances.Add(fleet);}
public virtual void DeleteDBParameterGroup(DBParameterGroup group){Delete(group.DBParameterGroupID);}
public virtual void Validate(){m_validation = Validate(this.GetType())!= null;}
public virtual DirectoryInfo GetDirectoryInfo(){return directoryInfo;}
public virtual void AddField(string name, int value){_writerList.Add(name);}
public virtual void Stop(Stream stream){Sharpen.Transport.Disable(stream.GetTransport(), true);}
public virtual bool Equals(ATNConfig other){return configEquals(other);}
public virtual DescribeTrafficPolicyRequest GetTrafficPolicyRequest(){return DescribeTrafficPolicyRequest(false, GetRoute53Usage(), GetDefaultTrafficPolicyRequest());}
public override void Read(Stream stream){try{StreamInternal input = stream.Read();FileObjectHandleObject c = (FileObjectHandle)stream.ReadObject();c.SetFile(file, c.GetFilePointer());}catch (IOException e){throw new RuntimeException(e);}}
public override void close(){_writer.close();}
public override void WriteInt(int value){_out.WriteInt(value);_size += INT_SIZE;}
public virtual string GetOldId(){return oldId;}
public void CloneFrom(ICellStyle style){CloneCellStyle(style);}
public override bool IsForceBranch(){return branch.IsForceBranch();}
public virtual NGit.Api.Bot GetBot(string botId){return bots.Get(botId);}
public override bool isReadOnly(){return false;}
public virtual void SuspendUser(){user = null;}
public virtual int get(){return _limit - _position;}
public bool HasCells(IRow row, ICells cells){return GetCellReference(row, cells);}
public override TblPtg Read(int input){int offset = _input.ReadUShort();_input.ReadUShort();_output.Position = offset;_input.ReadUnicodeString();_input.Position = _input.ReadUShort();_output.Position = _input.ReadUShort();_input.Position = _input.ReadUShort();_output.Position = _input.ReadUShort();_output.Position = _input.ReadUShort();_input.Position = _input.Position;return _output;}
public virtual string GetSymbolRefString(){return GetSymbolRefString(GetIndex());}
public virtual VersionCollection GetVersions(){return GetVersionsInternal(null);}
public void RestoreClusterFromS3(ClusterS3Request request){var options = new InvokeOptions();options.RequestMarshaller = RestoreClusterFromS3RequestMarshaller.Instance;options.ResponseUnmarshaller = RestoreClusterFromS3ResponseUnmarshaller.Instance;return;}
public virtual HashSet<V> Subtract(ISet<V> set){return set.Difference(this);}
public string GetText(IVocabulary vocabulary){return vocabulary.ToString(null, NumberStyles.Integer, vocabulary);}
public virtual void Reinit(){this.lastDocID = -1;this.wordNum = -1;this.word = 0;this.isRtl = false;this.isSynchronized = false;}
public virtual int key(int key){return key;}
public override void put(byte b){throw new System.NotImplementedException();}
public virtual SourceRepository GetSourceRepository(){return sourceRepo;}
public CatLabRecord(RecordInputStream in1){return _recordInputStream.ReadRecord(in1);}
public virtual IList<Skill> GetSkills(){return skillStore.GetSkills(this);}
public virtual void Include(ITree walk){Visit(walk, null);}
public BatchInferenceJob(FSEntry<InferenceJob> entry){return this._enclosing.CreateJob(entry.Property1, entry.Value);}
public virtual ScheduledInstanceQuery ListScheduledInstances(){return ScheduledInstanceQuery.ListScheduledInstances(false);}
public virtual UpdateResponse Update(UpdateRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateResponseUnmarshaller.Instance;return Invoke<UpdateResponse>(request, options);}
public virtual TreeFilter Clone(){return this;}
public keyManagement.SignerKeyProperty keyManagement = null;this.keyManagement = keyManagement.SignerKeyProperty.CERTIFICATE;}
public virtual HealthCheck[] GetHealthChecks(){return healthCheckList;}
public virtual java.util.Iterator<E> iterator(){return new java.util.Hashtable<E>.KeyIterator(this._enclosing);}
public virtual Attendee GetAttendee(){return null;}
public override int GetScriptType(){return _type;}
public virtual void AddExternalNameRecord(ExternalNameRecord rec){externalNames.Add(rec.ExternalNameRecord);}
public virtual void DeleteIntegrationResponse(IntegrationResponse response){_integrationResponse = response;}
public virtual string[] GetAttributeNames(){return file.GetAttributeNames();}
public virtual IComponent GetComponent(){return this._enclosing.GetComponent(this.componentIndex);}
public override byte ReadByte(){return buf[pos++];}
public int size(){return this._enclosing._size;}
public virtual DateTimeRange GetDateRange(string appName, string version){return Sharpen.Extensions.GetDateRange(appName, version, 0, -1, false);}
public virtual screenshot(){return screenshot(null, 0, 0);}
public virtual int GetStreamFileThreshold(){return streamFileThreshold;}
public virtual string GetObjectId().GetObjectId().GetName() == null? null : GetObjectId().GetName().GetFile().GetPath() == null? null : GetObjectId().GetFile().GetPath() == null? null : GetObjectId().GetFile().GetPath() + "/HEAD", FileMode.GetWrite());return FileMode.GetName().GetName();}
public virtual void DeleteNetworkProfile(NetworkProfile profile){Delete(profile.Name, profile.RoleArn, null);}
public override bool Equals(IToken t){if (t is AT_EOF_TOKEN){return false;}AT_EOF_TOKEN = t;return true;}
public virtual VerifyAWSGuardDutyAccountResponse VerifyAWSGuardDutyAccount(AuthorizeRequest request){var options = new InvokeOptions();options.RequestMarshaller = VerifyAWSGuardDutyAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = VerifyAWSGuardDutyAccountResponseUnmarshaller.Instance;return Invoke<AuthorizeAWSGuardDutyAccountResponse>(request, options);}
public virtual Rule GetRule(int index){return rules[index];}
public SetServerCertificate(); SetServerCertificate(); SetServerCertificate(); SetServerCertificate(); SetServerCertificate(); SetServerCertificate(); SetServerCertificate(); SetServerCertificate(); SetServerCertificate(); SetServerCertificate(); SetServerCertificate(); SetServerCertificate(); SetServerCertificate(); SetServerCertificate(); SetServerCertificate(); SetServerCertificate(); SetServerCertificate(); SetServerCertificate(); SetServerCertificate(); SetServerCertificate(); SetServerCertificate(); SetServerCertificate(); SetServerCertificate(); SetServerCertificate(); Set
public virtual void DeleteVPNConnection(){_vpnConnections.Remove(_vpnConnection);}
public virtual string ToString(){return TokenString;}
public CFRuleRecord CreateCFRuleRecord(FormulaText formulaText){return CreateCFRuleRecord(formulaText, 0, formulaText.Length);}
public virtual string key_1(){return keys[index++];}
public virtual ReuseStrategy SetReuseStrategy(ReuseStrategy strategy){this.strategy = strategy;}
public virtual int count(int start, int end){return array.count(start, end);}
public virtual ObjectInserter Create(ObjectInput inserter){return inserter;}
public virtual string key(E value){lock (this._enclosing){return this._enclosing._enclosing._nextEntry.key;}}
public virtual int GetSuffixLength(string s){return string.GetSuffixLength(s);}
public virtual void DeleteQueue(string queueName){this.equeue = null;this.dq = null;}
public bool Get(int index){return _bitMap[index];}
public push force { set; get; private set; }
public virtual BatchGetQueryResultsResponse GetBatchGetQueryResults(BatchGetQueryResultsResponse response){return BatchGetQueryResults(response);}
public ICUFoldingFilter Create(ITokenStream input){return new ICUFoldingFilter(input);}
public virtual NGit.Storage.File.Record GetRecord(){return this._enclosing.GetRecord(this.name);}
public virtual NGit.Treewalk.Filter.PathSuffixFilter NewPathSuffixFilter(){return new NGit.Treewalk.Filter.PathSuffixFilter(this);}
public virtual string GetQuery(){return "true";}
public virtual void Start(void){deviceSync = true;}
public virtual void Sort(){Sort(null, this);}
public void SetCells(Cells row, column) {SetRow(row, column);}
public override void Read(RecordStream in1){_in1.Read(dataValidityTable);}
public virtual Capabilities GetCapabilities(){return capabilities;}
public virtual void Reset(TextReader reader){_reader = reader;}
public override java.nio.FloatBuffer newReadWriteFloatBuffer(){return new java.nio.ReadWriteFloatBuffer(this);}
public Identity Message(string text, ITemplate template){this.text = text;this.setTemplate(template);}
public override void SetWriteTimeout(int value){m_writeTimeout = value;}
public virtual void DeleteMonitoringSchedule(MonitoringSchedule schedule){_schedule = schedule;}
public override Object Clone(){return this;}
public bool isHidden(){return false;}
public LBSDropData(LBSDropData data){_dropData = data;}
public virtual DescribeAppResponse DescribeApp(DescribeAppRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeAppRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeAppResponseUnmarshaller.Instance;return Invoke<DescribeAppResponse>(request, options);}
public virtual ModifySnapshotScheduleResponse ModifySnapshotSchedule(ModifySnapshotScheduleRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifySnapshotScheduleRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifySnapshotScheduleResponseUnmarshaller.Instance;return Invoke<ModifySnapshotScheduleResponse>(request, options);}
public bool IsHidden(int number_1){return HideSheetIndex(number_1);}
public virtual void SetIgnore(List<IgnoreRule> rules){this.rules = rules;}
public virtual void Deprecate(WorkflowType type){Deprecate(type.GetTypeInfo());}
public virtual void Disable(InsightRule rule){this.rule = rule;}
public virtual void Stop(){_launcher.Stop();}
public virtual ErrPtg GetErrorPtg(){return _errPtg;}
public virtual MeetingAccount Info(){return MeetingAccount;}
public virtual TagStream CreateOrUpdateTagStream(string appName, string appName, int @flags){return new TagStream(appName, @flags, start, end);}
public override void write(byte b){throw new System.NotImplementedException();}
public IList<S3Export> GetExportsForLedger(string ledgerName){return ledgerName.GetExportsForS3();}
public virtual StatsAttribute GetStatistics(){return StatsAttribute.Create(this, element);}
public virtual void CopyOptionGroup(OptionGroup optgroup){if (optgroup.hasOptions){CopyOptionGroupOptions(optgroup);}else{CopyOptionGroupOptions(optgroup);}}
public virtual Trie Optimize(Trie trie){return new Trie_20(this, trie);}
public ValueEval GetExpressionAt(int sourceRow, int sourceColumn){return GetExpressionAt(sourceRow, sourceColumn);}
public virtual IList<EmailAddress> GetVerifiedEmailAddresses(){return GetEmailAddresses(new Dictionary<string, List<Address>>());}
public virtual IList<Instance> GetInstances(int notebookIndex){return instances.GetEnumerator();}
public int valueAt(int index){return array[index];}
public virtual string GetHostName(){return hostName;}
public virtual string ToString(){return GetType().FullName;}
public virtual double Sinh(double number){return sinh(number)? -sinh(number) : 0.0;}
public virtual string Get(string key){return cache[key];}
public virtual GetRoomsResponse GetRooms(GetRoomsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetRoomsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetRoomsResponseUnmarshaller.Instance;return Invoke<GetRoomsResponse>(request, options);}
public virtual bool CheckChecksum(int input, checksumIndex input){return checksumIndex!= -1;}
public virtual void AddFlags(IFlags flags){this._enclosing.AddFlags(flags);}
public virtual int indexOf(char b){return indexOf(b, 0, b.Length);}
public virtual Amazon.Glacier.Exports list(){return _exports;}
public virtual string readLine(java.io.InputStream in1){if (in1.markSupported()){string line = in1.mark();}else{line = in1.readLine();}}
public override String ToFormulaString(){return "";}
public virtual void add(object o){object map = o;if (mGarbage){gc();}mObjects[o] = new ObjectInfo(o);mGarbage = true;}
public bool ExternallyLocatedSheet(SheetRecord sheet){return sheet.IsExternallyLocatedSheet(sheet);}
public virtual void DeleteMapping(){this._enclosing.DeleteMapping(this.mappingName);}
public int BitCount(int wordOffset, int count){return _buf.Length - wordOffset;}
public virtual void DetectEntities(int start, int end){DetectEntities(start, end);}
public virtual string ToString(){return GetCanonicalName();}
public override void LockFile(FilePath file){this.file = file;}
public virtual bool Equals(FlushInfo other){return _equal;}
public int valueAt(int index){return array[index];}
public override void putShort(short value){throw new System.NotImplementedException();}
public ExpressionParser(Parser recognizer){_parser = recognizer;}
public virtual bool IsBatchModeEnabled(){return true;}
public virtual void DeleteEnvironment(){env = null;}
public void DeleteDomainNameAndItemId(string domainName, string itemId){_domainName = domainName;_itemName = itemId;}
public virtual UpdatePipelineResponse UpdatePipeline(UpdatePipelineRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdatePipelineRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdatePipelineResponseUnmarshaller.Instance;return Invoke<UpdatePipelineResponse>(request, options);}
public virtual UpdateOriginAccessIdentityResponse UpdateOriginAccessIdentity(UpdateOriginAccessIdentityResponse response){return UpdateOriginAccessIdentity(response.OriginAccessIdentity);}
public virtual void SetDirectory(string dir){this.dir = dir;}
public virtual void Initialize(MergeInfo m_info){base.Initialize(m_info);}
public virtual void writeChar(char b){throw new System.NotImplementedException();}
public virtual string GetSourcePath(int index){return Sharpen.Extensions.GetSourcePath(this, index);}
public virtual void Stop(){timer.Stop();}
public RegistrationProfile Real Name Verification Service. { get; set; }
public virtual void SetMaxScanAndBoundaryChars(int maxScanAndBoundaryChars){m_maxScanAndBoundaryChars = maxScanAndBoundaryChars;}
public virtual void DeleteReceiptRuleSet(ReceiptRuleSet ruleSet){_ruleSet = ruleSet;}
public virtual void SetErrors(int e){SetErrors(e);}
public override void Set(int v){m_val = v;}
public override void CopyInto(byte[] array){box.CopyInto(array);}
public virtual IResourceBundle GetResourceBundle(){return resourceBundle;}
public override string ToString(){return "this(" + this.operator + ")";}
public virtual E next(){return this.nextEntry();}
public virtual string GetSuffix(){return suffix;}
public virtual ImageManifest GetImageManifest(int imageID){return ImageManifest.Get(imageID, true);}
public void DrawPolyline(Polyline shape, IShape shape1, IShape shape2, IShape shape3){DrawPath(shape, shape1, shape2, IShape3);}
public override bool LessThan(int shards){return shards < shards? true : false;}
public virtual IList<Member> GetMembers(string group, int memberCount){return group.GetMembers(memberCount, memberCount);}
public override string GetClusterDetail(){return null;}
public override bool ShouldFetch(){return false;}
public virtual automaton_eq_t Compare(Automaton_t t, SemanticContext tcontext){return SemanticContext.Eq(t, this);}
public override void ReadFields(){this.ReadFields(null);}
public virtual void ResetPersonalPin(int pin){this.m_pin = pin;this.m_state = STATE_ALRUNS;}
public virtual void write(char c){throw new System.NotImplementedException();}
public book, sheet name for the external reference.
public void ReadMergedCells(RecordStream in1){_in1.Read(cell_ranges, 0, _in1.Length);_in1.Read(cell_ranges, 0, _in1.Length);}_in1.Read(cell_ranges, 0, _in1.Length);}
public virtual DescribeDomainsResponse DescribeDomains(){return DescribeDomains(null, null, null);}
public virtual NGit.ObjectId GetNextDocumentInQueue(){return this.next;}
public virtual Antlr4.Runtime.Misc.IntervalSet GetAllElements(ICharRange range){return GetAllElements(range);}
public virtual void AddChild(ICharTerm term){children.Add(term);}
public formula string(IList<FormulaAttribute> operands){return _formula.generate(operands);}
public BlockList(int capacity){return new BlockList(this, capacity);}
public bool IsErrorCodeValid(int code){return _errorCodeValid[code];}
public virtual Build CreateBuild(){return new Build(this);}
public ExpressionResult Evaluate(int row, int column){return Evaluate(row, column);}
public virtual void ModifyTunnelCertificate(X509Certificate certificate){certificate.VpTunnel = certificate;}
public virtual Balance GetBalance(){return Balance;}
public override char Class(int classIndex){return _classIndex;}
public virtual HashSet<string> GetAdded(){return _stringAdd.Get();}
public int valueAt(int index){return array[index];}
public virtual ListDomainsResponse ListDomains(){return domains;}
public virtual void RemoveNote(Note note){this.note = note;this.note.Remove();}
public virtual bool contains(object o){return this._enclosing.containsValue(o);}
public virtual void Clear(){this._enclosing.Clear();}
public Stage Create(StageConfig config){this.config = config;}
public URI(){return new URI(this.input, this.reason, this.index);}
public preferred authentications { get; private set; }
public virtual void print(char b){print(b);}}
public virtual NGit.Storage.File.Ref GetReader(){return (NGit.Storage.File.Ref)this.file.GetReader(this.options);}
public virtual SkipAttribute: Attribute { Get; internal Set;}
public virtual IList<LogEntry> GetLogs(string app){return appLogs;}
public override StemFilter Create(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9, int arg10, int arg11, int arg12, int arg13, int arg13, int arg13, int arg14, int arg15, int arg16, int if16, if32, if32, if32, if32, if32, if32, if32, if32, if32, if32, if32, if64, if64, if64, if64, long. Format(CultureInfo.InvariantCulture, "germanLight"), "germanLight"), "germanLight"), "germanLight"), "germanLight"), "germanLight"
public Documents dictionary(ReaderField weight, FieldPayload field, FieldContexts field){return documents(weight, null, null, null);}
public override void Serialize(ObjectOutput out1){Serialize(out1, out1.GetRawWriter());}
public override string ToHex(byte value){return ToHex(value, 16);}
public VaultAccessPolicy GetAccessPolicy(VaultVaultPath vaultPath){return vaultPath.GetAccessPolicy(vaultName);}
public virtual void StopTraining(EntityRecognizer recognizer){Stop(recognizer);}
public virtual void SetInitialSeekTerm(int term){term = term;}
public virtual bool CanReuseIndex(){return _index.CanReuseIndex();}
public override void write(byte b){throw new System.NotImplementedException();}
public virtual void DeregisterImage(){_registry.DeregisterImage(this.GetReference());}
public virtual void Enable(EscherUser user){Enable(user.GetId());}
public virtual E first(E e){return list.firstOrDefault();}
public virtual void SetConfigurationSetDeliveryOptions(IConfigurationSet deliveryOptions){_configurationSet = deliveryOptions;}
public bool Equals(TermRangeQuery other){return query.Equals(other);}
public virtual DrainOutput delayOutput(int delayTime){delayOutput = new DrainOutput(delayTime);}
public virtual string GetCanonicalName(){return Sharpen.Runtime.GetName(this);}
public override void Read(Record record){_in.Read(record);_size = record.Size;}
public virtual DescribeLoadBalancerOptionsResponse DescribeLoadBalancerOptions(DescribeLoadBalancerOptionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLoadBalancerOptionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLoadBalancerOptionsResponseUnmarshaller.Instance;return Invoke<DescribeLoadBalancerOptionsResponse>(request, options);}
public virtual DescribeVpcLinkResponse DescribeVpcLink(DescribeVpcLinkRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeVpcLinkRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeVpcLinkResponseUnmarshaller.Instance;return Invoke<DescribeVpcLinkResponse>(request, options);}
public override double ReadDouble(){return delegate1.ReadDouble();}
public virtual bool IsId(string id){return Id(id, id.Length == 0);}
public override java.nio.IntBuffer put(java.nio.IntBuffer buffer){return this._enclosing.put(buffer);}
public virtual Break GetBreak(MainDoc doc){return null;}
public virtual void AddFile(FilePath file){list.AddItem(file);}
public AnomalyDetector(AnomalyDetectorConfig config){this.config = config;}
public void DeleteRouteRequestParam(string name){pathInfo.Remove(name);}
public override void Serialize(Stream stream){_out = stream;}
public virtual NGit.Record Lookup(int sid){return (NGit.Record)Get(sid, null);}
public virtual void Clear(){filter.Clear();}
public virtual void IncrementToken(IToken token){IncrementToken(token);}
public void Clear(){_range.Clear();}
public virtual string GetText(){return GetText(0, getLength());}
public virtual string GetAttribute(){return GetAttributeInternal(nodeName, true);}
public virtual FractionMaxDenominator BuildFractionMaxDenominator(FractionContext context){return new FractionMaxDenominator(context.WorkBook, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01f, 0.01
public IdentityProviderConfiguration Update(IdentityProviderConfiguration identityProviderConfiguration){return identityProviderConfiguration;}
public TypeTokenFilterFactory(params) : base(params){this.typeTokenFilter = new TypeTokenFilter(this);}
public override bool Equals(object context){if (context == null){return false;}return true;}
public virtual void SetReceiveCommandResult(int result){this._enclosing.SetReceiveCommandResult(result);}
public virtual void RemoveUserFromGroup(string groupName){foreach (string user in groupNames.Users){RemoveUser(user);}}
public virtual string get(char b){return getString(b, 0, b.Length);}
public void AddVpcConfiguration(VpcConfiguration vpcConfiguration){VpcConfigurations.Add(vpcConfiguration);}
public virtual ClusterSecurityGroup[] GetClusterSecurityGroups(){return ClusterSecurityGroup[] { };}
public string GetSXDIPacketAsString(){return "SXDI: " + _sxdiVersion + " version " + _sxdiVersion;}
public virtual DescribeReplicationGroupsResponse DescribeReplicationGroups(DescribeReplicationGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeReplicationGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeReplicationGroupsResponseUnmarshaller.Instance;return Invoke<DescribeReplicationGroupsResponse>(request, options);}
public void ReleaseAddress(){_pinnedAddresses.Release(new ReleaseAddress());}
public void connect(java.io.PipedOutputStream out1){this._writer.connect(out1);}
public virtual void SetKind(int token_kind){this.Kind = token_kind;this.Image = token_image;}
public static DiscreteNormalizationFilter Create(TokenStream input){return new DiscreteNormalizationFilter(m_luceneMatchVersion, input);}
public virtual AddJobFlowStepRequest PipelineRequest(string name, string value){return AddJobFlowStepRequest(name, value);}
public virtual ParseException generateParseException(string message, ParseException e){throw new System.NotImplementedException();}
public virtual void write(char c){throw new System.NotImplementedException();}
public DBInstance(){return null;}
public GetAlgorithmListRequest(): base(Method){if (_algorithmList == null){_algorithmList = new AlgorithmListRequest();}_algorithmList = algorithms;return this._algorithmListRequest = request;}
public virtual bool DereferenceTagsOnCreate(XmlNode tag){return false;}
public virtual LoaConnection GetLoaConnection(){return null;}
public virtual DetectJob DetectJob(DetectJob job){return job;}
public virtual GameSessionQueue CreateGameSessionQueue(string name){return new GameSessionQueue(name, true);}
public virtual IToken NextToken(int index, State state){return _lexer.GetNextToken(index, state);}
public virtual E set(E e){lock (this){object[] newElements = new object[elements.Length + 1];System.Array.Copy(elements, 0, newElements, 0, elements.Length);newElements[elements.Length] = e;elements = newElements;}}
public virtual void DeleteEndpoint(Endpoint endpoint){this.endpoint = endpoint;this.cluster = null;}
public virtual byte[] Encode(byte[] b, int len){return Encode(b, 0, len);}
public override void Serialize(StreamOutput stream){throw new System.NotImplementedException();}
public virtual void SetAdd(object o){lock (this._enclosing){if (o is java.util.MapClass.Entry<K, V>){set.Add(o);}}else{set.Add(o);}}
public virtual DescribeGatewayResponse DescribeGateway(DescribeGatewayRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeGatewayRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeGatewayResponseUnmarshaller.Instance;return Invoke<DescribeGatewayResponse>(request, options);}
public override int Size(){return _buf.Length;}
public virtual Analyzer set_analyzer(Analyzer analyzer){toUse = analyzer;}
public virtual string ToString(){return GetCanonicalName();}
public virtual ICollection<string> GetNames(string field_1_name){return GetNames(field_1_name, null, field_2_name.Length, field_3_name.Length, field_4_name.Equals(field_4_name.Equals(field_5_name.Equals(null? null : field_5_name.Equals(null? null : field_5_name.Equals(null? null? null? : field_4_name.Equals))? null : field_3_name.Equals(field_4_name.Equals(null, field_4_name.Equals(null, field_4_name.Equals(null, field_5_name.Equals(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null)), null, null, null, null, null, null, null, null, null, null, null, null, null, null, null,
public virtual void Prefix(int prefix){prefixes.Add(prefix);}
public virtual void SetUpChildAnchor(IChildAnchor other){this._childAnchor = other;}
public virtual void DeleteReceiptRule(ReceiptRule rule){_rule = rule;}
public override TreeFilter FilterAfter(TreeFilter @base){return new TreeFilterAfter(base, true);}
public virtual int[] GetElements(){return set.GetElements();}
public virtual void print(int v){if (v == 0){throw new System.ArgumentException("v is never printed");}print(v);}
public virtual bool Available(){return false;}
public bool IsSecure(string value){return value == secure;}
public virtual void SetNewObjectId(object id){this.objectId = id;}
public virtual NGit.Diff.Edit GetBefore(NGit.Diff.Edit edit){return edit.GetBefore(edit);}
public ModifyVPCEndpointServiceConfigurationResponse ModifyVPCEndpointServiceConfiguration(ModifyVPCEndpointServiceConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyVPCEndpointServiceConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyVPCEndpointServiceConfigurationResponseUnmarshaller.Instance;return Invoke<ModifyVPCEndpointServiceConfigurationResponse>(request, options);}
public CellReference GetCellReference(CellReference cr, CellRangeAddress cellref, bool isrow, bool? iscol): isrow? Iscol? IsRow? IsCol : IsRow? IsCol? IsCol : IsRow? IsCol? IsCol? IsX? IsX? IsY? IsZ? IsY? IsZ? IsY? IsZ : IsX? IsX? IsY? IsZ? IsY? IsZ? IsZ? IsZ? IsZ? IsZ? IsZ? IsY? IsZ : IsCellRelative? IsRowRelative? IsRowRelative? IsColRelative? IsRowRelative? IsRowRelative? IsColRelative? IsRowRelative? IsRowRelative? IsColRelative? IsX? IsX? IsX? IsX? IsY? IsZ : IsX? IsY? IsZ? IsX? IsY? IsZ : IsX? IsZ? IsZ? IsZ : IsX? IsZ? IsZ? IsZ : IsCellRelative? IsCellRelative? IsRowRelative? IsRowRelative? IsColRelative? IsColRelative? IsColRelative? IsColRelative? IsColRelative
public virtual byte[] Decode(byte[] bytes, int offset, int length){for (int i = offset; i < length; i++){byte b = Decode(bytes[i], 16);if (b!= null){int b1 = Decode(bytes, i + offset, length);int b2 = Decode(bytes, i + offset, length);int b3 = Decode(bytes, i + offset, length);for (int i = i + length; i < b3; i++){b3 = Decode(bytes, i + offset, length);}}return b3;}
public virtual void Deregister(){base.Deregister();}
public override bool Equals(object o){if (o is java.util.MapClass.Entry<K, V>){return this._enclosing.Equals(o);}return false;}
public virtual IList<Member> GetMembers(){return members;}
public override void close(){_out.close();}
public override string ToString(){return FlushInfo.String();}
public override Sections for encryption.section. Creates a Sections for encryption.
public virtual int NumRows(BlockTree block){return _tree.NumRows(block);}
public BooleanQuery CreateBooleanQuery(IList<string> queries, IList<string> fields){return CreateBooleanQuery(queries, fields, null);}
public virtual MissingObjectException(object o){return new MissingObjectException(o);}
public override BlockPointer GetCurrentBlock(){return current.m_block;}
public static BitsSlice Create(ReaderSlice src, int capacity){return new BitsSlice(src, capacity);}
public virtual float[] GetFloats(){return new float[0];}
public override java.io.BytesReader getReader(){return new java.io.BufferedReader(this);}
public virtual IList<Job> GetJobs(int status){return filtered.ListJobs(status);}
public override float Evaluate(int row, int column){return this._enclosing.EvaluateAreaAt(row, column);}
public virtual byte arrayHash(byte[] data){return hash(data, 0, data.Length);}
public void SeekTo(long to){try{to.SeekTo(to, SeekOrigin.START);}catch (ThreadInterruptedException){throw WriteTimedOut();}
public virtual void Deactivate(MFADeviceRequest request){deactivate(request.MFADeviceRequest);}
public virtual object Get(string name){return properties[name];}
public override string GetName(){return "BearerTokenSigner";}
public virtual bool Include(Ref commit){return false;}
public override String ToString(){StringBuilder sb = new StringBuilder(64);sb.Append(this.GetType().Name);sb.Append(", ").Append(this.Formula.Value);sb.Append("]");return sb.ToString();}
public HyphenationCompoundWordTokenFilter(){return new HyphenationCompoundWordTokenFilter(m_luceneMatchVersion, enablePositionIncrements, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion, _luceneMatchVersion,
public virtual ModelVersion Create(string version){return new ModelVersion(version, this);}
public virtual void DeleteCustomerGateway(Gateway customerGateway){CustomerGatewayUser object = customerGateway.DeleteCustomerGateway();}
public ICollection<E> GetReferences(){return resourceReferences;}
public virtual void DescribeAlarmHistory(){AlarmRecord[] alarms = data;}
public virtual IList<Snapshot> GetSnapshots(){return snapshotManager.ListSnapshots(){getClusterSnapshots() };}
public virtual void SetId(int id){throw new System.NotImplementedException();}
public override byte[] GetCache(){return base.GetCache();}
public SeriesListRecord DeepCopy(){return (SeriesListRecord)this.DeepCopy();}
public override string ToString(){return Get(Constants.PTR_CHAR);}
public virtual floatArray copy(float[] array){return copy(array, 0, array.Length);}
public NPOI.SS.UserModel.IDataFormat CreateDataFormat(){return dataFormat;}
public virtual void CreateOrUpdateAppEvents(EscherEvents app, string appName, string field_1_name, string field_2_options){CreateOrUpdateAppEvents(app, appName, field_2_options, field_3_options, field_4_options, field_5_options, field_6_options, field_7_options, field_7_options_group, field_7_options_group, field_7_options_group, field_8_options_group, field_7_options_group, string appName, string field_3_name, string field_4_name, string field_5_name, string field_6_options, field_7_options, field_7_options_group, field_7_options_group, field_7_options_group, field_7_options_group, field_7_options_group, field_7_options_group, field_7_options_group_name, field_7_options_group, field_7_options_group, field_4_name, field_5_name, field_6_name, field_7_name
public virtual string GetEndValue(A_Component component){return GetEndValue(component.endValue);}
public override ICollection<String> GetFunctions(){return supportedFunctions;}
public string fragment{get; set; }
public bool Contains(String column){return 0 < column && column < _width;}
public virtual string GetConversionString(){return null;}
public virtual void Stop(){Sharpen.Extensions.Stop(this._enclosing);}
public CellRangeAggregate[] GetCellRangesForAggregate(BRAIRecordAggregate aggregate){return aggregate.cellRanges.Values;}
public virtual void on_adapter_changed(adapter_status_t state){_status = state;}
public AbstractEscherHolderRecord ReadEscherHolderRecord(RecordInput in1){EscherHolderRecord r = (EscherHolderRecord)in1.ReadRecord();r.ParseHeader(EH_RECORD_HEADER);r.AddDetail(EH_RECORD_PLAIN);r.AddDetail(EH_RECORD_EH_ATTENTION);return r;}
public virtual void DeleteFlowDefinition(FlowDefinition flowDefinition){_flowDefinitions.Remove(flowDefinition);}
public virtual void put(int v){if (m_buf.Count == m_buf.Length){throw new System.IO.IOException("Buffer is full");}m_buf[m_buf.Count++] = v;}
public virtual int GetPreferredSize(){return preferredSize;}
public virtual string GetIndex().GetName() { return "Index[" + this.index.ToString() + "]";}
public virtual MethodResponse Get(string method){return null;}
public virtual void Reduce(IntFunction reduceFunction){Reduce(reducer, this);}
public virtual void clear(){lock (this._enclosing){int oldSize = this._enclosing._size;this._enclosing.clear();}}
public virtual EvaluationException NumberError(){return _error;}
public virtual void Reset(BFSGraph graph){Reset(graph);}
public override TermsEnumWithSlice Construct(ReaderSlice s){return base.Construct(s);}
public void PutInt32(int v){Debug.Assert(v >= 0 && v <= _limit);}
public static StemFilter CreateIndonesianStemFilter(TokenStream input){return new IndonesianStemFilter(m_luceneMatchVersion, input);}
public virtual char get(){return _buf[_size++];}
public java.net.URI newStreamingURL(){return new java.net.URI(this.streamingURL, "rt");}
public side - band output stream.
public virtual int GetCodePoint(){return _le.GetCodePoint();}
public virtual void StartOutboundVoiceContact(string voiceId){if (voiceId == null){throw new ArgumentNullException("voiceId cannot be null");}this.voiceId = voiceId.Intern();}
public override int GetNextOrdinal(){return this.GetOrdinal();}
public string VcfName(){return vcfName;}
public virtual E firstInList(E @object){lock (mutex){return c.firstInList(mutex);}}
public virtual void EnterEveryRule(IToken token){EnterEveryRule(token);}
public virtual string GetCharacterSet(){return set[0];}
public virtual string next(string key){return this.nextEntry().value;}
public virtual LoggingConfiguration GetLoggingConfiguration(){return voiceLogging;}
public virtual void DeleteTermination(string voiceConnectorId){_voiceConnectorId = voiceConnectorId;}
public virtual void Delete(){this._enclosing.Delete(null);}
public void SetValue(String newValue){object temp;if (this.lastValueWasThrown)throw new InvalidOperationException("Property value was never returned by the ReferenceManager instance (it was never returned by the ReferenceManager instance)");this.lastValueWasThrown = newValue;this.isValueSet = true;this.isValueSet2 = true;this.isValueSet3 = true;this.isValueSet4 = true;this.isValueSet5 = false;this.isValueSet4 = true;}
public TokenManager(ICharStream input){this.input = input;this.state = LuceneLexerState.INITIAL;this.index = 0;this.offset = 0;this.type = 0;this.val = 0;this.pos = 0;this.type1 = 0;this.type2 = 0;this.type3 = 0;this.type4 = 0;this.type5 = 0;this.type5 = 0;}
public virtual DelayedOutput CreateDelayedOutput(OutputEntry<T> entry){return null;}
public virtual void write(java.io.OutputStream outputStream){throw new System.NotImplementedException();}
public virtual void ConnectionEstablished(EscherConnection c){connectionEstablished(c);}
public virtual DeviceInformation DeviceInformation { get; private set; }
public virtual void AuthorizeIPRules(string app, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken)){AuthorizeIPRules(app, customHeaders, cancellationToken).ConfigureAwait(false);}
public override TreeFilter Clone(){return this;}
public virtual string ToString(){return GetType().FullName;}
public byte Set(int index, byte value);{for (int x = 0; x < _colorTable.Length; x++){_colorTable[x] = value;}}
public void InitializeInternalData(PARARecordRecord[] data){InitializeInternalData(data);}
public virtual void SetDeltaCacheLimit(int limit){deltaCacheLimit = limit;}
public virtual E remove(E @object){return list.remove(@object);}
public virtual int count(){lock (this._enclosing){return _enclosing._size;}}
public virtual void Restore(){_attributeSource.Restore();}
public virtual SingularMessage Error(string text){return GetSyntaxError(text, 0, text.Length);}
public virtual DescribeLoadBalancerOptions DescribeLoadBalancerOptions(){return new DescribeLoadBalancerOptions{LoadBalancerNames = LoadBalancerNames.Of(LoadBalancerNames);}
public virtual void SetCRC(byte c){crc = c;}
public virtual void SetError(string e){SetError(e);}
public DirectoryConfiguration(FileConfig fileConfig){this.fileConfig = fileConfig;}
public virtual void ModifiesScheduledAction(ScheduledAction action){this.scheduledAction = action;}
public virtual IList<Resource> Get(string id){return Sharpen.Collections.UnmodifiableList(get(id, null), null);}
public override void SetValue(int newValue){object.CopyValue(backingArray, offset + _position, newValue);}
public NumberFormatIndexRecord(RecordInput in1){return new NumberFormatIndexRecord(this, in1);}
public virtual void SetLocalPatternChars(String patternChars){m_localPatternChars = patternChars;}
public virtual bool Equals(object o){if (o is Antlr4.Runtime.Misc.Interval){return true;}Antlr4.Runtime.Misc.Interval other = (Antlr4.Runtime.Misc.Interval)o;if (this.n!= other.n){return false;}return true;}
public virtual Reboot Workspaces(){RebootOneOrMoreWorkspaces();}
public override string ToString(){return "0x" + this.GetType().Name + " " + this.GetValueOf("F");}
public virtual bool isEmpty(){return list.isEmpty();}
public bool Get(string name){return Get(name, out bool value) || false;}
public HyperParameterTuningJob Create(HyperParameterTuningJob job){this.job = job;}
public virtual bool IsDirected(IPath node){return this.IsPathPrefix(node.Name);}
public virtual void setValue(E value){throw new System.NotImplementedException();}
public virtual CacheParameterGroupName[] GetParameterGroups(){return parameterGroupName;}
public virtual string find_next_match(string text){return find_next_match(text, 0, text.Length);}
public virtual string GetSnapshotAsString(){return "PackWriter.State[" + this.phase + ", memory=" + this.bytesUsed + "]";}
public virtual StartClassificationJobResponse StartClassificationJob(StartClassificationJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = StartClassificationJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StartClassificationJobResponseUnmarshaller.Instance;return Invoke<StartClassificationJobResponse>(request, options);}
public String ToString(){return HSSFErrorConstants.GetText(hssF_1);}
public virtual DescribeDBSnapshotsResponse DescribeDBSnapshots(DescribeDBSnapshotsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDBSnapshotsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDBSnapshotsResponseUnmarshaller.Instance;return Invoke<DescribeDBSnapshotsResponse>(request, options);}
public virtual void DetachInstances(IList<Instance> instances){foreach (Instance instance in instances){DetachInstance(instance);}}
public virtual char first(){return java.text.CharacterIteratorClass.Wrap(this).first();}
public override void Read(Record record){try{GetRecordInfo(record);}catch (IOException e){throw new RuntimeException(e);}}
public virtual void grow(int count){for (int i = 0; i < count; i++){grow(count);}}
public virtual void CommitCherryPick(){CherryPickCommand c = (CherryPickCommand)Open();c.AddCommand(new CommitCherryPick());}
public virtual IList<IToken> GetTokens(){return tokens;}
public String ToString(){return _cell.ToString();}
public virtual FormatError.Severity GetSeverity(){return severity;}
public virtual void UnrollRecursionContexts(){RecursionContext.UnrollRecursionContexts(this);}
public virtual InvalidationContext CreateInvalidationContext(InvalidationContext context){return (InvalidationContext)CreateInternalContext(context, null);}
public virtual void Validate(NGit.Configuration existingConfiguration){EnsureMatchVersion(existingConfiguration.Version, new ConfigurationError());}
public virtual void SetFieldName(string name){this.m_name = name;}
public virtual NGit.Storage.TreeObject Clone(){return this;}
public java.util.NavigableSet<E> elementsInTreeMap(java.util.TreeMap.Entry<K, V> entry){return this._enclosing.elementsInTreeMap(entry.getKey(), entry.getValue());}
public virtual FleetInstancesResponse FleetInstances(string role){return FleetInstances(role, null, null, null);}
public static IPAddresses staticIpAddresses { get; private set; }
public DatasetGroup(Dataset name, List<Attribute> attributes){_name = name;}
public MailboxPermissions { get; internal set; }
public IP marquee(Account account){return dedicatedIpMarquee(account.AccountNumber, account.UserName, account.EmailAddress, account.EmailAddress, account.EmailAddressData, account.EmailAddressData, account.EmailAddressData, account.EmailAddressData, account.EmailAddressData, account.EmailAddressData, account.EmailAddressData, account.EmailAddressData, account.EmailAddressData, account.EmailAddressData, account.EmailAddressData, account.EmailAddressData, account.EmailAddressData, account.EmailAddressData, account.EmailAddressData, account.EmailAddressData, account.EmailAddressData, newAccountRecord, account.EmailAddressRecord, account.EmailAddressRecord, account.EmailAddressRecordName, account.EmailAddressRecordName, account.EmailAddressRecordName, account.EmailAddressRecordName, account.EmailAddressRecordName, account.EmailAddressRecordName, account.EmailAddressRecordName, account.EmailAddressRecordName, account.EmailAddressRecordName, account.EmailAddressRecordName, account.EmailAddressRecordName, account.EmailAddressRecordName, account.EmailAddressRecordName, newEmailAddressRecord, account.EmailAddressRecordName,
public int height(int row, int column){return row * column;}
public virtual CreateSnapshotsResponse CreateSnapshots(CreateSnapshotsRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateSnapshotsRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateSnapshotsResponseUnmarshaller.Instance;return Invoke<CreateSnapshotsResponse>(request, options);}
public override bool isReadOnly(){return false;}
public void ResetLexicalState(LexerState other){lexical = other;}
public String ToString(){return HSSFErrorConstants.GetText(hssF_1);}
public virtual EndpointDetail GetEndpointDetail(){return EndpointDetail.Default;}
public override string ToString(){return ESCHER_RECORD.ToString(CultureInfo.InvariantCulture);}
public string SetProductAndDomainName(string product){Product = product;Domain = domain;}
public virtual IList<Face> GetFaces(IRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetRequestMarshaller.Instance;options.ResponseUnmarshaller = GetResponseUnmarshaller.Instance;return Invoke<Face>(request, options);}
public void UpdateShiftersAfterRowShift(int row, int shift_1){UpdateFormulaShiftersAfterRowShift(row, shift_1);}
public override string GetValue(){return base.GetValue();}
public virtual void print(char b){print(b == null? "null" : b.ToString());}
public override java.nio.DoubleBuffer get(){return _backingArray.get(0);}
public virtual void Unsubscribe(object o){if (o is PubSubEvent){UnsubscribesFrom(o);}else{UnsubscribesFrom(o.GetEventContainer());}}
public IPSet(){return new IPSet(this);}
public int FacetIndex { get; set; }
public automaton equivalentTo(Automaton other){return other;}
public override string ToString(){return "Delete(this=" + this.clazz.Name + ")";}
public override object Decode(byte b){return this.Decode(b, 0, b.Length);}
public ImageService.DeleteImageRequest parameters { get; internal set; }
public virtual InstanceGroups GetInstanceGroups(){return instanceGroups;}
public virtual IList<WorkflowType> GetWorkflowTypes(){return list.WorkflowType;}
public string GetText(IVocabulary vocabulary){return vocabulary.ToString(null, NumberStyles.Integer, vocabulary);}
public LineStyle(Color color){this.color = color;}
public void Delete(int threatIntelSetID){Delete(threatIntelSetID, true);}
public virtual void Execute(ITokenStream lexer){State machine = null;try{Open(lexer.Text, lexer.StartOffset, lexer.EndOffset, lexer.Options, action);}catch (IOException e){throw new Exception(e.ToString(), e);}}
public Index (int id){this.id = id;this.type = TYPE_INDEX;}
public string GetFullYear(){return GetFullYear();}
public virtual void print(char ch){print(ch);}
public AreaErrPtg(){return _areaErrPtg;}
public virtual IList<Attachment> GetAttachments(TransitGateway gateway){return _attachments;}
public override void put(float value){buffer.put(value);}
public override int GetResultType(){return this._enclosing.GetResultType();}
public virtual string SetArgument(string value){this.value = value;}
public static Picture CreatePicture(Anchor anchor){return new Picture(anchor);}
public virtual AlarmAlarm CreateAlarm(AlarmAlarm other){return other.CreateAlarm(null, other);}
public virtual void SetExpireDate(DateTime expireDate){_expireDate = expireDate;}
public virtual string ToString(DVAL arg){return GetEvalString(arg);}
public virtual string ToString(){return GetCanonicalName();}
public CellRangeAddress GetCellRangeAddress(int index){return _cells[index];}
public string GetName(){return GetComponentName();}
public virtual int get(char[] text){return indexOf(text, 0, text.Length);}
public virtual int keyInTree(K key){return indexOf(key, keyInTree, 0);}
public virtual NPOI.SS.UserModel.Shape CreateShape(NGit.Shape shape){return shape;}
public virtual int GetDeltaSearchMemoryLimit(){return deltaSearchMemoryLimit;}
public virtual Search.Query MakeSearchQuery(string field){return "search(\"" + field + "\")";}
public int SplitExtensionField(string field, int index){return SplitIndex(field, index);}
public FPGA image value (FPGA image) {return null;}
public virtual IList<GlobalCluster> GetGlobalClusters(){return globalClusters;}
public TreeIterator(ITreeIterator treeIter){m_root = treeIter;}
public virtual bool check(){return false;}
public virtual void Add(IToken token){List<IToken> list = tokens.Clone();list.Insert(0, list.tail, token);}
public string Get(int id){return Sharpen.Extensions.Get(this._enclosing, id);}
public virtual void setCoords(IPoint point){object[] newCoords = new object[point.count];for (int i = 0; i < newCoords.Length; i++){newCoords[i] = point.coordinates[i];}}
public virtual void SetN-GramDistance(double value){this._nGramDistance = value;}
public override TreeFilter Clone(){return this;}
public String ToString(){return HSSFErrorConstants.GetText(hssF_1);}
public override string ToString(){return "this(" + this.operator + ")";}
public override ClusterOptions Options(){return base.Options();}
public virtual void AcceptReservedNodeExchange(IToken token){AcceptToken(token.Copy(), token.CopyTo(), "reservedNodeExchange"){return;}
public virtual NewSessionTokenResponse NewSessionToken(ID id, Revision revision){return SessionTokenResponse.CreateSessionToken(id, revision);}
public DateTime field_1_date_resolution = DATE_RESOLUTION_MONTH;_date_resolution = DATE_RESOLUTION_MONTH;}
public void DeleteScalingPolicy(ScalingPolicy policy){_scalingPolicies.Remove(policy);}
public Book(){return book;}
public override void MarkAsReadAhead(){delegate1.MarkAsReadAhead();}
public virtual void Stop(){HIDE();}
public virtual void ExplainIDF(IDFRecord record){if (record.Sid!= null){ExplainIDF(record.Sid, record);}}
public virtual DeleteQueueResponse DeleteQueue(DeleteQueueRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteQueueRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteQueueResponseUnmarshaller.Instance;return Invoke<DeleteQueueResponse>(request, options);}
public java.util.MapClass.Entry<K, V> entries(K, V value) = { value };
public override void Read(Stream stream){_is = stream;}
public virtual void close(){lock (this.mBlock) {this.mParseState = null;this.mBlock.decRefCount();}}
public void SetCookieStickinessPolicyName(string cookieName){_cookieName = cookieName;}
public int size(){return this._enclosing._size;}
public virtual void append(char c){append0(c);}
public virtual void Fill(ICharSequence text){this.m_text.Append(text);}
public OpenNLPPOSFilter Create(TokenStream tokenStream){return Create(tokenStream, 0, tokenStream.Length);}
public virtual void ReportSendStatistics(int maxNum, int maxSubs){SendStatistics stats = new SendStatistics(maxNum, maxSubs);}
public void Clear(){_list.Clear();}
public virtual Dataset GetDataset(){return null;}
public virtual IList<SecurityGroup> GetStaleSecurityGroups(){return securityGroupRepository.ListStaleSecurityGroups(currentUser);}
public string GetFilePath(){return GetFilePath(null);}
public bool IsFrozen(PaneView paneView){return paneView.IsFrozen();}
public virtual IList<string> GetActiveNames(){return Sharpen.Collections.UnmodifiableList(names.ActiveNames);}
public virtual string GetBranchName(){return branch.GetName();}
public virtual void ReadInterfaceHeader(RecordReader in1){_in1.Read(m_interfaceHeaderRecord);}
public override long Length(){return data.Length;}
public System.Exception SetPrecision(int precision){this.precision = precision;}
public virtual CloudFrontOriginAccessIdentity GetOriginAccessIdentity(){return CloudFrontOriginAccessIdentity;}
public virtual NGit.Storage.File.Record GetRecord(){return this._enclosing.GetRecord(this.name);}
public RemovePermissionRequest { get; internal set; }
public virtual IList<Output> GetOutputs(Output output){return GetOutputs(output);}
public void Reset(PARARecordRecord[] h5){if (_prefs!= null){_prefs.Reset(null);_prefs = null;}this._enclosing.Reset();}
public override bool Equals(object o){if (o == this){return true;}return false;}
public virtual BatchCreateRoomMembershipsResponse BatchCreateRoomMemberships(BatchCreateRoomMembershipsRequest request){var options = new BatchCreateRoomMembershipsRequest();options.RequestMarshaller = BatchCreateRoomMembershipsRequestMarshaller.Instance;options.ResponseUnmarshaller = BatchCreateRoomMembershipsResponseUnmarshaller.Instance;return BatchCreateRoomMemberships(request, options);}
public virtual int StemChars(string str){return StemChars(str);}
public override int Subtract(BytesRef bytes){return Subtract(bytes, 0, bytes.Length);}
public virtual bool isEmpty(){return elements.Count == 0;}
public virtual ApplicationInformation GetApplicationInformation(){return applicationInformation;}
public override RevTree Create(RevTree CreateTree){if (CreateDefaultTree){return defaultTree;}return baseTree;}
public DocumentState(DocumentFields fields){return this.Create(fields, null);}
public override java.nio.ByteBuffer copy(){return copy(this.m_buf, this._enc.position(), java.nio.ByteBuffer.DEFAULT_MIN_CAPACITY);}
public virtual StemmerOverrideMap Evaluate(StemmerOverrideMap other){return other.Evaluate(this);}
public java.net.ProxyFactory getProxyFor(string proxyType){return _proxies[proxyType];}
public override void SetMergeSizeMB(int maxMergeSizeMB){base.SetMergeSizeMB(maxMergeSizeMB);}
public override java.nio.CharBuffer copy(){return copy(this);}
public virtual void Initialize(byte b){Initialize((byte)b, 0, b.Length);}
public void Write(byte b){Write((int)b, 0, b.Length); }
public virtual void EnableIOOnVolume(Volume volume){this.m_volume = volume;this.m_enableOnVolumeFlag = true;this.m_volume.Enable(volume);}
public virtual string array(){return new string[elements.Length + 1];}
public virtual Group GetGroup(){return info;}
public virtual bool contains(object o){return map.containsKey(o);}
public Sheet GetExternalSheet(int index){return _externalSheets[index];}
public PhoneticFilter Create(TokenStream stream){return Create(stream, 0, stream.Length);}
public override double Evaluate(int row, int column){return _year;}
public Dataset(IData source){this.source = source;this.m_dataset = new Dataset(this);}
public virtual Builder<SpanContext> builder(SpanContext context){return builder(context);}
public bool EndsWith(Run other){return Runs.Count == other.Count;}
public override double ReadDouble(){return delegate1.ReadDouble();}
public void SetCollector(BrainBrainCollector collector){this.collector = collector;}
public override String ToString(){return "Double(ticks)";}
public virtual bool Equals(Entry e){if (e.Key!= e.Key){return false;}return true;}
public void Reset(string defaultVal){value = defaultVal;}
public char[] capacity = (char[])array.Capacity;
public String Name(){return name;}
public int index(){return this.array[this.array.index()];}
public virtual void SetEnablement(bool enablement){base.SetEnablement(enablement);}
public virtual int type(char ch){return type(ch);}
public virtual void ReportError(){ParseUtils.ReportError(this, ErrorType.Error);}
public override bool Equals(object o){if (o is StemmerPrefix){return base.Equals(o);}return false;}
public void Save(ImageOutputStream out1){out1.Write(GetImageString(in1));}
public virtual void SetProcessorAt(int index, NGit.Processor processor){this.processor = processor;}
public virtual void removeURI(string uri){list.removeURI(uri);}
public override void fillShortArray(short[] values, int value, short[] start, int length){{for (int i = start; i < length; i++){value[i] = values[i];}}}}
public virtual string ToString(){return GetType().FullName;}
public virtual int GetCommandCode(Way way){return _way.GetCommandCode();}
public virtual StartGuardDutyAssessmentRunStartNotFoundException{throw new InvalidOperationException("You must specify an Amazon GuardDuty Instance number, not an ILLEGAL Instance number, or a valid ID.");}
public bool IsSameAs(Formula other){return _formula == other._formula;}
public override void Fill(byte[] b, int value, int arrayOffset, int arrayOffset, int arrayOffset, int valueOffset){Fill(b, value, arrayOffset, valueOffset);}
public bool Equals(HSSFChildAnchor other){return _childAnchor == other._childAnchor;}
public override bool Equals(object o){if (o == this){return true;}return false;}
public virtual void DeleteSkillGroup(SkillsGroup skillGroup){Delete(skillGroup.GroupId);}
public virtual LifecyclePolicy GetLifecyclePolicyResponse GetLifecyclePolicy(LifecyclePolicyResponse response){return response.GetLifecyclePolicyResponse(client);}
public SetJobFlowIdRequest(): base("{jobFlowId}", StringUtils.FromString(jobFlowId), StringUtils.FromString(jobFlowId), StringUtils.FromString(jobFlowId), StringUtils.FromString(jobFlowId), StringUtils.FromString(jobFlowId), StringUtils.FromString(jobFlowId), StringUtils.FromString(jobFlowId), StringUtils.FromString(jobFlowId), StringUtils.FromString(jobFlowId), StringUtils.FromString(jobFlowId), StringUtils.FromString(jobFlowId), StringUtils.FromString(jobFlowId), StringUtils.FromString(jobFlowId), StringUtils.FromString(jobFlowId), StringUtils.FromString(jobFlowId), StringUtils.FromString(jobFlowId), StringUtils.FromString(jobFlowId), StringUtils.FromString(jobFlowId), StringUtils.FromString(jobFlowId), StringUtils.FromString(jobFlowId), StringUtils.FromString(jobFlowId), StringUtils.FromString(jobFlowId), StringUtils.FromString(jobFlowId), StringUtils.FromString(jobFlowId), StringUtils.FromString(jobFlowId), StringUtils.FromString(jobFlowId), StringUtils.FromString(jobFlowId), Constants.FromString(jobFlowId
public IList<string> GetFooterLines(string key){return GetChildren(null, key, true);}
public virtual void resize(int capacity){buffer.resize(capacity);}
public override JBoss.EvaluationContext GetParentContext(int index){return _parent;}
public virtual GroupMembership Create(string name, string value){return (GroupMembership)CreateInternal(name, value, null, null, null);}
public virtual RegisterTagResponse RegisterTag(RegisterTagRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterTagRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterTagResponseUnmarshaller.Instance;return Invoke<RegisterTagResponse>(request, options);}
public virtual float Evaluate(double value){return eval(new SingleValue(value));}
public virtual ProfileTimes GetProfileTimes(){return profileTimes;}
public virtual java.nio.FloatBuffer compare(java.nio.FloatBuffer buf){return compare(buf.get()));}
public virtual ILeafNode GetLeaf(){return this.GetLeaf(this.GetPath());}
public virtual string Get(int id){return id.ToString(CultureInfo.InvariantCulture);}
public override byte array(){return delegate1.getByteArray();}
public override void Serialize(SeriesNumber other){Serialize(other.SeriesNumber, other);}
public virtual void SetDryRun(bool usemmap){dryRun = usemmap;}
public ListInvalidationsRequest(string distributionId){return new ListInvalidationsRequest(distributionId);}
public RevisionSyntaxException(string message, string revision){this.m_message = message;this.m_revision = revision;this.m_string = revision;}
public string Sign(string str, string key, string secret){return Sign(str, key, secret, "PRIVATE");}
public placement group name { get; set; }
public ExtensionQuery ExtensionsQuery(string field, string rawQuery){return ExtensionQuery(field, rawQuery);}
public virtual IList<Tag> GetTags(){return new List<Tag> { GetTag(meetingAccount).GetTags() };}
public UpdateFaceRequest(FaceRequest faceRequest){return new UpdateFaceRequest(faceRequest);}
public new Request(Parameters parameters){return new Request(parameters);}
public virtual DescribeDataEndpointResponse DescribeDataEndpoint(DescribeDataEndpointRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDataEndpointRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDataEndpointResponseUnmarshaller.Instance;return Invoke<DescribeDataEndpointResponse>(request, options);}
public virtual void write(char b){write(b, 0, b.Length);}
public virtual IRegionStart GetStart(){return regionStart;}
public int field_1_format_tag(int field_2_format_tag_p1){return field_2_format_tag_p1;}
public virtual bool contains(object o){return map.containsKey(o);}
public virtual string GetLogURL(string sessionId){return sessionLog.GetURL(sessionId);}
public void ReplaceInstanceProfile(InstanceProfile existingProfile){CurrentInstanceProfile = existingProfile;}
public virtual List<DetectJob> GetDetectionJobs(Entity entity){return detectionJobs;}
public virtual void print(char ch){print(ch);}
public virtual void Start(BundleContext bundleContext){Start(bundleContext.boss, 0, 0);}
public virtual void putLong(long b){if (m_len >= m_buf.size){throw new java.nio.BufferOverflowException();}p.putLong(b);}
public virtual void DisassociatePhoneNumber(int phoneNumber){this.DisassociatePhoneNumber(phoneNumber);}
public void FlushAuthorizerCache(StageRecord stage){FlushAuthorizerCache(stage.RecordId, stage.RecordId);}
public virtual void DescribeReservedInstanceModifications(){DescribeReservedInstanceModifications(_reservedInstanceModifications);}
public virtual UpdateDomainResponse UpdateDomain(UpdateDomainResponse result){return UpdateDomainResponse(result);}
public virtual E next(){return list.next();}
public virtual DescribeHsmConfigurationsResponse DescribeHsmConfigurations(DescribeHsmConfigurationsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeHsmConfigurationsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeHsmConfigurationResponseUnmarshaller.Instance;return Invoke<DescribeHsmConfigurationsResponse>(request, options);}
public override void WriteDouble(double v){if (v == null){throw new ArgumentNullException("v");}else if (v > 0){throw new System.ArgumentException("v");}else if (v > 0){throw new System.ArgumentException("v");}else if (v > 0){throw new System.ArgumentException("v");}else if (v > 0){throw new System.ArgumentException("v");}endif", v);}
public override FilterFactory CreateFilterFactory(FilterConfig config){return new ClassicFilterFactory(config);}
public BSE RecordForPicture(int pictureIndex){return null;}
public virtual void Stop(){this.phase = Stage.Stopping;this.job = null;}
public IntervalSet(int intervals){_intervals = intervals;}
public name_record_v1(){name_records.Remove(0);}
public void ReplaceOccupiedParameters(string url, string[] paths){_p = GetParams(url);_p.ReplaceOccupiedParameters(paths);}
public void RemoveWordCountProperty(){wordCount = 0;}
public virtual IList<AuthorizationProvider> GetAuthorizationProviders(string appName){return authorizationProviders;}
public Rule Rule(List<FormattingRule> rules){return AddRule(rules);}
public virtual string GetHost(){return host;}
public override bool Equals(object o){return base.Equals(o);}
public void Add(Stream file){_writer.Add(file);}
public string ToString(){return Query(null, null);}
public override string ToString(){return "Unknown";}
public virtual string ToString(){return GetCanonicalName();}
public virtual void Register(WorkflowType type){_workflowType = type;}
public StartJumpserverRequest: base(){return start;}
public BundleInstanceRequest(string instanceId, BundleInstanceRequest storage){return BundleInstanceRequest(instanceId, storage);}
public override Type GetNextClass(){return this.next.GetType();}
public void Fill(OVAL shape){Fill(shape);}
public void SetInfoStream(StreamInfo stream){_infoStream = stream;}
public virtual void Reinit(){this.lastDocID = -1;this.wordNum = -1;this.word = 0;this.isRtl = false;this.isSynchronized = false;}
public bool get(string key){return _string[key];}
public virtual ConferencePreference GetConferencePreference(){return conferences;}
public ConfirmSubscriptionRequest(string topicArn, string token){var request = new ConfirmSubscriptionRequest();request.TopicArn = topicArn;request.Token = token;return request;}
public virtual void append(char c){append0(c);}
public ValueEval GetValueEval(Cell cell){return _valueEval;}
public BootstrapActionConfiguration SetBootstrapActionConfiguration(BootstrapActionConfiguration config){this.m_bootstrapActionConfiguration = config;}
public virtual void Parse(IToken token){_token = token;}
public virtual void DecreaseReplicationFactor(short replicationFactor){_replicationFactor = ~replicationFactor;}
public static bool equals(object o, IByteSequenceOutputs outputs){return startswith(o.array, o.offset, o.length);}
public virtual int GetRuleIndex(int ruleIndex){return _ruleIndex;}
public directory cache = null;
public virtual int read(byte b, out blen) throws IOException{return read(b, out blen)!= 0;}
public DescribeConfigurationSettingsRequest(string applicationName){_applicationName = applicationName;}
public virtual Stemmer GetStem(string str){return StemmerUtil.Stem(str, m_luceneMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_luceneMatchVersion, m_matchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_bogusMatchVersion, m_matchGroups, m_matchGroups, m_matchGroups, m_matchGroupsToMatchGroups, m
public override void Write(int b){if (m_len >= m_buf.Length){Resize(m_len + 1);}UnsafeWrite(b);}
public virtual int mod(int n){return mod(n, d);}
public virtual int GetLineCount(){return _buf.GetLineCount();}
public virtual void Clear(){_limit.Clear();}
public override double Evaluate(int row, int column){return base.Evaluate(row, column);}
public virtual Transition GetTransition(State state, char character){return null;}
public virtual DeviceCollection GetDevice(){return new DeviceCollection(this);}
public string getPath(){return path;}
public void Fill(int value){_le.Fill(value);_size += value;}
public override BytesRef Copy(){return new NGit.Util.BytesRef_DeepCopy(this);}
public virtual int end(){return _end;}
public static java.util.HashMap<K, V>.HashMapOf(T, T){return new java.util.HashMap<K, V>.HashMapOf(T, T);}
public traffic mirror filter: returns { null }
public virtual void AddRule(IRule rule){Aggregate.AddRule(rule);}
public virtual GetJobOutputResponse GetJobOutput(GetJobOutputRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetJobOutputRequestMarshaller.Instance;options.ResponseUnmarshaller = GetJobOutputResponseUnmarshaller.Instance;return Invoke<GetJobOutputResponse>(request, options);}
public virtual bool IsGitRepository(FilePath dir){return GitUtils.IsRepository(dir.GetPath());}
public virtual string ToString(){return GetCanonicalName();}
public virtual void DeleteUsagePlan(UsagePlan plan){DeleteUsagePlan(plan.UsagePlanId);}
public virtual void Start(){this.m_start = true;this.m_monitor.Start();}
public virtual void Register(StreamConsumer consumer){_consumers = consumer.Consumers;}
public override bool IsWalkInThisTree(){return false;}
public void UpdateGuardDutyFindingsFeedback(){UpdateGuardDutyFindingsDetection(new Amazon GuardDutyFindingsFeedback());}
public virtual NGit.Api.RmCommand Create(Repository repository){return new NGit.Api.RmCommand(repository);}
public override long TotalBytesUsed(){return base.TotalBytesUsed();}
public virtual bool isReuseAsIs(){return reuseAsIs;}
public SpatialArgs Parse(string str){return SpatialArgs.Parse(str, NumberStyles.Integer, null);}
public CFRuleRecord Read(RecordInputStream in1){return ReadRecord(in1, CFRuleRecord.class);}
public bool EndOfFile(TextReader reader){return File.EndOfStreamed(reader);}
public NewItalianLightStemFilter(){return new ItalianLightStemFilter(this);}
public virtual StrategyRegistry GetStrategies(){return strategies;}
public void SetEmpty(ICharSequence text){m_text = text;}
public virtual BatchSendMessagesResponse BatchSendMessages(BatchSendMessagesRequest request){var options = new InvokeOptions();options.RequestMarshaller = BatchSendMessagesRequestMarshaller.Instance;options.ResponseUnmarshaller = BatchSendMessagesResponseUnmarshaller.Instance;return Invoke<BatchSendMessagesResponse>(request, options);}
public virtual void SetTags(string newTags){resource.SetTags(newTags);}
public keyUsage(List<KeyPair> keyUsage): base(keyUsage, 0, 0);{_serverCertificateName = keyUsage;_serverCertificateBody = keyUsage;_serverPrivateKey = keyUsage;}
public OR(ORContext other){return this;}
public virtual void grow(int count){for (int i = 0; i < count; i++){grow(count);}}
public DhcpOptionsRequest(List<DhcpConfiguration> dhcpConfigurations){return CreateDhcpOptionsRequest(dhcpConfigurations);}
public SDKInformation GetSDKInformation(){return SDKInformation;}
public virtual string ToString(){return GetCanonicalName();}
public override bool ReadBoolean(){return delegate1.ReadBoolean();}
public virtual void Start(){startPos = 0;endPos = 0;}
public void SetBufferPointer(int ptr){bufferOffset = ptr;}
public virtual bool contains(object o){return this._enclosing.containsValue(o);}
public SendMessageBatchRequestEntry(SendMessageBatchRequestEntry request){var options = new InvokeOptions();options.RequestMarshaller = SendMessageBatchRequestEntryMarshaller.Instance;options.ResponseUnmarshaller = SendMessageBatchRequestEntryUnmarshaller.Instance;return Invoke<SendMessageBatchRequestEntry>(request, options);}
public virtual void RegisterDevice(Device device){this.device = device;this.room = room;}
public override void SetWriteBufferSize(int capacity){m_buf.Capacity = capacity;}
public scanning.Configuration Update(image){this.scanningConfig = new ScanConfig(image);}
public java.nio.ByteBuffer slice(java.nio.ByteBuffer offset,_limit) {return byteBuffer.slice(offset, _limit);}
public virtual CreateUserInfoRequest CreateUserInfoRequest(string username){return CreateUserInfoRequest(username, 'password');}
public virtual void push(char b){push(b);}}
public static java.text.BreakIterator newInstance(java.text.LocaleDataOutput locale){return new java.text.BreakIterator(locale);}
public virtual string Get(object o){return Sharpen.StringHelper.GetValueOf(o, "text"));}
public java.nio.ByteBuffer slice(java.nio.ByteBuffer offset,_limit) {return byteBuffer.slice(offset, _limit);}
public DiffFilter CreateIndexDiffFilter(IndexDiffFilter other){return other;}
public ArrayPtg Finish reading an ArrayPtg object from the given input.
public virtual string ToString(){return ToString(null);}
public override void OnLoad(){base.OnLoad();}
public int GetExponent(){return _exponent;}
public virtual NGit.Storage.File.Record GetRecord(){return this._enclosing.GetRecord(this.name);}
public virtual void SetTokenSource(ITokenSource source){this._tokenSource = source;}
public virtual void DeleteClusterSnapshot(){ClusterSnapshot c = new ClusterSnapshot();c.Delete() ;}
public void Unregister(NGit.Transport.Transport protocol){Transport registration = null;}
public virtual UpdateMonitoringScheduleResponse UpdateMonitoringSchedule(UpdateMonitoringScheduleResponse customizable_1){return UpdateMonitoringSchedule(customizable_1, null);}
public virtual void DeleteFieldLevelEncryptionConfiguration(){this._enclosing.DeleteFieldLevelEncryptionConfiguration();}
public virtual ListTagsResponse ListTags(ListTagsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListTagsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListTagsResponseUnmarshaller.Instance;return Invoke<ListTagsResponse>(request, options);}
public string pattern(){return "pattern(" + pattern + ")";}
public virtual bool IsValid(){return start <= end;}
public override void put(string str, int offset, int len){UTF16LE.get(str, offset, len);}
public virtual bool SupportsBitsPerValue(int bitsPerValue){return true;}
public OpenNLPLemmatizerFilter(TokenStream stream){return new OpenNLPLemmatizerFilter(stream);}
public int GetBigBlockSize(){return _bigBlockSize;}
public ConsoleWriter(Properties properties){this.m_defaults = properties;}
public override void SetPublicAccess(bool access){_blockUnlessNeeded.Set(access);}
public StempelFilter(TokenStream input){return new StempelFilter(input);}
public virtual ListIdentityPoolUsageResponse ListIdentityPoolUsage(ListIdentityPoolUsageRequest request){return ListIdentityPoolUsageResponse(request, null);}
public override string Get(string @name){return @name;}
public virtual NGit.Storage.File.Record GetRecord(){return this._enclosing.GetRecord(this.name);}
public override double Evaluate(double value){return base.Evaluate(value);}
public virtual void writeChars(int b){writeChars(b * m_le.m_size);}
public virtual void write(char c){throw new System.NotImplementedException();}
public virtual DFA.DecisionState GetDecisionState(Decision decision){return departmentStates.Get(decision);}
public virtual void DeleteSecurityGroup(int id){resource.Delete(id, true);}
public virtual void Commit(ICollection<E> other){Commit(other);}
public virtual void Update(string cs){update(cs);}
public virtual void Delete(byte[] key){if (key[0] == 0x"){key = k[1];}else{key.Delete(0, key.Length - 0);}}
public SystemFileSystem(){this.fs = new java.io.FileSystem(this);}
public virtual List<ClassificationJob> GetClassificationJobs(int docID){return _classificationJobs.Get(docID);}
public DictionaryInput(Stream input){return dictionary(new StringReader(input), 0, input.Length);}
public virtual bool Equals(object o){if (!(o is java.util.MapClass.Entry<K, V>)){return false;}return true;}
public override void SetNextTermsEnum(int value){this.value = value;}
public virtual void SetSortFields(IList<string> sortFields){_sortFields = sortFields;}
public virtual void Delete(){this._enclosing.DeleteStack(this.stackIndex);}
public virtual string GetStatistics(){return active.GetStatisticsAsString();}
public override void DeleteWorkerBlock(){delegate1.DeleteWorkerBlock();}
public override void Set(int index, long value){Array.Copy(m_elements, 0, m_elements, index, m_size);}
public java.io.ReaderIterator iterator(){return new java.io.NoHeaderReader(this);}
public virtual void SetSource(IFunctionSource source){this._functionSource = source;}
public virtual void UnpeerVpc(Vpc vpc){_vpc = vpc;}
public virtual bool IsBare(ICommand command){return bare;}
public java.util.HashMap<K, V>.EmptyMap(){return new java.util.HashMap<K, V>.EmptyMap(this._enclosing);}
public void Add(T value){_list.Add(value);_size += value.Length;}
public string GetQueueURL(string queue){return GetQueueURL(queue, null);}
public link attributes { get; set; }
public callerReference(CallerReference callerReference){this.callerReference = callerReference;}
public ExpressionResult Evaluate(int row, int column){return Evaluate(row, column);}
public SheetPrintArea(ISheetPrintArea area){_printArea = area;}
public new shape group(parent, anchor){return new shape group(this, parent, anchor);}
public QueryConfigHandler(QueryConfigHandler queryConfigHandler){_queryConfigHandler = queryConfigHandler;}
public bool IsHierarchical(int dimension){return _hierarchical;}
public int valueAt(int index){return array[index];}
public Segment Update(Segment segment){this.Segment = segment;}
public virtual IParseTree GetLastParseTree(int token){return this.ParseTree(token);}
public virtual NGit.Cache.CacheEntry Init(string path, string stage){return Init(path, stage, null);}
public void DisassociateSigninDelegateGroups(){_enterprise.DisassociateSigninDelegateGroups();}
public virtual string ToString(IFormatProvider provider){return GetCanonicalName(provider);}
public virtual IList<Alarm> GetAlarms(MetricName metric){return alarms;}
public virtual Query GetQuery(XmlElement e){return GetQuery(e.XmlElement, e.Namespace, e.IsMissing);}
public DrillSidewaysResponse(DrillSidewaysRequest request){var options = new InvokeOptions();options.RequestMarshaller = DrillSidewaysRequestMarshaller.Instance;options.ResponseUnmarshaller = DrillSidewaysResponseUnmarshaller.Instance;return Invoke<DrillSidewaysResponse>(request, options);}
public FilteredNormalizer2 Create(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, bool? isLongOptimal){return Create(arg0, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg12, arg13, arg13, arg14, arg15, arg16, arg17, arg18, arg18, arg19, arg19, arg19, arg18, arg19, arg19, arg20, arg20, arg21, arg22, arg22, arg21, arg22, arg22, arg22, arg22, arg22, arg22, arg22, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg33, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32, arg32
public virtual GetIndustryInfoChildrenListResponse GetIndustryInfoChildrenListResponse(GetIndustryInfoChildrenRequest request){return GetIndustryInfoChildrenListResponse(request);}
public virtual string Format(IToken token){return Token.ToString(parser, enablePositionIncrements, token.start, token.end);}
public EnvironmentRequest(string applicationName, string environmentName){return new EnvironmentRequest(applicationName, environmentName, null);}
public virtual void put(char c){if (m_len >= m_buf.size){throw new System.IO.IOException("Buffer is full");}m_buf[m_len++] = c;}
public override void Write(int v){Write(v);}
public virtual void SetFunctionToSpread(ITreeFunction func){this.function = func;}
public void SetTokenType(string type){this.Type = type;}
public void TranslateUnicode(ICell row, char[] text, int start, int end){TranslateUnicode(row, start, end);}
public void write(char[] b) throws IOException{write(b, 0, b.Length);}
public virtual void compact(){_le.compact();}
public virtual ICollection<AccessPoint> GetAccessPoints(){return AccessPointHelper.ListReferences(GetAccessPoints());}
public virtual IHierarchyGroup Get(int level){return _h1.Get(level, null);}
public override void Status(){SubmoduleRunner.Run(null, null, null);}
public Filter(string name, bool value): base(name, value){this.m_filterName = name;this.m_filterValue = value;this.m_filterType = type;}
public virtual FilterDetail GetFilterDetail(){return _filterDetail;}
public NormalisedDecimal GetBaseTen(){return GetDecimal(BaseTen());}
public virtual HyperParameterTuningJobDetail GetHyperParameterTuningJobDetail(){return _hyperParameterTuningJobDetail;}
public virtual NGit.Api.VPCEndpointConnectionNotification CreateVPCEndpointConnectionNotification(string arn){return CreateVPCEndpointConnectionNotificationV1(arn, null);}
public virtual bool SortEquals(Sort sort){return sort.SortEquals(this);}
public override void Read(RecordInputStream in1){Read(in1.ReadShort());}
public string Get(string name){return Sharpen.Util.Get(object, properties, name);}
public virtual string ToString(){return Term.ToString();}
public int FindFirstNonNewLine(byte b){return FindFirstNonNewLine(b, 0);}
public static void CreateIdentity(EmailAddress identity, bool updateIdentity){_identity = identity;}
public override TreeFilter Clone(){return this;}
public virtual list_volume_ids(){return list_volume_ids();}
public virtual GetUsersResponse GetUsers(){return GetUsersInternal(true);}
public virtual void Start(){Start(null, null, 0);}
public virtual DateConstraint CreateDateConstraint(DateTime date){return new DateConstraint(date);}
public ASCIIFoldingFilter(TokenStream input){return new ASCIIFoldingFilter(input);}
public GetRepoBatchRequest(){return repoBatchRequest;}
public virtual CRNList Clone(){return (_crns == null)? new CRNList(_crns.Length) : _crns;}
public virtual bool Equals(object o){if (o is Antlr4.Runtime.Atn.Config){return true;}Antlr4.Runtime.Atn.Config other = (Antlr4.Runtime.Atn.Config)o;return false;}
public bool IsValid(int row){return _first_row == row;}
public virtual void Commit(ICommit commit){Commits.Add(commit);}
public void RemoveTags(int streamID){RemoveAllInternalTags(streamID);}
public override void SetValue(int newValue){object.CopyValue(backingArray, offset + _position, newValue);}
public virtual IChild GetNextChild(){return this.next_child;}
public DeleteCacheClusterRequest(string cacheClusterId){return new DeleteCacheClusterRequest(cacheClusterId);}
public string pattern(needle needle){return needle.pattern;}
public virtual string GetIdentityUsage(){return identityUsage;}
public override int put(int len){if (len > 0){return backingArray[offset + len];}backingArray[offset + len] = buffer.alloc(len);return backingArray[offset + len];}
public virtual CreateIngestionAccountResponse CreateIngestionAccount(CreateIngestionAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateIngestionAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateIngestionAccountResponseUnmarshaller.Instance;return Invoke<CreateIngestionAccountResponse>(request, options);}
public ChangeMessageVisibilityBatchRequestEntry(ChangeMessageVisibilityRequestEntry requestEntry){var request = new ChangeMessageVisibilityRequestEntry();request.EntryId = requestEntry.EntryId;request.ReceiptHandle = requestEntry.ReceiptHandle;return new ChangeMessageVisibilityBatchRequestEntry(request, requestEntry);}
public SpanBuilderFactory(ISpanBuilderFactory factory){_spanBuilderFactory = factory;}
public new header block(required size); ultimate resize(required size); eturn new header block(this, size);}
public bool hasNext(){return this._enclosing._next!= null;}
public virtual string GetShortMessage(){return _rc4.XorshortMessage;}
public void Set_field_6_res_to_zero(FieldIndex_6_res_value_pair_t value){_field_6_res = value;}
public virtual void Start(BundleContext ctx){this.m_ctx = ctx;this.m_start = ctx.Systems.CreateExternalRef(ctx.CreateExternalRef(ctx.Name));this.m_end = ctx.Systems.CreateExternalRef(ctx.Name);this.m_startOffset = ctx.Systems.CreateExternalRef(ctx.Name);this.m_endOffset = ctx.Systems.CreateExternalRef(ctx.Name);this.m_groups = new Dictionary<string, Sharpen.GroupHeader>
public CFRecordsAggregate Add(CFRecordsAggregate cfr){_cfRecordsAggregate = cfr.AggregateNode.AddChildRecordsAggregate(cfr);}
public virtual IList<Picture> GetImages(){return Sharpen.Collections.UnmodifiableList(GetImages(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
public override void Serialize(StreamOutput stream){stream.Write(field_1_recalc);}
public RoleSessionNameAttribute(string roleSessionName){_roleSessionName = roleSessionName;}
public bool IsShowJsonName(){return ShowJsonName;}
public void UpdateChannel(Channel channel){UpdateChannel(channel);}
public override bool IsDelete(){return false;}
public override IList<Job> GetJobs(){return base.GetJobs();}
public virtual ImportJobDetail GetImportJobDetail(){return importJobDetail;}
public virtual void Delete(TaskSet taskSet){Delete(taskSet.Id);}
public virtual int GetHighestPowerOfTwo(){return _le.GetHighestPowerOfTwo();}
public virtual void SetTag(string name){this.tag = name;}
public virtual void SetIdentityPoolUsage(NGit.IdentityPoolUsage poolUsage){_identityPoolUsage = poolUsage;}
public virtual UpdateServiceResponse UpdateService(UpdateServiceRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateServiceRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateServiceResponseUnmarshaller.Instance;return Invoke<UpdateServiceResponse>(request, options);}
public override int Read(int offset, int count, float[] value){if (offset >= 0){throw new java.nio.BufferOverflowException();}int end = offset + count;for (int i = offset; i < end; i++){byte b = value[i];if (b[i] == 0){return b[i];}}return b.ReadToEnd();}
public virtual void removeAt(int location){removeAt(location);}
public void close(){_writer.flush();}
public virtual string GetRevisionVersion(IndexCommit indexCommit){return indexCommit.GetRevision();}
public virtual bool IsConfigLineEqual(SourceLineInformation sourceLineInformation) {return SourceLineInformation.Equals(sourceLineInformation) && SourceLineInformation.Equals(sourceLineInformation) && SourceLineInformation.Equals(sourceLineInformation) && SourceLineInformation.Equals(sourceLineInformation) && SourceLineInformation.Equals(sourceLineInformation) && SourceLineInformation.Equals(sourceLineInformation) && SourceLineInformation.Equals(sourceLineInformation) && SourceLineInformation.Equals(sourceLineInformation) && SourceLineInformation.Equals(sourceLineInformation) && SourceLineInformation.Equals(sourceLineInformation) && SourceLineInformation.Equals(sourceLineInformation) && SourceLineInformation.Equals(sourceLineInformation) && SourceLineInformation.Equals(sourceLineInformation) && SourceLineInformation.Equals(sourceLineInformation) && SourceLineInformation.Equals(sourceLineInformation) && SourceLineInformation.Equals(sourceLineInformation) && SourceLineInformation.Equals(sourceLineInformation) && SourceLineInformation.Equals(sourceLineInformation) && SourceLineInformation.Equals(sourceLineInformation) && SourceLineInformation.Equals(sourceLineInformation) && SourceLineInformation.Equals(sourceLineInformation) == 0 && SourceLineInformation.
public virtual SentimentDetect detectSentiment(string appName){return detectSentiment(appName, 0);}
public virtual ICollection<FilePath> GetFiles(FilePathFilter filter){return GetFilesInternal(filter.Filter, filter.Options);}
public void SetStreamPosition(long value){CheckValue(value, "value");}
public void SetCellAt(int x, int y){BoundSheetRecord bsr = _sheet.GetBound(x, y);bsr.IsCellAt(x, y) = true;}
public virtual void write(java.io.OutputStream outputStream){throw new System.NotImplementedException();}
public void SetSubscriptionArn(string ARN){_subscriptionArn = ARN;}
public virtual string Get(int index){return mValues[index];}
public virtual void reset(){current = null;}
public virtual string GetDocumentationVersion(){return GetDocumentationVersion();}
public void UpdateShiftersAfterCellShift(ICellShiftEvent e){UpdateShiftersAfterCellShift(e.cells.Count, e.cells.Count);}
public virtual ResetInstanceRequest ResetRequest(InstanceRequest request){var options = new InvokeOptions();options.RequestMarshaller = ResetInstanceRequestMarshaller.Instance;options.ResponseUnmarshaller = ResetResponseUnmarshaller.Instance;return Invoke<ResetInstanceRequest>(request, options);}
public virtual void DeleteDomainName(string domainName){domainName = DomainNameUtils.RemovePrefix(domainName, true);}
public ElisionFilter(TokenStream stream, CharArraySet articles){return new ElisionFilter(stream, articles);}
public virtual void writeChar(char c){throw new System.NotImplementedException();}
public java.nio.charset.CoderResult getErrorResult(int length_1){return new java.nio.charset.CoderResult(status_code, message);}
public virtual void Dispose(){_reader.Dispose();}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(this.Name);out1.WriteByte(this.Type);out1.WriteShort(this.DefaultLength);}
public virtual void Cancel(){m_conversionTask = null;}
public bool Contains(object o){return map.ContainsKey(o);}
public override object Get(int index){return _basicFunctions[index];}
public virtual int size(){return this._enclosing._size;}
public virtual int compare(int start, int end){return cmp(start, end);}
public override string ToString(){return action.ToString();}
public virtual BrokerInstanceOptions GetBrokerInstanceOptions(){return brokerInstanceOptions;}
public virtual void Apply(CacheEntry e){Apply(e.GetKey(), e.getValue());}
public HSSFPalette GetCustomHSSFPalette(HSSFWorkbook workbook){return GetCustomHSSFPalette(workbook);}
public override string ToString(){return "ILock " + lock.GetHashCode().ToString("x") + " lock@" + lock.GetFile().GetName();}
public override FileMode GetMode(){return mode;}
public override byte ReadByte(){return delegate1.ReadByte();}
public virtual void Unmonitor(){this._enclosing.Unmonitor(this);}
public virtual java.util.Iterator<E> elementsIterator(int index){lock (this){return elementsIterator(index);}}
public virtual void SetChangeStatus(ChangeStatus status){this._enclosing.ChangeStatus = status;this._enclosing.submittedAt = time.UnixTime();}
public override int GetOperationType(){return _opType;}
public Type GetType(){return type;}
public virtual int size(){return this._enclosing._size;}
public virtual char unmappable_character_action(){return _charUnmap.Get(this);}
public virtual double Sum(double[] values){return Sum(values, 0, values.Length);}
public virtual IList<Snapshot> GetSnapshots(){return snapshots;}
public virtual AutoScalingInstance GetDetails(){return details;}
public virtual void SetSkipType(BlockSkipType type){this._enclosing.SetSkipType(type);}
public virtual MasterUserPassword GetMasterUserPassword(Connection connection){return password;}
public virtual void Highlight(string text, int score){if (score < 0){return;}Highlights(text, score);}
public override int size(){return this._enclosing.size();}
public virtual int GetBytesUsed(){return terminal.GetBytesUsed();}
public RelationalDatabaseInformation RelationalDatabase(AzureOperationRequest request, ICollection<string> options){var options = new InvokeOptions();options.RequestMarshaller = RelationalDatabaseRequestMarshaller.Instance;options.ResponseUnmarshaller = RelationalDatabaseResponseUnmarshaller.Instance;return Invoke<RelationalDatabaseInformation>(request, options);}
public override FieldFragList CreateFragList(FieldPhraseList other){return new FieldFragList(other);}
public int remaining(){return _buf.remaining();}
public virtual PublishRequest CreatePublishRequest(string topic, string message, string subject){var request = new PublishRequest();request.Topic = topic;request.Message = message;request.Subject = subject;return request;}
public SecurityGroup(string name, string password){return _securityGroupCreate(name, password, "password");}
public DirectoryCacheIterator(DirectoryCacheIterator iterator){_iterator = iterator;}
public XF At(int offset){return GetXFAt(offset);}
public virtual void CopyStateFrom(State other){State = other;Sharpen.Collections.DeepCopy(m_states, 0, m_states.Length);}
public override bool LessThan(int shards){return shards < shards? true : false;}
public CloudFrontOriginAccessIdentityRequest parameters){_requestParameters = new Amazon.Runtime.Internal.QueryParameters();_crafterIdentityRequest = parameters;}
public SynonymFilter(TokenStream input){return new SynonymFilter(input);}
public override long Read(){return _buf.Length;}
public List<int> (int capacity){if (_capacity > 0){return new List<int>(_capacity);}return new List<int>(_capacity);}
public virtual void Delete(IPSet set){_ipSet = set;}
public TextBox(Shape parent, int start, int end){CheckParent(parent, end);start = start;end = end;}
public SegmentIndexInput GetIndexInput(string segment){return null;}
public virtual DescribeTargetGroupsResponse DescribeTargetGroups(DescribeTargetGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeTargetGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeTargetGroupsResponseUnmarshaller.Instance;return Invoke<DescribeTargetGroupsResponse>(request, options);}
public override Expression Get(int row, int column){return GetExpressionForValue(row, column);}
public string Format(int l){return GetRuleName(l);}
public GetIndustryInfoLineageListRequest(List<string> defaultParams){if (defaultParams == null){defaultParams = new Dictionary<string, string>();}return new GetIndustryInfoLineageListRequest(defaultParams, true);}
public override void SetFilePointer(long filePointer){filePointer = filePointer;}
public void MergeCells(Cells cells){MergeCells(cells.First, cells.Last);}
public Credential SetCredentials(Credentials credential){return credential;}
public void LinkSharedFormulaRecord(SharedFormulaRecord record){LinkSharedFormulaRecord(record);}
public virtual VersioningReport GetCampaignVersions(){return campaign.GetVersions();}
public virtual void Add(IText text){this._enclosing.Add(text);}
public int valueAt(int index){return array[index];}
public spotRequestIds(int value){_spotRequestId = value;}
public virtual QuerySpec CreateQuery(int size){return new QuerySpec(this, size);}
public virtual DiffEntry Read(Stream in1){return ReadRecord(in1, 0);}
public virtual IList<IToken> GetNextTokens(ITokenStream st){return GetNextTokens(st, null);}
public virtual double Evaluate(IFunction function){return _function.Evaluate(function.getArguments());}
public virtual void ModifyTrafficMirrorSession(TrafficMirrorSession session){Sharpen.Transport.ModifyTrafficMirrorSession(session);}
public virtual void SetTag(string tag){this.m_tag = tag;}
public IWorkbook GetWorkbook(IEvaluationContext context){return _workbook;}
public TokenFilter Create(TokenStream stream){return new TokenFilter(stream);}
public java.util.regex.Matcher matcher = java.util.regex.Matcher.current();this.matcher = matcher;}
public virtual NGit.Api.GCMChannel Describe(){return channelState;}
public virtual void Start(Fleet fleet){m_fleet = fleet;}
public virtual NGit.Api.Match AddMatch(Match match){this.m_match = match;this.m_replacement = match;return this;}
public virtual IModelTemplate GetModelTemplate(string name){return null;}
public virtual void grow(int count){for (int i = 0; i < count; i++){grow(count);}}
public override double Evaluate(double value){return base.Evaluate(value);}
public virtual double log(x){return m_log(x);}
public virtual ObjectId GetOldObjectId(){return oldObjectId;}
public virtual void SetPromptText(string promptText){this.promptText = promptText;this.value = null;this.secure = null;}
public static java.nio.CharStream newUnbufferedCharStream(java.io.Reader reader, int bufferSize){return new java.nio.ReadWriteHeapCharStream(reader, bufferSize);}
public virtual TagsCollection Tags(CloudPhoto photo){return Tags;}
public virtual string GetValue(){return mValue;}
public virtual bool IsCurrentVersionEqualTo(string version){return string.CompareOrdinal(Version, version, StringComparison.Ordinal)!= 0;}
public bool GetHideObj(){return hide_obj;}
public virtual GetActivitiesResponse GetActivities(GetActivitiesRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetActivitiesRequestMarshaller.Instance;options.ResponseUnmarshaller = GetActivitiesResponseUnmarshaller.Instance;return Invoke<GetActivitiesResponse>(request, options);}
public string GetRemoteUrl(){return remote;}
public virtual VersioningInformation GetModelVersions(){return versioningInformation.GetModelVersions();}
public string query = null; default = null;return query;}
public ValueSource[] ValueSources { get; internal set; }
public override int size(){return this._enclosing._size;}
public void SetCellContent(ICell content){_cellContent = content;}
public WorkGroup(FSEntry<FSEntry<FSEntry>> entry){this.entry = entry;this.group = entry;}
public virtual IList<ScheduledAction> GetScheduledActions(){return scheduledActions;}
public virtual DescribeEndpointConnectionNotificationsResponse DescribeEndpointConnectionNotifications(DescribeEndpointConnectionNotificationsResponse rsp){return Invoke<DescribeEndpointConnectionNotificationsResponse>(rsp, null, null);}
public string GetBatchUrl(){return batchUrl;}
public virtual string VerifyEmailAddress(string email){return verifyEmailAddress(email, false);}
public customer gateway request(type){_request = new DefaultCustomerGatewayRequest(type);_request.type = type;_request.bgpAsn = bgpAsn;}
public virtual void SetDataSource(DataSource s){m_data = s;}
public SharedFormulaRecordEx(Stream in1){return _in1.ReadHeader();}
public virtual E GetChildAt(int index){return this.GetChildAt(index);}
public override void Serialize(ObjectOutput out1){out1.Write(this.GetType().GetTypeInfo().Assembly.GetName().Name);}
public override Stream CreateDecryptStream(Stream input){return new StreamDecryptionStream(input);}
public virtual void SetExpectedAttribute(string expectedAttr){expectedAttr = expectedAttr;}
public virtual IList<ConfigurationRevision> GetConfigurationRevisions(){return configurationRevisions;}
public virtual void copyTo(byte[] buffer){object[] newElements = new object[m_buf.Length + 1];System.Array.Copy(m_elements, 0, newElements, 0, m_elements.Length);}
public virtual string GetFeatureTags(){return list.GetFeatureTags();}
public virtual V remove(K key){object[] values = map.remove(key);if (values == null){values = default(V);}foreach (V value in values){remove(key, value);}return values[key] = null;}
public virtual void SetEvalValue(double evalValue){this.value = evalValue;}
public PatternReplaceCharFilterFactory(){return this;}
public string GetInflectionForm(int id){return inflectionForm[forId];}
public int getIndexId(){return fieldIndex;}
public virtual QueryLoggingInformation QueryLoggingInformation(){return QueryLoggingInformation;}
public static IndexAndTaxonomyRevision Create(IndexWriter iWriter, TaxoWriter iWriter){return Create(iWriter, null);}
public virtual SQLException {throw new System.NotImplementedException();}
public virtual byte[] GetBytes(){return GetBytes(false);}
public virtual void SetProtect(bool protect){this.protect = protect;}
